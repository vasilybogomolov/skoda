!function(e,t){"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(e,t){function i(e){var t=!!e&&"length"in e&&e.length,i=oe.type(e);return"function"===i||oe.isWindow(e)?!1:"array"===i||0===t||"number"==typeof t&&t>0&&t-1 in e}function n(e,t,i){if(oe.isFunction(t))return oe.grep(e,function(e,n){return!!t.call(e,n,e)!==i});if(t.nodeType)return oe.grep(e,function(e){return e===t!==i});if("string"==typeof t){if(ge.test(t))return oe.filter(t,e,i);t=oe.filter(t,e)}return oe.grep(e,function(e){return Z.call(t,e)>-1!==i})}function s(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function o(e){var t={};return oe.each(e.match(_e)||[],function(e,i){t[i]=!0}),t}function r(){K.removeEventListener("DOMContentLoaded",r),e.removeEventListener("load",r),oe.ready()}function a(){this.expando=oe.expando+a.uid++}function l(e,t,i){var n;if(void 0===i&&1===e.nodeType)if(n="data-"+t.replace(Ae,"-$&").toLowerCase(),i=e.getAttribute(n),"string"==typeof i){try{i="true"===i?!0:"false"===i?!1:"null"===i?null:+i+""===i?+i:Te.test(i)?oe.parseJSON(i):i}catch(s){}Ee.set(e,t,i)}else i=void 0;return i}function c(e,t,i,n){var s,o=1,r=20,a=n?function(){return n.cur()}:function(){return oe.css(e,t,"")},l=a(),c=i&&i[3]||(oe.cssNumber[t]?"":"px"),u=(oe.cssNumber[t]||"px"!==c&&+l)&&Ie.exec(oe.css(e,t));if(u&&u[3]!==c){c=c||u[3],i=i||[],u=+l||1;do o=o||".5",u/=o,oe.style(e,t,u+c);while(o!==(o=a()/l)&&1!==o&&--r)}return i&&(u=+u||+l||0,s=i[1]?u+(i[1]+1)*i[2]:+i[2],n&&(n.unit=c,n.start=u,n.end=s)),s}function u(e,t){var i="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&oe.nodeName(e,t)?oe.merge([e],i):i}function h(e,t){for(var i=0,n=e.length;n>i;i++)je.set(e[i],"globalEval",!t||je.get(t[i],"globalEval"))}function d(e,t,i,n,s){for(var o,r,a,l,c,d,p=t.createDocumentFragment(),f=[],g=0,m=e.length;m>g;g++)if(o=e[g],o||0===o)if("object"===oe.type(o))oe.merge(f,o.nodeType?[o]:o);else if(Ne.test(o)){for(r=r||p.appendChild(t.createElement("div")),a=(Se.exec(o)||["",""])[1].toLowerCase(),l=Oe[a]||Oe._default,r.innerHTML=l[1]+oe.htmlPrefilter(o)+l[2],d=l[0];d--;)r=r.lastChild;oe.merge(f,r.childNodes),r=p.firstChild,r.textContent=""}else f.push(t.createTextNode(o));for(p.textContent="",g=0;o=f[g++];)if(n&&oe.inArray(o,n)>-1)s&&s.push(o);else if(c=oe.contains(o.ownerDocument,o),r=u(p.appendChild(o),"script"),c&&h(r),i)for(d=0;o=r[d++];)Re.test(o.type||"")&&i.push(o);return p}function p(){return!0}function f(){return!1}function g(){try{return K.activeElement}catch(e){}}function m(e,t,i,n,s,o){var r,a;if("object"==typeof t){"string"!=typeof i&&(n=n||i,i=void 0);for(a in t)m(e,a,i,n,t[a],o);return e}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),s===!1)s=f;else if(!s)return e;return 1===o&&(r=s,s=function(e){return oe().off(e),r.apply(this,arguments)},s.guid=r.guid||(r.guid=oe.guid++)),e.each(function(){oe.event.add(this,t,s,n,i)})}function v(e,t){return oe.nodeName(e,"table")&&oe.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function y(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function w(e){var t=$e.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function b(e,t){var i,n,s,o,r,a,l,c;if(1===t.nodeType){if(je.hasData(e)&&(o=je.access(e),r=je.set(t,o),c=o.events)){delete r.handle,r.events={};for(s in c)for(i=0,n=c[s].length;n>i;i++)oe.event.add(t,s,c[s][i])}Ee.hasData(e)&&(a=Ee.access(e),l=oe.extend({},a),Ee.set(t,l))}}function _(e,t){var i=t.nodeName.toLowerCase();"input"===i&&Me.test(e.type)?t.checked=e.checked:"input"!==i&&"textarea"!==i||(t.defaultValue=e.defaultValue)}function x(e,t,i,n){t=X.apply([],t);var s,o,r,a,l,c,h=0,p=e.length,f=p-1,g=t[0],m=oe.isFunction(g);if(m||p>1&&"string"==typeof g&&!ne.checkClone&&Be.test(g))return e.each(function(s){var o=e.eq(s);m&&(t[0]=g.call(this,s,o.html())),x(o,t,i,n)});if(p&&(s=d(t,e[0].ownerDocument,!1,e,n),o=s.firstChild,1===s.childNodes.length&&(s=o),o||n)){for(r=oe.map(u(s,"script"),y),a=r.length;p>h;h++)l=s,h!==f&&(l=oe.clone(l,!0,!0),a&&oe.merge(r,u(l,"script"))),i.call(e[h],l,h);if(a)for(c=r[r.length-1].ownerDocument,oe.map(r,w),h=0;a>h;h++)l=r[h],Re.test(l.type||"")&&!je.access(l,"globalEval")&&oe.contains(c,l)&&(l.src?oe._evalUrl&&oe._evalUrl(l.src):oe.globalEval(l.textContent.replace(qe,"")))}return e}function k(e,t,i){for(var n,s=t?oe.filter(t,e):e,o=0;null!=(n=s[o]);o++)i||1!==n.nodeType||oe.cleanData(u(n)),n.parentNode&&(i&&oe.contains(n.ownerDocument,n)&&h(u(n,"script")),n.parentNode.removeChild(n));return e}function C(e,t){var i=oe(t.createElement(e)).appendTo(t.body),n=oe.css(i[0],"display");return i.detach(),n}function j(e){var t=K,i=Je[e];return i||(i=C(e,t),"none"!==i&&i||(Ve=(Ve||oe("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=Ve[0].contentDocument,t.write(),t.close(),i=C(e,t),Ve.detach()),Je[e]=i),i}function E(e,t,i){var n,s,o,r,a=e.style;return i=i||Ge(e),r=i?i.getPropertyValue(t)||i[t]:void 0,""!==r&&void 0!==r||oe.contains(e.ownerDocument,e)||(r=oe.style(e,t)),i&&!ne.pixelMarginRight()&&Ke.test(r)&&Ue.test(t)&&(n=a.width,s=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=r,r=i.width,a.width=n,a.minWidth=s,a.maxWidth=o),void 0!==r?r+"":r}function T(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function A(e){if(e in nt)return e;for(var t=e[0].toUpperCase()+e.slice(1),i=it.length;i--;)if(e=it[i]+t,e in nt)return e}function P(e,t,i){var n=Ie.exec(t);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):t}function I(e,t,i,n,s){for(var o=i===(n?"border":"content")?4:"width"===t?1:0,r=0;4>o;o+=2)"margin"===i&&(r+=oe.css(e,i+De[o],!0,s)),n?("content"===i&&(r-=oe.css(e,"padding"+De[o],!0,s)),"margin"!==i&&(r-=oe.css(e,"border"+De[o]+"Width",!0,s))):(r+=oe.css(e,"padding"+De[o],!0,s),"padding"!==i&&(r+=oe.css(e,"border"+De[o]+"Width",!0,s)));return r}function D(e,t,i){var n=!0,s="width"===t?e.offsetWidth:e.offsetHeight,o=Ge(e),r="border-box"===oe.css(e,"boxSizing",!1,o);if(0>=s||null==s){if(s=E(e,t,o),(0>s||null==s)&&(s=e.style[t]),Ke.test(s))return s;n=r&&(ne.boxSizingReliable()||s===e.style[t]),s=parseFloat(s)||0}return s+I(e,t,i||(r?"border":"content"),n,o)+"px"}function L(e,t){for(var i,n,s,o=[],r=0,a=e.length;a>r;r++)n=e[r],n.style&&(o[r]=je.get(n,"olddisplay"),i=n.style.display,t?(o[r]||"none"!==i||(n.style.display=""),""===n.style.display&&Le(n)&&(o[r]=je.access(n,"olddisplay",j(n.nodeName)))):(s=Le(n),"none"===i&&s||je.set(n,"olddisplay",s?i:oe.css(n,"display"))));for(r=0;a>r;r++)n=e[r],n.style&&(t&&"none"!==n.style.display&&""!==n.style.display||(n.style.display=t?o[r]||"":"none"));return e}function M(e,t,i,n,s){return new M.prototype.init(e,t,i,n,s)}function S(){return e.setTimeout(function(){st=void 0}),st=oe.now()}function R(e,t){var i,n=0,s={height:e};for(t=t?1:0;4>n;n+=2-t)i=De[n],s["margin"+i]=s["padding"+i]=e;return t&&(s.opacity=s.width=e),s}function O(e,t,i){for(var n,s=(F.tweeners[t]||[]).concat(F.tweeners["*"]),o=0,r=s.length;r>o;o++)if(n=s[o].call(i,t,e))return n}function N(e,t,i){var n,s,o,r,a,l,c,u,h=this,d={},p=e.style,f=e.nodeType&&Le(e),g=je.get(e,"fxshow");i.queue||(a=oe._queueHooks(e,"fx"),null==a.unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,h.always(function(){h.always(function(){a.unqueued--,oe.queue(e,"fx").length||a.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],c=oe.css(e,"display"),u="none"===c?je.get(e,"olddisplay")||j(e.nodeName):c,"inline"===u&&"none"===oe.css(e,"float")&&(p.display="inline-block")),i.overflow&&(p.overflow="hidden",h.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]}));for(n in t)if(s=t[n],rt.exec(s)){if(delete t[n],o=o||"toggle"===s,s===(f?"hide":"show")){if("show"!==s||!g||void 0===g[n])continue;f=!0}d[n]=g&&g[n]||oe.style(e,n)}else c=void 0;if(oe.isEmptyObject(d))"inline"===("none"===c?j(e.nodeName):c)&&(p.display=c);else{g?"hidden"in g&&(f=g.hidden):g=je.access(e,"fxshow",{}),o&&(g.hidden=!f),f?oe(e).show():h.done(function(){oe(e).hide()}),h.done(function(){var t;je.remove(e,"fxshow");for(t in d)oe.style(e,t,d[t])});for(n in d)r=O(f?g[n]:0,n,h),n in g||(g[n]=r.start,f&&(r.end=r.start,r.start="width"===n||"height"===n?1:0))}}function W(e,t){var i,n,s,o,r;for(i in e)if(n=oe.camelCase(i),s=t[n],o=e[i],oe.isArray(o)&&(s=o[1],o=e[i]=o[0]),i!==n&&(e[n]=o,delete e[i]),r=oe.cssHooks[n],r&&"expand"in r){o=r.expand(o),delete e[n];for(i in o)i in e||(e[i]=o[i],t[i]=s)}else t[n]=s}function F(e,t,i){var n,s,o=0,r=F.prefilters.length,a=oe.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var t=st||S(),i=Math.max(0,c.startTime+c.duration-t),n=i/c.duration||0,o=1-n,r=0,l=c.tweens.length;l>r;r++)c.tweens[r].run(o);return a.notifyWith(e,[c,o,i]),1>o&&l?i:(a.resolveWith(e,[c]),!1)},c=a.promise({elem:e,props:oe.extend({},t),opts:oe.extend(!0,{specialEasing:{},easing:oe.easing._default},i),originalProperties:t,originalOptions:i,startTime:st||S(),duration:i.duration,tweens:[],createTween:function(t,i){var n=oe.Tween(e,c.opts,t,i,c.opts.specialEasing[t]||c.opts.easing);return c.tweens.push(n),n},stop:function(t){var i=0,n=t?c.tweens.length:0;if(s)return this;for(s=!0;n>i;i++)c.tweens[i].run(1);return t?(a.notifyWith(e,[c,1,0]),a.resolveWith(e,[c,t])):a.rejectWith(e,[c,t]),this}}),u=c.props;for(W(u,c.opts.specialEasing);r>o;o++)if(n=F.prefilters[o].call(c,e,u,c.opts))return oe.isFunction(n.stop)&&(oe._queueHooks(c.elem,c.opts.queue).stop=oe.proxy(n.stop,n)),n;return oe.map(u,O,c),oe.isFunction(c.opts.start)&&c.opts.start.call(e,c),oe.fx.timer(oe.extend(l,{elem:e,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}function H(e){return e.getAttribute&&e.getAttribute("class")||""}function z(e){return function(t,i){"string"!=typeof t&&(i=t,t="*");var n,s=0,o=t.toLowerCase().match(_e)||[];if(oe.isFunction(i))for(;n=o[s++];)"+"===n[0]?(n=n.slice(1)||"*",(e[n]=e[n]||[]).unshift(i)):(e[n]=e[n]||[]).push(i)}}function Y(e,t,i,n){function s(a){var l;return o[a]=!0,oe.each(e[a]||[],function(e,a){var c=a(t,i,n);return"string"!=typeof c||r||o[c]?r?!(l=c):void 0:(t.dataTypes.unshift(c),s(c),!1)}),l}var o={},r=e===Et;return s(t.dataTypes[0])||!o["*"]&&s("*")}function B(e,t){var i,n,s=oe.ajaxSettings.flatOptions||{};for(i in t)void 0!==t[i]&&((s[i]?e:n||(n={}))[i]=t[i]);return n&&oe.extend(!0,e,n),e}function $(e,t,i){for(var n,s,o,r,a=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=e.mimeType||t.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)o=l[0];else{for(s in i){if(!l[0]||e.converters[s+" "+l[0]]){o=s;break}r||(r=s)}o=o||r}return o?(o!==l[0]&&l.unshift(o),i[o]):void 0}function q(e,t,i,n){var s,o,r,a,l,c={},u=e.dataTypes.slice();if(u[1])for(r in e.converters)c[r.toLowerCase()]=e.converters[r];for(o=u.shift();o;)if(e.responseFields[o]&&(i[e.responseFields[o]]=t),!l&&n&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=o,o=u.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(r=c[l+" "+o]||c["* "+o],!r)for(s in c)if(a=s.split(" "),a[1]===o&&(r=c[l+" "+a[0]]||c["* "+a[0]])){r===!0?r=c[s]:c[s]!==!0&&(o=a[0],u.unshift(a[1]));break}if(r!==!0)if(r&&e["throws"])t=r(t);else try{t=r(t)}catch(h){return{state:"parsererror",error:r?h:"No conversion from "+l+" to "+o}}}return{state:"success",data:t}}function V(e,t,i,n){var s;if(oe.isArray(t))oe.each(t,function(t,s){i||It.test(e)?n(e,s):V(e+"["+("object"==typeof s&&null!=s?t:"")+"]",s,i,n)});else if(i||"object"!==oe.type(t))n(e,t);else for(s in t)V(e+"["+s+"]",t[s],i,n)}function J(e){return oe.isWindow(e)?e:9===e.nodeType&&e.defaultView}var U=[],K=e.document,G=U.slice,X=U.concat,Q=U.push,Z=U.indexOf,ee={},te=ee.toString,ie=ee.hasOwnProperty,ne={},se="2.2.4",oe=function(e,t){return new oe.fn.init(e,t)},re=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ae=/^-ms-/,le=/-([\da-z])/gi,ce=function(e,t){return t.toUpperCase()};oe.fn=oe.prototype={jquery:se,constructor:oe,selector:"",length:0,toArray:function(){return G.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:G.call(this)},pushStack:function(e){var t=oe.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e){return oe.each(this,e)},map:function(e){return this.pushStack(oe.map(this,function(t,i){return e.call(t,i,t)}))},slice:function(){return this.pushStack(G.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,i=+e+(0>e?t:0);return this.pushStack(i>=0&&t>i?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:Q,sort:U.sort,splice:U.splice},oe.extend=oe.fn.extend=function(){var e,t,i,n,s,o,r=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof r&&(c=r,r=arguments[a]||{},a++),"object"==typeof r||oe.isFunction(r)||(r={}),a===l&&(r=this,a--);l>a;a++)if(null!=(e=arguments[a]))for(t in e)i=r[t],n=e[t],r!==n&&(c&&n&&(oe.isPlainObject(n)||(s=oe.isArray(n)))?(s?(s=!1,o=i&&oe.isArray(i)?i:[]):o=i&&oe.isPlainObject(i)?i:{},r[t]=oe.extend(c,o,n)):void 0!==n&&(r[t]=n));return r},oe.extend({expando:"jQuery"+(se+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===oe.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){var t=e&&e.toString();return!oe.isArray(e)&&t-parseFloat(t)+1>=0},isPlainObject:function(e){var t;if("object"!==oe.type(e)||e.nodeType||oe.isWindow(e))return!1;if(e.constructor&&!ie.call(e,"constructor")&&!ie.call(e.constructor.prototype||{},"isPrototypeOf"))return!1;for(t in e);return void 0===t||ie.call(e,t)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?ee[te.call(e)]||"object":typeof e},globalEval:function(e){var t,i=eval;e=oe.trim(e),e&&(1===e.indexOf("use strict")?(t=K.createElement("script"),t.text=e,K.head.appendChild(t).parentNode.removeChild(t)):i(e))},camelCase:function(e){return e.replace(ae,"ms-").replace(le,ce)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t){var n,s=0;if(i(e))for(n=e.length;n>s&&t.call(e[s],s,e[s])!==!1;s++);else for(s in e)if(t.call(e[s],s,e[s])===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(re,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(i(Object(e))?oe.merge(n,"string"==typeof e?[e]:e):Q.call(n,e)),n},inArray:function(e,t,i){return null==t?-1:Z.call(t,e,i)},merge:function(e,t){for(var i=+t.length,n=0,s=e.length;i>n;n++)e[s++]=t[n];return e.length=s,e},grep:function(e,t,i){for(var n,s=[],o=0,r=e.length,a=!i;r>o;o++)n=!t(e[o],o),n!==a&&s.push(e[o]);return s},map:function(e,t,n){var s,o,r=0,a=[];if(i(e))for(s=e.length;s>r;r++)o=t(e[r],r,n),null!=o&&a.push(o);else for(r in e)o=t(e[r],r,n),null!=o&&a.push(o);return X.apply([],a)},guid:1,proxy:function(e,t){var i,n,s;return"string"==typeof t&&(i=e[t],t=e,e=i),oe.isFunction(e)?(n=G.call(arguments,2),s=function(){return e.apply(t||this,n.concat(G.call(arguments)))},s.guid=e.guid=e.guid||oe.guid++,s):void 0},now:Date.now,support:ne}),"function"==typeof Symbol&&(oe.fn[Symbol.iterator]=U[Symbol.iterator]),oe.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){ee["[object "+t+"]"]=t.toLowerCase()});var ue=function(e){function t(e,t,i,n){var s,o,r,a,l,c,h,p,f=t&&t.ownerDocument,g=t?t.nodeType:9;if(i=i||[],"string"!=typeof e||!e||1!==g&&9!==g&&11!==g)return i;if(!n&&((t?t.ownerDocument||t:H)!==L&&D(t),t=t||L,S)){if(11!==g&&(c=ve.exec(e)))if(s=c[1]){if(9===g){if(!(r=t.getElementById(s)))return i;if(r.id===s)return i.push(r),i}else if(f&&(r=f.getElementById(s))&&W(t,r)&&r.id===s)return i.push(r),i}else{if(c[2])return Q.apply(i,t.getElementsByTagName(e)),i;if((s=c[3])&&_.getElementsByClassName&&t.getElementsByClassName)return Q.apply(i,t.getElementsByClassName(s)),i}if(_.qsa&&!q[e+" "]&&(!R||!R.test(e))){if(1!==g)f=t,p=e;else if("object"!==t.nodeName.toLowerCase()){for((a=t.getAttribute("id"))?a=a.replace(we,"\\$&"):t.setAttribute("id",a=F),h=j(e),o=h.length,l=de.test(a)?"#"+a:"[id='"+a+"']";o--;)h[o]=l+" "+d(h[o]);p=h.join(","),f=ye.test(e)&&u(t.parentNode)||t}if(p)try{return Q.apply(i,f.querySelectorAll(p)),i}catch(m){}finally{a===F&&t.removeAttribute("id")}}}return T(e.replace(ae,"$1"),t,i,n)}function i(){function e(i,n){return t.push(i+" ")>x.cacheLength&&delete e[t.shift()],e[i+" "]=n}var t=[];return e}function n(e){return e[F]=!0,e}function s(e){var t=L.createElement("div");try{return!!e(t)}catch(i){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var i=e.split("|"),n=i.length;n--;)x.attrHandle[i[n]]=t}function r(e,t){var i=t&&e,n=i&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||J)-(~e.sourceIndex||J);if(n)return n;if(i)for(;i=i.nextSibling;)if(i===t)return-1;return e?1:-1}function a(e){return function(t){var i=t.nodeName.toLowerCase();return"input"===i&&t.type===e}}function l(e){return function(t){var i=t.nodeName.toLowerCase();return("input"===i||"button"===i)&&t.type===e}}function c(e){return n(function(t){return t=+t,n(function(i,n){for(var s,o=e([],i.length,t),r=o.length;r--;)i[s=o[r]]&&(i[s]=!(n[s]=i[s]))})})}function u(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function h(){}function d(e){for(var t=0,i=e.length,n="";i>t;t++)n+=e[t].value;return n}function p(e,t,i){var n=t.dir,s=i&&"parentNode"===n,o=Y++;return t.first?function(t,i,o){for(;t=t[n];)if(1===t.nodeType||s)return e(t,i,o)}:function(t,i,r){var a,l,c,u=[z,o];if(r){for(;t=t[n];)if((1===t.nodeType||s)&&e(t,i,r))return!0}else for(;t=t[n];)if(1===t.nodeType||s){if(c=t[F]||(t[F]={}),l=c[t.uniqueID]||(c[t.uniqueID]={}),(a=l[n])&&a[0]===z&&a[1]===o)return u[2]=a[2];if(l[n]=u,u[2]=e(t,i,r))return!0}}}function f(e){return e.length>1?function(t,i,n){for(var s=e.length;s--;)if(!e[s](t,i,n))return!1;return!0}:e[0]}function g(e,i,n){for(var s=0,o=i.length;o>s;s++)t(e,i[s],n);return n}function m(e,t,i,n,s){for(var o,r=[],a=0,l=e.length,c=null!=t;l>a;a++)(o=e[a])&&(i&&!i(o,n,s)||(r.push(o),c&&t.push(a)));return r}function v(e,t,i,s,o,r){return s&&!s[F]&&(s=v(s)),o&&!o[F]&&(o=v(o,r)),n(function(n,r,a,l){var c,u,h,d=[],p=[],f=r.length,v=n||g(t||"*",a.nodeType?[a]:a,[]),y=!e||!n&&t?v:m(v,d,e,a,l),w=i?o||(n?e:f||s)?[]:r:y;if(i&&i(y,w,a,l),s)for(c=m(w,p),s(c,[],a,l),u=c.length;u--;)(h=c[u])&&(w[p[u]]=!(y[p[u]]=h));if(n){if(o||e){if(o){for(c=[],u=w.length;u--;)(h=w[u])&&c.push(y[u]=h);o(null,w=[],c,l)}for(u=w.length;u--;)(h=w[u])&&(c=o?ee(n,h):d[u])>-1&&(n[c]=!(r[c]=h))}}else w=m(w===r?w.splice(f,w.length):w),o?o(null,r,w,l):Q.apply(r,w)})}function y(e){for(var t,i,n,s=e.length,o=x.relative[e[0].type],r=o||x.relative[" "],a=o?1:0,l=p(function(e){return e===t},r,!0),c=p(function(e){return ee(t,e)>-1},r,!0),u=[function(e,i,n){var s=!o&&(n||i!==A)||((t=i).nodeType?l(e,i,n):c(e,i,n));return t=null,s}];s>a;a++)if(i=x.relative[e[a].type])u=[p(f(u),i)];else{if(i=x.filter[e[a].type].apply(null,e[a].matches),i[F]){for(n=++a;s>n&&!x.relative[e[n].type];n++);return v(a>1&&f(u),a>1&&d(e.slice(0,a-1).concat({value:" "===e[a-2].type?"*":""})).replace(ae,"$1"),i,n>a&&y(e.slice(a,n)),s>n&&y(e=e.slice(n)),s>n&&d(e))}u.push(i)}return f(u)}function w(e,i){var s=i.length>0,o=e.length>0,r=function(n,r,a,l,c){var u,h,d,p=0,f="0",g=n&&[],v=[],y=A,w=n||o&&x.find.TAG("*",c),b=z+=null==y?1:Math.random()||.1,_=w.length;for(c&&(A=r===L||r||c);f!==_&&null!=(u=w[f]);f++){if(o&&u){for(h=0,r||u.ownerDocument===L||(D(u),a=!S);d=e[h++];)if(d(u,r||L,a)){l.push(u);break}c&&(z=b)}s&&((u=!d&&u)&&p--,n&&g.push(u))}if(p+=f,s&&f!==p){for(h=0;d=i[h++];)d(g,v,r,a);if(n){if(p>0)for(;f--;)g[f]||v[f]||(v[f]=G.call(l));v=m(v)}Q.apply(l,v),c&&!n&&v.length>0&&p+i.length>1&&t.uniqueSort(l)}return c&&(z=b,A=y),g};return s?n(r):r}var b,_,x,k,C,j,E,T,A,P,I,D,L,M,S,R,O,N,W,F="sizzle"+1*new Date,H=e.document,z=0,Y=0,B=i(),$=i(),q=i(),V=function(e,t){return e===t&&(I=!0),0},J=1<<31,U={}.hasOwnProperty,K=[],G=K.pop,X=K.push,Q=K.push,Z=K.slice,ee=function(e,t){for(var i=0,n=e.length;n>i;i++)if(e[i]===t)return i;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ie="[\\x20\\t\\r\\n\\f]",ne="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",se="\\["+ie+"*("+ne+")(?:"+ie+"*([*^$|!~]?=)"+ie+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ne+"))|)"+ie+"*\\]",oe=":("+ne+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+se+")*)|.*)\\)|)",re=new RegExp(ie+"+","g"),ae=new RegExp("^"+ie+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ie+"+$","g"),le=new RegExp("^"+ie+"*,"+ie+"*"),ce=new RegExp("^"+ie+"*([>+~]|"+ie+")"+ie+"*"),ue=new RegExp("="+ie+"*([^\\]'\"]*?)"+ie+"*\\]","g"),he=new RegExp(oe),de=new RegExp("^"+ne+"$"),pe={ID:new RegExp("^#("+ne+")"),CLASS:new RegExp("^\\.("+ne+")"),TAG:new RegExp("^("+ne+"|[*])"),ATTR:new RegExp("^"+se),PSEUDO:new RegExp("^"+oe),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ie+"*(even|odd|(([+-]|)(\\d*)n|)"+ie+"*(?:([+-]|)"+ie+"*(\\d+)|))"+ie+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ie+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ie+"*((?:-\\d)?\\d*)"+ie+"*\\)|)(?=[^-]|$)","i")},fe=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,me=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ye=/[+~]/,we=/'|\\/g,be=new RegExp("\\\\([\\da-f]{1,6}"+ie+"?|("+ie+")|.)","ig"),_e=function(e,t,i){var n="0x"+t-65536;return n!==n||i?t:0>n?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},xe=function(){D()};try{Q.apply(K=Z.call(H.childNodes),H.childNodes),K[H.childNodes.length].nodeType}catch(ke){Q={apply:K.length?function(e,t){X.apply(e,Z.call(t))}:function(e,t){for(var i=e.length,n=0;e[i++]=t[n++];);e.length=i-1}}}_=t.support={},C=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},D=t.setDocument=function(e){var t,i,n=e?e.ownerDocument||e:H;return n!==L&&9===n.nodeType&&n.documentElement?(L=n,M=L.documentElement,S=!C(L),(i=L.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",xe,!1):i.attachEvent&&i.attachEvent("onunload",xe)),_.attributes=s(function(e){return e.className="i",!e.getAttribute("className")}),_.getElementsByTagName=s(function(e){return e.appendChild(L.createComment("")),!e.getElementsByTagName("*").length}),_.getElementsByClassName=me.test(L.getElementsByClassName),_.getById=s(function(e){return M.appendChild(e).id=F,!L.getElementsByName||!L.getElementsByName(F).length}),_.getById?(x.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&S){var i=t.getElementById(e);return i?[i]:[]}},x.filter.ID=function(e){var t=e.replace(be,_e);return function(e){return e.getAttribute("id")===t}}):(delete x.find.ID,x.filter.ID=function(e){var t=e.replace(be,_e);return function(e){var i="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return i&&i.value===t}}),x.find.TAG=_.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):_.qsa?t.querySelectorAll(e):void 0}:function(e,t){var i,n=[],s=0,o=t.getElementsByTagName(e);if("*"===e){for(;i=o[s++];)1===i.nodeType&&n.push(i);return n}return o},x.find.CLASS=_.getElementsByClassName&&function(e,t){return"undefined"!=typeof t.getElementsByClassName&&S?t.getElementsByClassName(e):void 0},O=[],R=[],(_.qsa=me.test(L.querySelectorAll))&&(s(function(e){M.appendChild(e).innerHTML="<a id='"+F+"'></a><select id='"+F+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&R.push("[*^$]="+ie+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||R.push("\\["+ie+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+F+"-]").length||R.push("~="),e.querySelectorAll(":checked").length||R.push(":checked"),e.querySelectorAll("a#"+F+"+*").length||R.push(".#.+[+~]")}),s(function(e){var t=L.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&R.push("name"+ie+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||R.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),R.push(",.*:")})),(_.matchesSelector=me.test(N=M.matches||M.webkitMatchesSelector||M.mozMatchesSelector||M.oMatchesSelector||M.msMatchesSelector))&&s(function(e){_.disconnectedMatch=N.call(e,"div"),N.call(e,"[s!='']:x"),O.push("!=",oe)}),R=R.length&&new RegExp(R.join("|")),O=O.length&&new RegExp(O.join("|")),t=me.test(M.compareDocumentPosition),W=t||me.test(M.contains)?function(e,t){var i=9===e.nodeType?e.documentElement:e,n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},V=t?function(e,t){if(e===t)return I=!0,0;var i=!e.compareDocumentPosition-!t.compareDocumentPosition;return i?i:(i=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&i||!_.sortDetached&&t.compareDocumentPosition(e)===i?e===L||e.ownerDocument===H&&W(H,e)?-1:t===L||t.ownerDocument===H&&W(H,t)?1:P?ee(P,e)-ee(P,t):0:4&i?-1:1)}:function(e,t){if(e===t)return I=!0,0;var i,n=0,s=e.parentNode,o=t.parentNode,a=[e],l=[t];if(!s||!o)return e===L?-1:t===L?1:s?-1:o?1:P?ee(P,e)-ee(P,t):0;if(s===o)return r(e,t);for(i=e;i=i.parentNode;)a.unshift(i);for(i=t;i=i.parentNode;)l.unshift(i);for(;a[n]===l[n];)n++;return n?r(a[n],l[n]):a[n]===H?-1:l[n]===H?1:0},L):L},t.matches=function(e,i){return t(e,null,null,i)},t.matchesSelector=function(e,i){if((e.ownerDocument||e)!==L&&D(e),i=i.replace(ue,"='$1']"),_.matchesSelector&&S&&!q[i+" "]&&(!O||!O.test(i))&&(!R||!R.test(i)))try{var n=N.call(e,i);if(n||_.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(s){}return t(i,L,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==L&&D(e),W(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==L&&D(e);var i=x.attrHandle[t.toLowerCase()],n=i&&U.call(x.attrHandle,t.toLowerCase())?i(e,t,!S):void 0;return void 0!==n?n:_.attributes||!S?e.getAttribute(t):(n=e.getAttributeNode(t))&&n.specified?n.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,i=[],n=0,s=0;if(I=!_.detectDuplicates,P=!_.sortStable&&e.slice(0),e.sort(V),I){for(;t=e[s++];)t===e[s]&&(n=i.push(s));for(;n--;)e.splice(i[n],1)}return P=null,e},k=t.getText=function(e){var t,i="",n=0,s=e.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)i+=k(e)}else if(3===s||4===s)return e.nodeValue}else for(;t=e[n++];)i+=k(t);return i},x=t.selectors={cacheLength:50,createPseudo:n,match:pe,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(be,_e),e[3]=(e[3]||e[4]||e[5]||"").replace(be,_e),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,i=!e[6]&&e[2];return pe.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":i&&he.test(i)&&(t=j(i,!0))&&(t=i.indexOf(")",i.length-t)-i.length)&&(e[0]=e[0].slice(0,t),e[2]=i.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(be,_e).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=B[e+" "];return t||(t=new RegExp("(^|"+ie+")"+e+"("+ie+"|$)"))&&B(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,i,n){return function(s){var o=t.attr(s,e);return null==o?"!="===i:i?(o+="","="===i?o===n:"!="===i?o!==n:"^="===i?n&&0===o.indexOf(n):"*="===i?n&&o.indexOf(n)>-1:"$="===i?n&&o.slice(-n.length)===n:"~="===i?(" "+o.replace(re," ")+" ").indexOf(n)>-1:"|="===i?o===n||o.slice(0,n.length+1)===n+"-":!1):!0}},CHILD:function(e,t,i,n,s){var o="nth"!==e.slice(0,3),r="last"!==e.slice(-4),a="of-type"===t;return 1===n&&0===s?function(e){return!!e.parentNode}:function(t,i,l){var c,u,h,d,p,f,g=o!==r?"nextSibling":"previousSibling",m=t.parentNode,v=a&&t.nodeName.toLowerCase(),y=!l&&!a,w=!1;if(m){if(o){for(;g;){for(d=t;d=d[g];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=g="only"===e&&!f&&"nextSibling"}return!0}if(f=[r?m.firstChild:m.lastChild],r&&y){for(d=m,h=d[F]||(d[F]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),c=u[e]||[],p=c[0]===z&&c[1],w=p&&c[2],d=p&&m.childNodes[p];d=++p&&d&&d[g]||(w=p=0)||f.pop();)if(1===d.nodeType&&++w&&d===t){u[e]=[z,p,w];break}}else if(y&&(d=t,h=d[F]||(d[F]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),c=u[e]||[],p=c[0]===z&&c[1],w=p),w===!1)for(;(d=++p&&d&&d[g]||(w=p=0)||f.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++w||(y&&(h=d[F]||(d[F]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),u[e]=[z,w]),d!==t)););return w-=s,w===n||w%n===0&&w/n>=0}}},PSEUDO:function(e,i){var s,o=x.pseudos[e]||x.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return o[F]?o(i):o.length>1?(s=[e,e,"",i],x.setFilters.hasOwnProperty(e.toLowerCase())?n(function(e,t){for(var n,s=o(e,i),r=s.length;r--;)n=ee(e,s[r]),e[n]=!(t[n]=s[r])}):function(e){return o(e,0,s)}):o}},pseudos:{not:n(function(e){var t=[],i=[],s=E(e.replace(ae,"$1"));return s[F]?n(function(e,t,i,n){for(var o,r=s(e,null,n,[]),a=e.length;a--;)(o=r[a])&&(e[a]=!(t[a]=o))}):function(e,n,o){return t[0]=e,s(t,null,o,i),t[0]=null,!i.pop()}}),has:n(function(e){return function(i){return t(e,i).length>0}}),contains:n(function(e){return e=e.replace(be,_e),function(t){return(t.textContent||t.innerText||k(t)).indexOf(e)>-1}}),lang:n(function(e){return de.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(be,_e).toLowerCase(),function(t){var i;do if(i=S?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return i=i.toLowerCase(),i===e||0===i.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var i=e.location&&e.location.hash;return i&&i.slice(1)===t.id},root:function(e){return e===M},focus:function(e){return e===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!x.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return fe.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:c(function(){return[0]}),last:c(function(e,t){return[t-1]}),eq:c(function(e,t,i){return[0>i?i+t:i]}),even:c(function(e,t){for(var i=0;t>i;i+=2)e.push(i);return e}),odd:c(function(e,t){
for(var i=1;t>i;i+=2)e.push(i);return e}),lt:c(function(e,t,i){for(var n=0>i?i+t:i;--n>=0;)e.push(n);return e}),gt:c(function(e,t,i){for(var n=0>i?i+t:i;++n<t;)e.push(n);return e})}},x.pseudos.nth=x.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})x.pseudos[b]=a(b);for(b in{submit:!0,reset:!0})x.pseudos[b]=l(b);return h.prototype=x.filters=x.pseudos,x.setFilters=new h,j=t.tokenize=function(e,i){var n,s,o,r,a,l,c,u=$[e+" "];if(u)return i?0:u.slice(0);for(a=e,l=[],c=x.preFilter;a;){n&&!(s=le.exec(a))||(s&&(a=a.slice(s[0].length)||a),l.push(o=[])),n=!1,(s=ce.exec(a))&&(n=s.shift(),o.push({value:n,type:s[0].replace(ae," ")}),a=a.slice(n.length));for(r in x.filter)!(s=pe[r].exec(a))||c[r]&&!(s=c[r](s))||(n=s.shift(),o.push({value:n,type:r,matches:s}),a=a.slice(n.length));if(!n)break}return i?a.length:a?t.error(e):$(e,l).slice(0)},E=t.compile=function(e,t){var i,n=[],s=[],o=q[e+" "];if(!o){for(t||(t=j(e)),i=t.length;i--;)o=y(t[i]),o[F]?n.push(o):s.push(o);o=q(e,w(s,n)),o.selector=e}return o},T=t.select=function(e,t,i,n){var s,o,r,a,l,c="function"==typeof e&&e,h=!n&&j(e=c.selector||e);if(i=i||[],1===h.length){if(o=h[0]=h[0].slice(0),o.length>2&&"ID"===(r=o[0]).type&&_.getById&&9===t.nodeType&&S&&x.relative[o[1].type]){if(t=(x.find.ID(r.matches[0].replace(be,_e),t)||[])[0],!t)return i;c&&(t=t.parentNode),e=e.slice(o.shift().value.length)}for(s=pe.needsContext.test(e)?0:o.length;s--&&(r=o[s],!x.relative[a=r.type]);)if((l=x.find[a])&&(n=l(r.matches[0].replace(be,_e),ye.test(o[0].type)&&u(t.parentNode)||t))){if(o.splice(s,1),e=n.length&&d(o),!e)return Q.apply(i,n),i;break}}return(c||E(e,h))(n,t,!S,i,!t||ye.test(e)&&u(t.parentNode)||t),i},_.sortStable=F.split("").sort(V).join("")===F,_.detectDuplicates=!!I,D(),_.sortDetached=s(function(e){return 1&e.compareDocumentPosition(L.createElement("div"))}),s(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,i){return i?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),_.attributes&&s(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,i){return i||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),s(function(e){return null==e.getAttribute("disabled")})||o(te,function(e,t,i){var n;return i?void 0:e[t]===!0?t.toLowerCase():(n=e.getAttributeNode(t))&&n.specified?n.value:null}),t}(e);oe.find=ue,oe.expr=ue.selectors,oe.expr[":"]=oe.expr.pseudos,oe.uniqueSort=oe.unique=ue.uniqueSort,oe.text=ue.getText,oe.isXMLDoc=ue.isXML,oe.contains=ue.contains;var he=function(e,t,i){for(var n=[],s=void 0!==i;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(s&&oe(e).is(i))break;n.push(e)}return n},de=function(e,t){for(var i=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&i.push(e);return i},pe=oe.expr.match.needsContext,fe=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,ge=/^.[^:#\[\.,]*$/;oe.filter=function(e,t,i){var n=t[0];return i&&(e=":not("+e+")"),1===t.length&&1===n.nodeType?oe.find.matchesSelector(n,e)?[n]:[]:oe.find.matches(e,oe.grep(t,function(e){return 1===e.nodeType}))},oe.fn.extend({find:function(e){var t,i=this.length,n=[],s=this;if("string"!=typeof e)return this.pushStack(oe(e).filter(function(){for(t=0;i>t;t++)if(oe.contains(s[t],this))return!0}));for(t=0;i>t;t++)oe.find(e,s[t],n);return n=this.pushStack(i>1?oe.unique(n):n),n.selector=this.selector?this.selector+" "+e:e,n},filter:function(e){return this.pushStack(n(this,e||[],!1))},not:function(e){return this.pushStack(n(this,e||[],!0))},is:function(e){return!!n(this,"string"==typeof e&&pe.test(e)?oe(e):e||[],!1).length}});var me,ve=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ye=oe.fn.init=function(e,t,i){var n,s;if(!e)return this;if(i=i||me,"string"==typeof e){if(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:ve.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||i).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof oe?t[0]:t,oe.merge(this,oe.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:K,!0)),fe.test(n[1])&&oe.isPlainObject(t))for(n in t)oe.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return s=K.getElementById(n[2]),s&&s.parentNode&&(this.length=1,this[0]=s),this.context=K,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):oe.isFunction(e)?void 0!==i.ready?i.ready(e):e(oe):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),oe.makeArray(e,this))};ye.prototype=oe.fn,me=oe(K);var we=/^(?:parents|prev(?:Until|All))/,be={children:!0,contents:!0,next:!0,prev:!0};oe.fn.extend({has:function(e){var t=oe(e,this),i=t.length;return this.filter(function(){for(var e=0;i>e;e++)if(oe.contains(this,t[e]))return!0})},closest:function(e,t){for(var i,n=0,s=this.length,o=[],r=pe.test(e)||"string"!=typeof e?oe(e,t||this.context):0;s>n;n++)for(i=this[n];i&&i!==t;i=i.parentNode)if(i.nodeType<11&&(r?r.index(i)>-1:1===i.nodeType&&oe.find.matchesSelector(i,e))){o.push(i);break}return this.pushStack(o.length>1?oe.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?Z.call(oe(e),this[0]):Z.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(oe.uniqueSort(oe.merge(this.get(),oe(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),oe.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return he(e,"parentNode")},parentsUntil:function(e,t,i){return he(e,"parentNode",i)},next:function(e){return s(e,"nextSibling")},prev:function(e){return s(e,"previousSibling")},nextAll:function(e){return he(e,"nextSibling")},prevAll:function(e){return he(e,"previousSibling")},nextUntil:function(e,t,i){return he(e,"nextSibling",i)},prevUntil:function(e,t,i){return he(e,"previousSibling",i)},siblings:function(e){return de((e.parentNode||{}).firstChild,e)},children:function(e){return de(e.firstChild)},contents:function(e){return e.contentDocument||oe.merge([],e.childNodes)}},function(e,t){oe.fn[e]=function(i,n){var s=oe.map(this,t,i);return"Until"!==e.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=oe.filter(n,s)),this.length>1&&(be[e]||oe.uniqueSort(s),we.test(e)&&s.reverse()),this.pushStack(s)}});var _e=/\S+/g;oe.Callbacks=function(e){e="string"==typeof e?o(e):oe.extend({},e);var t,i,n,s,r=[],a=[],l=-1,c=function(){for(s=e.once,n=t=!0;a.length;l=-1)for(i=a.shift();++l<r.length;)r[l].apply(i[0],i[1])===!1&&e.stopOnFalse&&(l=r.length,i=!1);e.memory||(i=!1),t=!1,s&&(r=i?[]:"")},u={add:function(){return r&&(i&&!t&&(l=r.length-1,a.push(i)),function n(t){oe.each(t,function(t,i){oe.isFunction(i)?e.unique&&u.has(i)||r.push(i):i&&i.length&&"string"!==oe.type(i)&&n(i)})}(arguments),i&&!t&&c()),this},remove:function(){return oe.each(arguments,function(e,t){for(var i;(i=oe.inArray(t,r,i))>-1;)r.splice(i,1),l>=i&&l--}),this},has:function(e){return e?oe.inArray(e,r)>-1:r.length>0},empty:function(){return r&&(r=[]),this},disable:function(){return s=a=[],r=i="",this},disabled:function(){return!r},lock:function(){return s=a=[],i||(r=i=""),this},locked:function(){return!!s},fireWith:function(e,i){return s||(i=i||[],i=[e,i.slice?i.slice():i],a.push(i),t||c()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!n}};return u},oe.extend({Deferred:function(e){var t=[["resolve","done",oe.Callbacks("once memory"),"resolved"],["reject","fail",oe.Callbacks("once memory"),"rejected"],["notify","progress",oe.Callbacks("memory")]],i="pending",n={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},then:function(){var e=arguments;return oe.Deferred(function(i){oe.each(t,function(t,o){var r=oe.isFunction(e[t])&&e[t];s[o[1]](function(){var e=r&&r.apply(this,arguments);e&&oe.isFunction(e.promise)?e.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[o[0]+"With"](this===n?i.promise():this,r?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?oe.extend(e,n):n}},s={};return n.pipe=n.then,oe.each(t,function(e,o){var r=o[2],a=o[3];n[o[1]]=r.add,a&&r.add(function(){i=a},t[1^e][2].disable,t[2][2].lock),s[o[0]]=function(){return s[o[0]+"With"](this===s?n:this,arguments),this},s[o[0]+"With"]=r.fireWith}),n.promise(s),e&&e.call(s,s),s},when:function(e){var t,i,n,s=0,o=G.call(arguments),r=o.length,a=1!==r||e&&oe.isFunction(e.promise)?r:0,l=1===a?e:oe.Deferred(),c=function(e,i,n){return function(s){i[e]=this,n[e]=arguments.length>1?G.call(arguments):s,n===t?l.notifyWith(i,n):--a||l.resolveWith(i,n)}};if(r>1)for(t=new Array(r),i=new Array(r),n=new Array(r);r>s;s++)o[s]&&oe.isFunction(o[s].promise)?o[s].promise().progress(c(s,i,t)).done(c(s,n,o)).fail(l.reject):--a;return a||l.resolveWith(n,o),l.promise()}});var xe;oe.fn.ready=function(e){return oe.ready.promise().done(e),this},oe.extend({isReady:!1,readyWait:1,holdReady:function(e){e?oe.readyWait++:oe.ready(!0)},ready:function(e){(e===!0?--oe.readyWait:oe.isReady)||(oe.isReady=!0,e!==!0&&--oe.readyWait>0||(xe.resolveWith(K,[oe]),oe.fn.triggerHandler&&(oe(K).triggerHandler("ready"),oe(K).off("ready"))))}}),oe.ready.promise=function(t){return xe||(xe=oe.Deferred(),"complete"===K.readyState||"loading"!==K.readyState&&!K.documentElement.doScroll?e.setTimeout(oe.ready):(K.addEventListener("DOMContentLoaded",r),e.addEventListener("load",r))),xe.promise(t)},oe.ready.promise();var ke=function(e,t,i,n,s,o,r){var a=0,l=e.length,c=null==i;if("object"===oe.type(i)){s=!0;for(a in i)ke(e,t,a,i[a],!0,o,r)}else if(void 0!==n&&(s=!0,oe.isFunction(n)||(r=!0),c&&(r?(t.call(e,n),t=null):(c=t,t=function(e,t,i){return c.call(oe(e),i)})),t))for(;l>a;a++)t(e[a],i,r?n:n.call(e[a],a,t(e[a],i)));return s?e:c?t.call(e):l?t(e[0],i):o},Ce=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};a.uid=1,a.prototype={register:function(e,t){var i=t||{};return e.nodeType?e[this.expando]=i:Object.defineProperty(e,this.expando,{value:i,writable:!0,configurable:!0}),e[this.expando]},cache:function(e){if(!Ce(e))return{};var t=e[this.expando];return t||(t={},Ce(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,i){var n,s=this.cache(e);if("string"==typeof t)s[t]=i;else for(n in t)s[n]=t[n];return s},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][t]},access:function(e,t,i){var n;return void 0===t||t&&"string"==typeof t&&void 0===i?(n=this.get(e,t),void 0!==n?n:this.get(e,oe.camelCase(t))):(this.set(e,t,i),void 0!==i?i:t)},remove:function(e,t){var i,n,s,o=e[this.expando];if(void 0!==o){if(void 0===t)this.register(e);else{oe.isArray(t)?n=t.concat(t.map(oe.camelCase)):(s=oe.camelCase(t),t in o?n=[t,s]:(n=s,n=n in o?[n]:n.match(_e)||[])),i=n.length;for(;i--;)delete o[n[i]]}(void 0===t||oe.isEmptyObject(o))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!oe.isEmptyObject(t)}};var je=new a,Ee=new a,Te=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Ae=/[A-Z]/g;oe.extend({hasData:function(e){return Ee.hasData(e)||je.hasData(e)},data:function(e,t,i){return Ee.access(e,t,i)},removeData:function(e,t){Ee.remove(e,t)},_data:function(e,t,i){return je.access(e,t,i)},_removeData:function(e,t){je.remove(e,t)}}),oe.fn.extend({data:function(e,t){var i,n,s,o=this[0],r=o&&o.attributes;if(void 0===e){if(this.length&&(s=Ee.get(o),1===o.nodeType&&!je.get(o,"hasDataAttrs"))){for(i=r.length;i--;)r[i]&&(n=r[i].name,0===n.indexOf("data-")&&(n=oe.camelCase(n.slice(5)),l(o,n,s[n])));je.set(o,"hasDataAttrs",!0)}return s}return"object"==typeof e?this.each(function(){Ee.set(this,e)}):ke(this,function(t){var i,n;if(o&&void 0===t){if(i=Ee.get(o,e)||Ee.get(o,e.replace(Ae,"-$&").toLowerCase()),void 0!==i)return i;if(n=oe.camelCase(e),i=Ee.get(o,n),void 0!==i)return i;if(i=l(o,n,void 0),void 0!==i)return i}else n=oe.camelCase(e),this.each(function(){var i=Ee.get(this,n);Ee.set(this,n,t),e.indexOf("-")>-1&&void 0!==i&&Ee.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){Ee.remove(this,e)})}}),oe.extend({queue:function(e,t,i){var n;return e?(t=(t||"fx")+"queue",n=je.get(e,t),i&&(!n||oe.isArray(i)?n=je.access(e,t,oe.makeArray(i)):n.push(i)),n||[]):void 0},dequeue:function(e,t){t=t||"fx";var i=oe.queue(e,t),n=i.length,s=i.shift(),o=oe._queueHooks(e,t),r=function(){oe.dequeue(e,t)};"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===t&&i.unshift("inprogress"),delete o.stop,s.call(e,r,o)),!n&&o&&o.empty.fire()},_queueHooks:function(e,t){var i=t+"queueHooks";return je.get(e,i)||je.access(e,i,{empty:oe.Callbacks("once memory").add(function(){je.remove(e,[t+"queue",i])})})}}),oe.fn.extend({queue:function(e,t){var i=2;return"string"!=typeof e&&(t=e,e="fx",i--),arguments.length<i?oe.queue(this[0],e):void 0===t?this:this.each(function(){var i=oe.queue(this,e,t);oe._queueHooks(this,e),"fx"===e&&"inprogress"!==i[0]&&oe.dequeue(this,e)})},dequeue:function(e){return this.each(function(){oe.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var i,n=1,s=oe.Deferred(),o=this,r=this.length,a=function(){--n||s.resolveWith(o,[o])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";r--;)i=je.get(o[r],e+"queueHooks"),i&&i.empty&&(n++,i.empty.add(a));return a(),s.promise(t)}});var Pe=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Ie=new RegExp("^(?:([+-])=|)("+Pe+")([a-z%]*)$","i"),De=["Top","Right","Bottom","Left"],Le=function(e,t){return e=t||e,"none"===oe.css(e,"display")||!oe.contains(e.ownerDocument,e)},Me=/^(?:checkbox|radio)$/i,Se=/<([\w:-]+)/,Re=/^$|\/(?:java|ecma)script/i,Oe={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Oe.optgroup=Oe.option,Oe.tbody=Oe.tfoot=Oe.colgroup=Oe.caption=Oe.thead,Oe.th=Oe.td;var Ne=/<|&#?\w+;/;!function(){var e=K.createDocumentFragment(),t=e.appendChild(K.createElement("div")),i=K.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),t.appendChild(i),ne.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",ne.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var We=/^key/,Fe=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,He=/^([^.]*)(?:\.(.+)|)/;oe.event={global:{},add:function(e,t,i,n,s){var o,r,a,l,c,u,h,d,p,f,g,m=je.get(e);if(m)for(i.handler&&(o=i,i=o.handler,s=o.selector),i.guid||(i.guid=oe.guid++),(l=m.events)||(l=m.events={}),(r=m.handle)||(r=m.handle=function(t){return"undefined"!=typeof oe&&oe.event.triggered!==t.type?oe.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(_e)||[""],c=t.length;c--;)a=He.exec(t[c])||[],p=g=a[1],f=(a[2]||"").split(".").sort(),p&&(h=oe.event.special[p]||{},p=(s?h.delegateType:h.bindType)||p,h=oe.event.special[p]||{},u=oe.extend({type:p,origType:g,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&oe.expr.match.needsContext.test(s),namespace:f.join(".")},o),(d=l[p])||(d=l[p]=[],d.delegateCount=0,h.setup&&h.setup.call(e,n,f,r)!==!1||e.addEventListener&&e.addEventListener(p,r)),h.add&&(h.add.call(e,u),u.handler.guid||(u.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,u):d.push(u),oe.event.global[p]=!0)},remove:function(e,t,i,n,s){var o,r,a,l,c,u,h,d,p,f,g,m=je.hasData(e)&&je.get(e);if(m&&(l=m.events)){for(t=(t||"").match(_e)||[""],c=t.length;c--;)if(a=He.exec(t[c])||[],p=g=a[1],f=(a[2]||"").split(".").sort(),p){for(h=oe.event.special[p]||{},p=(n?h.delegateType:h.bindType)||p,d=l[p]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),r=o=d.length;o--;)u=d[o],!s&&g!==u.origType||i&&i.guid!==u.guid||a&&!a.test(u.namespace)||n&&n!==u.selector&&("**"!==n||!u.selector)||(d.splice(o,1),u.selector&&d.delegateCount--,h.remove&&h.remove.call(e,u));r&&!d.length&&(h.teardown&&h.teardown.call(e,f,m.handle)!==!1||oe.removeEvent(e,p,m.handle),delete l[p])}else for(p in l)oe.event.remove(e,p+t[c],i,n,!0);oe.isEmptyObject(l)&&je.remove(e,"handle events")}},dispatch:function(e){e=oe.event.fix(e);var t,i,n,s,o,r=[],a=G.call(arguments),l=(je.get(this,"events")||{})[e.type]||[],c=oe.event.special[e.type]||{};if(a[0]=e,e.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,e)!==!1){for(r=oe.event.handlers.call(this,e,l),t=0;(s=r[t++])&&!e.isPropagationStopped();)for(e.currentTarget=s.elem,i=0;(o=s.handlers[i++])&&!e.isImmediatePropagationStopped();)e.rnamespace&&!e.rnamespace.test(o.namespace)||(e.handleObj=o,e.data=o.data,n=((oe.event.special[o.origType]||{}).handle||o.handler).apply(s.elem,a),void 0!==n&&(e.result=n)===!1&&(e.preventDefault(),e.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,e),e.result}},handlers:function(e,t){var i,n,s,o,r=[],a=t.delegateCount,l=e.target;if(a&&l.nodeType&&("click"!==e.type||isNaN(e.button)||e.button<1))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==e.type)){for(n=[],i=0;a>i;i++)o=t[i],s=o.selector+" ",void 0===n[s]&&(n[s]=o.needsContext?oe(s,this).index(l)>-1:oe.find(s,this,null,[l]).length),n[s]&&n.push(o);n.length&&r.push({elem:l,handlers:n})}return a<t.length&&r.push({elem:this,handlers:t.slice(a)}),r},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var i,n,s,o=t.button;return null==e.pageX&&null!=t.clientX&&(i=e.target.ownerDocument||K,n=i.documentElement,s=i.body,e.pageX=t.clientX+(n&&n.scrollLeft||s&&s.scrollLeft||0)-(n&&n.clientLeft||s&&s.clientLeft||0),e.pageY=t.clientY+(n&&n.scrollTop||s&&s.scrollTop||0)-(n&&n.clientTop||s&&s.clientTop||0)),e.which||void 0===o||(e.which=1&o?1:2&o?3:4&o?2:0),e}},fix:function(e){if(e[oe.expando])return e;var t,i,n,s=e.type,o=e,r=this.fixHooks[s];for(r||(this.fixHooks[s]=r=Fe.test(s)?this.mouseHooks:We.test(s)?this.keyHooks:{}),n=r.props?this.props.concat(r.props):this.props,e=new oe.Event(o),t=n.length;t--;)i=n[t],e[i]=o[i];return e.target||(e.target=K),3===e.target.nodeType&&(e.target=e.target.parentNode),r.filter?r.filter(e,o):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==g()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===g()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&oe.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return oe.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},oe.removeEvent=function(e,t,i){e.removeEventListener&&e.removeEventListener(t,i)},oe.Event=function(e,t){return this instanceof oe.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?p:f):this.type=e,t&&oe.extend(this,t),this.timeStamp=e&&e.timeStamp||oe.now(),void(this[oe.expando]=!0)):new oe.Event(e,t)},oe.Event.prototype={constructor:oe.Event,isDefaultPrevented:f,isPropagationStopped:f,isImmediatePropagationStopped:f,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=p,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=p,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=p,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},oe.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){oe.event.special[e]={delegateType:t,bindType:t,handle:function(e){var i,n=this,s=e.relatedTarget,o=e.handleObj;return s&&(s===n||oe.contains(n,s))||(e.type=o.origType,i=o.handler.apply(this,arguments),e.type=t),i}}}),oe.fn.extend({on:function(e,t,i,n){return m(this,e,t,i,n)},one:function(e,t,i,n){return m(this,e,t,i,n,1)},off:function(e,t,i){var n,s;if(e&&e.preventDefault&&e.handleObj)return n=e.handleObj,oe(e.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof e){for(s in e)this.off(s,t,e[s]);return this}return t!==!1&&"function"!=typeof t||(i=t,t=void 0),i===!1&&(i=f),this.each(function(){oe.event.remove(this,e,i,t)})}});var ze=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,Ye=/<script|<style|<link/i,Be=/checked\s*(?:[^=]|=\s*.checked.)/i,$e=/^true\/(.*)/,qe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;oe.extend({htmlPrefilter:function(e){return e.replace(ze,"<$1></$2>")},clone:function(e,t,i){var n,s,o,r,a=e.cloneNode(!0),l=oe.contains(e.ownerDocument,e);if(!(ne.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||oe.isXMLDoc(e)))for(r=u(a),o=u(e),n=0,s=o.length;s>n;n++)_(o[n],r[n]);if(t)if(i)for(o=o||u(e),r=r||u(a),n=0,s=o.length;s>n;n++)b(o[n],r[n]);else b(e,a);return r=u(a,"script"),r.length>0&&h(r,!l&&u(e,"script")),a},cleanData:function(e){for(var t,i,n,s=oe.event.special,o=0;void 0!==(i=e[o]);o++)if(Ce(i)){if(t=i[je.expando]){if(t.events)for(n in t.events)s[n]?oe.event.remove(i,n):oe.removeEvent(i,n,t.handle);i[je.expando]=void 0}i[Ee.expando]&&(i[Ee.expando]=void 0)}}}),oe.fn.extend({domManip:x,detach:function(e){return k(this,e,!0)},remove:function(e){return k(this,e)},text:function(e){return ke(this,function(e){return void 0===e?oe.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return x(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=v(this,e);t.appendChild(e)}})},prepend:function(){return x(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=v(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return x(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return x(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(oe.cleanData(u(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return oe.clone(this,e,t)})},html:function(e){return ke(this,function(e){var t=this[0]||{},i=0,n=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Ye.test(e)&&!Oe[(Se.exec(e)||["",""])[1].toLowerCase()]){e=oe.htmlPrefilter(e);try{for(;n>i;i++)t=this[i]||{},1===t.nodeType&&(oe.cleanData(u(t,!1)),t.innerHTML=e);t=0}catch(s){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=[];return x(this,arguments,function(t){var i=this.parentNode;oe.inArray(this,e)<0&&(oe.cleanData(u(this)),i&&i.replaceChild(t,this))},e)}}),oe.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){oe.fn[e]=function(e){for(var i,n=[],s=oe(e),o=s.length-1,r=0;o>=r;r++)i=r===o?this:this.clone(!0),oe(s[r])[t](i),Q.apply(n,i.get());return this.pushStack(n)}});var Ve,Je={HTML:"block",BODY:"block"},Ue=/^margin/,Ke=new RegExp("^("+Pe+")(?!px)[a-z%]+$","i"),Ge=function(t){var i=t.ownerDocument.defaultView;return i&&i.opener||(i=e),i.getComputedStyle(t)},Xe=function(e,t,i,n){var s,o,r={};for(o in t)r[o]=e.style[o],e.style[o]=t[o];s=i.apply(e,n||[]);for(o in t)e.style[o]=r[o];return s},Qe=K.documentElement;!function(){function t(){a.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Qe.appendChild(r);var t=e.getComputedStyle(a);i="1%"!==t.top,o="2px"===t.marginLeft,n="4px"===t.width,a.style.marginRight="50%",s="4px"===t.marginRight,Qe.removeChild(r)}var i,n,s,o,r=K.createElement("div"),a=K.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",ne.clearCloneStyle="content-box"===a.style.backgroundClip,r.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",r.appendChild(a),oe.extend(ne,{pixelPosition:function(){return t(),i},boxSizingReliable:function(){return null==n&&t(),n},pixelMarginRight:function(){return null==n&&t(),s},reliableMarginLeft:function(){return null==n&&t(),o},reliableMarginRight:function(){var t,i=a.appendChild(K.createElement("div"));return i.style.cssText=a.style.cssText="-webkit-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",a.style.width="1px",Qe.appendChild(r),t=!parseFloat(e.getComputedStyle(i).marginRight),Qe.removeChild(r),a.removeChild(i),t}}))}();var Ze=/^(none|table(?!-c[ea]).+)/,et={position:"absolute",visibility:"hidden",display:"block"},tt={letterSpacing:"0",fontWeight:"400"},it=["Webkit","O","Moz","ms"],nt=K.createElement("div").style;oe.extend({cssHooks:{opacity:{get:function(e,t){if(t){var i=E(e,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,i,n){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var s,o,r,a=oe.camelCase(t),l=e.style;return t=oe.cssProps[a]||(oe.cssProps[a]=A(a)||a),r=oe.cssHooks[t]||oe.cssHooks[a],void 0===i?r&&"get"in r&&void 0!==(s=r.get(e,!1,n))?s:l[t]:(o=typeof i,"string"===o&&(s=Ie.exec(i))&&s[1]&&(i=c(e,t,s),o="number"),null!=i&&i===i&&("number"===o&&(i+=s&&s[3]||(oe.cssNumber[a]?"":"px")),ne.clearCloneStyle||""!==i||0!==t.indexOf("background")||(l[t]="inherit"),r&&"set"in r&&void 0===(i=r.set(e,i,n))||(l[t]=i)),void 0)}},css:function(e,t,i,n){var s,o,r,a=oe.camelCase(t);return t=oe.cssProps[a]||(oe.cssProps[a]=A(a)||a),r=oe.cssHooks[t]||oe.cssHooks[a],r&&"get"in r&&(s=r.get(e,!0,i)),void 0===s&&(s=E(e,t,n)),"normal"===s&&t in tt&&(s=tt[t]),""===i||i?(o=parseFloat(s),i===!0||isFinite(o)?o||0:s):s}}),oe.each(["height","width"],function(e,t){oe.cssHooks[t]={get:function(e,i,n){return i?Ze.test(oe.css(e,"display"))&&0===e.offsetWidth?Xe(e,et,function(){return D(e,t,n)}):D(e,t,n):void 0},set:function(e,i,n){var s,o=n&&Ge(e),r=n&&I(e,t,n,"border-box"===oe.css(e,"boxSizing",!1,o),o);return r&&(s=Ie.exec(i))&&"px"!==(s[3]||"px")&&(e.style[t]=i,i=oe.css(e,t)),P(e,i,r)}}}),oe.cssHooks.marginLeft=T(ne.reliableMarginLeft,function(e,t){return t?(parseFloat(E(e,"marginLeft"))||e.getBoundingClientRect().left-Xe(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px":void 0}),oe.cssHooks.marginRight=T(ne.reliableMarginRight,function(e,t){return t?Xe(e,{display:"inline-block"},E,[e,"marginRight"]):void 0}),oe.each({margin:"",padding:"",border:"Width"},function(e,t){oe.cssHooks[e+t]={expand:function(i){for(var n=0,s={},o="string"==typeof i?i.split(" "):[i];4>n;n++)s[e+De[n]+t]=o[n]||o[n-2]||o[0];return s}},Ue.test(e)||(oe.cssHooks[e+t].set=P)}),oe.fn.extend({css:function(e,t){return ke(this,function(e,t,i){var n,s,o={},r=0;if(oe.isArray(t)){for(n=Ge(e),s=t.length;s>r;r++)o[t[r]]=oe.css(e,t[r],!1,n);return o}return void 0!==i?oe.style(e,t,i):oe.css(e,t)},e,t,arguments.length>1)},show:function(){return L(this,!0)},hide:function(){return L(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Le(this)?oe(this).show():oe(this).hide()})}}),oe.Tween=M,M.prototype={constructor:M,init:function(e,t,i,n,s,o){this.elem=e,this.prop=i,this.easing=s||oe.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=n,this.unit=o||(oe.cssNumber[i]?"":"px")},cur:function(){var e=M.propHooks[this.prop];return e&&e.get?e.get(this):M.propHooks._default.get(this)},run:function(e){var t,i=M.propHooks[this.prop];return this.options.duration?this.pos=t=oe.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):M.propHooks._default.set(this),this}},M.prototype.init.prototype=M.prototype,M.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=oe.css(e.elem,e.prop,""),t&&"auto"!==t?t:0)},set:function(e){oe.fx.step[e.prop]?oe.fx.step[e.prop](e):1!==e.elem.nodeType||null==e.elem.style[oe.cssProps[e.prop]]&&!oe.cssHooks[e.prop]?e.elem[e.prop]=e.now:oe.style(e.elem,e.prop,e.now+e.unit)}}},M.propHooks.scrollTop=M.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},oe.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},oe.fx=M.prototype.init,oe.fx.step={};var st,ot,rt=/^(?:toggle|show|hide)$/,at=/queueHooks$/;oe.Animation=oe.extend(F,{tweeners:{"*":[function(e,t){var i=this.createTween(e,t);return c(i.elem,e,Ie.exec(t),i),i}]},tweener:function(e,t){oe.isFunction(e)?(t=e,e=["*"]):e=e.match(_e);for(var i,n=0,s=e.length;s>n;n++)i=e[n],F.tweeners[i]=F.tweeners[i]||[],F.tweeners[i].unshift(t)},prefilters:[N],prefilter:function(e,t){t?F.prefilters.unshift(e):F.prefilters.push(e)}}),oe.speed=function(e,t,i){var n=e&&"object"==typeof e?oe.extend({},e):{complete:i||!i&&t||oe.isFunction(e)&&e,duration:e,easing:i&&t||t&&!oe.isFunction(t)&&t};return n.duration=oe.fx.off?0:"number"==typeof n.duration?n.duration:n.duration in oe.fx.speeds?oe.fx.speeds[n.duration]:oe.fx.speeds._default,null!=n.queue&&n.queue!==!0||(n.queue="fx"),n.old=n.complete,n.complete=function(){oe.isFunction(n.old)&&n.old.call(this),n.queue&&oe.dequeue(this,n.queue)},n},oe.fn.extend({fadeTo:function(e,t,i,n){return this.filter(Le).css("opacity",0).show().end().animate({opacity:t},e,i,n)},animate:function(e,t,i,n){var s=oe.isEmptyObject(e),o=oe.speed(t,i,n),r=function(){var t=F(this,oe.extend({},e),o);(s||je.get(this,"finish"))&&t.stop(!0)};return r.finish=r,s||o.queue===!1?this.each(r):this.queue(o.queue,r)},stop:function(e,t,i){var n=function(e){var t=e.stop;delete e.stop,t(i)};return"string"!=typeof e&&(i=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,s=null!=e&&e+"queueHooks",o=oe.timers,r=je.get(this);if(s)r[s]&&r[s].stop&&n(r[s]);else for(s in r)r[s]&&r[s].stop&&at.test(s)&&n(r[s]);for(s=o.length;s--;)o[s].elem!==this||null!=e&&o[s].queue!==e||(o[s].anim.stop(i),t=!1,o.splice(s,1));!t&&i||oe.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,i=je.get(this),n=i[e+"queue"],s=i[e+"queueHooks"],o=oe.timers,r=n?n.length:0;for(i.finish=!0,oe.queue(this,e,[]),s&&s.stop&&s.stop.call(this,!0),t=o.length;t--;)o[t].elem===this&&o[t].queue===e&&(o[t].anim.stop(!0),o.splice(t,1));for(t=0;r>t;t++)n[t]&&n[t].finish&&n[t].finish.call(this);delete i.finish})}}),oe.each(["toggle","show","hide"],function(e,t){var i=oe.fn[t];oe.fn[t]=function(e,n,s){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(R(t,!0),e,n,s)}}),oe.each({slideDown:R("show"),slideUp:R("hide"),slideToggle:R("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){oe.fn[e]=function(e,i,n){return this.animate(t,e,i,n)}}),oe.timers=[],oe.fx.tick=function(){var e,t=0,i=oe.timers;for(st=oe.now();t<i.length;t++)e=i[t],e()||i[t]!==e||i.splice(t--,1);
i.length||oe.fx.stop(),st=void 0},oe.fx.timer=function(e){oe.timers.push(e),e()?oe.fx.start():oe.timers.pop()},oe.fx.interval=13,oe.fx.start=function(){ot||(ot=e.setInterval(oe.fx.tick,oe.fx.interval))},oe.fx.stop=function(){e.clearInterval(ot),ot=null},oe.fx.speeds={slow:600,fast:200,_default:400},oe.fn.delay=function(t,i){return t=oe.fx?oe.fx.speeds[t]||t:t,i=i||"fx",this.queue(i,function(i,n){var s=e.setTimeout(i,t);n.stop=function(){e.clearTimeout(s)}})},function(){var e=K.createElement("input"),t=K.createElement("select"),i=t.appendChild(K.createElement("option"));e.type="checkbox",ne.checkOn=""!==e.value,ne.optSelected=i.selected,t.disabled=!0,ne.optDisabled=!i.disabled,e=K.createElement("input"),e.value="t",e.type="radio",ne.radioValue="t"===e.value}();var lt,ct=oe.expr.attrHandle;oe.fn.extend({attr:function(e,t){return ke(this,oe.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){oe.removeAttr(this,e)})}}),oe.extend({attr:function(e,t,i){var n,s,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?oe.prop(e,t,i):(1===o&&oe.isXMLDoc(e)||(t=t.toLowerCase(),s=oe.attrHooks[t]||(oe.expr.match.bool.test(t)?lt:void 0)),void 0!==i?null===i?void oe.removeAttr(e,t):s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:(e.setAttribute(t,i+""),i):s&&"get"in s&&null!==(n=s.get(e,t))?n:(n=oe.find.attr(e,t),null==n?void 0:n))},attrHooks:{type:{set:function(e,t){if(!ne.radioValue&&"radio"===t&&oe.nodeName(e,"input")){var i=e.value;return e.setAttribute("type",t),i&&(e.value=i),t}}}},removeAttr:function(e,t){var i,n,s=0,o=t&&t.match(_e);if(o&&1===e.nodeType)for(;i=o[s++];)n=oe.propFix[i]||i,oe.expr.match.bool.test(i)&&(e[n]=!1),e.removeAttribute(i)}}),lt={set:function(e,t,i){return t===!1?oe.removeAttr(e,i):e.setAttribute(i,i),i}},oe.each(oe.expr.match.bool.source.match(/\w+/g),function(e,t){var i=ct[t]||oe.find.attr;ct[t]=function(e,t,n){var s,o;return n||(o=ct[t],ct[t]=s,s=null!=i(e,t,n)?t.toLowerCase():null,ct[t]=o),s}});var ut=/^(?:input|select|textarea|button)$/i,ht=/^(?:a|area)$/i;oe.fn.extend({prop:function(e,t){return ke(this,oe.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[oe.propFix[e]||e]})}}),oe.extend({prop:function(e,t,i){var n,s,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&oe.isXMLDoc(e)||(t=oe.propFix[t]||t,s=oe.propHooks[t]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(e,i,t))?n:e[t]=i:s&&"get"in s&&null!==(n=s.get(e,t))?n:e[t]},propHooks:{tabIndex:{get:function(e){var t=oe.find.attr(e,"tabindex");return t?parseInt(t,10):ut.test(e.nodeName)||ht.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),ne.optSelected||(oe.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),oe.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){oe.propFix[this.toLowerCase()]=this});var dt=/[\t\r\n\f]/g;oe.fn.extend({addClass:function(e){var t,i,n,s,o,r,a,l=0;if(oe.isFunction(e))return this.each(function(t){oe(this).addClass(e.call(this,t,H(this)))});if("string"==typeof e&&e)for(t=e.match(_e)||[];i=this[l++];)if(s=H(i),n=1===i.nodeType&&(" "+s+" ").replace(dt," ")){for(r=0;o=t[r++];)n.indexOf(" "+o+" ")<0&&(n+=o+" ");a=oe.trim(n),s!==a&&i.setAttribute("class",a)}return this},removeClass:function(e){var t,i,n,s,o,r,a,l=0;if(oe.isFunction(e))return this.each(function(t){oe(this).removeClass(e.call(this,t,H(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof e&&e)for(t=e.match(_e)||[];i=this[l++];)if(s=H(i),n=1===i.nodeType&&(" "+s+" ").replace(dt," ")){for(r=0;o=t[r++];)for(;n.indexOf(" "+o+" ")>-1;)n=n.replace(" "+o+" "," ");a=oe.trim(n),s!==a&&i.setAttribute("class",a)}return this},toggleClass:function(e,t){var i=typeof e;return"boolean"==typeof t&&"string"===i?t?this.addClass(e):this.removeClass(e):oe.isFunction(e)?this.each(function(i){oe(this).toggleClass(e.call(this,i,H(this),t),t)}):this.each(function(){var t,n,s,o;if("string"===i)for(n=0,s=oe(this),o=e.match(_e)||[];t=o[n++];)s.hasClass(t)?s.removeClass(t):s.addClass(t);else void 0!==e&&"boolean"!==i||(t=H(this),t&&je.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||e===!1?"":je.get(this,"__className__")||""))})},hasClass:function(e){var t,i,n=0;for(t=" "+e+" ";i=this[n++];)if(1===i.nodeType&&(" "+H(i)+" ").replace(dt," ").indexOf(t)>-1)return!0;return!1}});var pt=/\r/g,ft=/[\x20\t\r\n\f]+/g;oe.fn.extend({val:function(e){var t,i,n,s=this[0];{if(arguments.length)return n=oe.isFunction(e),this.each(function(i){var s;1===this.nodeType&&(s=n?e.call(this,i,oe(this).val()):e,null==s?s="":"number"==typeof s?s+="":oe.isArray(s)&&(s=oe.map(s,function(e){return null==e?"":e+""})),t=oe.valHooks[this.type]||oe.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,s,"value")||(this.value=s))});if(s)return t=oe.valHooks[s.type]||oe.valHooks[s.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(i=t.get(s,"value"))?i:(i=s.value,"string"==typeof i?i.replace(pt,""):null==i?"":i)}}}),oe.extend({valHooks:{option:{get:function(e){var t=oe.find.attr(e,"value");return null!=t?t:oe.trim(oe.text(e)).replace(ft," ")}},select:{get:function(e){for(var t,i,n=e.options,s=e.selectedIndex,o="select-one"===e.type||0>s,r=o?null:[],a=o?s+1:n.length,l=0>s?a:o?s:0;a>l;l++)if(i=n[l],(i.selected||l===s)&&(ne.optDisabled?!i.disabled:null===i.getAttribute("disabled"))&&(!i.parentNode.disabled||!oe.nodeName(i.parentNode,"optgroup"))){if(t=oe(i).val(),o)return t;r.push(t)}return r},set:function(e,t){for(var i,n,s=e.options,o=oe.makeArray(t),r=s.length;r--;)n=s[r],(n.selected=oe.inArray(oe.valHooks.option.get(n),o)>-1)&&(i=!0);return i||(e.selectedIndex=-1),o}}}}),oe.each(["radio","checkbox"],function(){oe.valHooks[this]={set:function(e,t){return oe.isArray(t)?e.checked=oe.inArray(oe(e).val(),t)>-1:void 0}},ne.checkOn||(oe.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var gt=/^(?:focusinfocus|focusoutblur)$/;oe.extend(oe.event,{trigger:function(t,i,n,s){var o,r,a,l,c,u,h,d=[n||K],p=ie.call(t,"type")?t.type:t,f=ie.call(t,"namespace")?t.namespace.split("."):[];if(r=a=n=n||K,3!==n.nodeType&&8!==n.nodeType&&!gt.test(p+oe.event.triggered)&&(p.indexOf(".")>-1&&(f=p.split("."),p=f.shift(),f.sort()),c=p.indexOf(":")<0&&"on"+p,t=t[oe.expando]?t:new oe.Event(p,"object"==typeof t&&t),t.isTrigger=s?2:3,t.namespace=f.join("."),t.rnamespace=t.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=n),i=null==i?[t]:oe.makeArray(i,[t]),h=oe.event.special[p]||{},s||!h.trigger||h.trigger.apply(n,i)!==!1)){if(!s&&!h.noBubble&&!oe.isWindow(n)){for(l=h.delegateType||p,gt.test(l+p)||(r=r.parentNode);r;r=r.parentNode)d.push(r),a=r;a===(n.ownerDocument||K)&&d.push(a.defaultView||a.parentWindow||e)}for(o=0;(r=d[o++])&&!t.isPropagationStopped();)t.type=o>1?l:h.bindType||p,u=(je.get(r,"events")||{})[t.type]&&je.get(r,"handle"),u&&u.apply(r,i),u=c&&r[c],u&&u.apply&&Ce(r)&&(t.result=u.apply(r,i),t.result===!1&&t.preventDefault());return t.type=p,s||t.isDefaultPrevented()||h._default&&h._default.apply(d.pop(),i)!==!1||!Ce(n)||c&&oe.isFunction(n[p])&&!oe.isWindow(n)&&(a=n[c],a&&(n[c]=null),oe.event.triggered=p,n[p](),oe.event.triggered=void 0,a&&(n[c]=a)),t.result}},simulate:function(e,t,i){var n=oe.extend(new oe.Event,i,{type:e,isSimulated:!0});oe.event.trigger(n,null,t)}}),oe.fn.extend({trigger:function(e,t){return this.each(function(){oe.event.trigger(e,t,this)})},triggerHandler:function(e,t){var i=this[0];return i?oe.event.trigger(e,t,i,!0):void 0}}),oe.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){oe.fn[t]=function(e,i){return arguments.length>0?this.on(t,null,e,i):this.trigger(t)}}),oe.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),ne.focusin="onfocusin"in e,ne.focusin||oe.each({focus:"focusin",blur:"focusout"},function(e,t){var i=function(e){oe.event.simulate(t,e.target,oe.event.fix(e))};oe.event.special[t]={setup:function(){var n=this.ownerDocument||this,s=je.access(n,t);s||n.addEventListener(e,i,!0),je.access(n,t,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=je.access(n,t)-1;s?je.access(n,t,s):(n.removeEventListener(e,i,!0),je.remove(n,t))}}});var mt=e.location,vt=oe.now(),yt=/\?/;oe.parseJSON=function(e){return JSON.parse(e+"")},oe.parseXML=function(t){var i;if(!t||"string"!=typeof t)return null;try{i=(new e.DOMParser).parseFromString(t,"text/xml")}catch(n){i=void 0}return i&&!i.getElementsByTagName("parsererror").length||oe.error("Invalid XML: "+t),i};var wt=/#.*$/,bt=/([?&])_=[^&]*/,_t=/^(.*?):[ \t]*([^\r\n]*)$/gm,xt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,kt=/^(?:GET|HEAD)$/,Ct=/^\/\//,jt={},Et={},Tt="*/".concat("*"),At=K.createElement("a");At.href=mt.href,oe.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:mt.href,type:"GET",isLocal:xt.test(mt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Tt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":oe.parseJSON,"text xml":oe.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?B(B(e,oe.ajaxSettings),t):B(oe.ajaxSettings,e)},ajaxPrefilter:z(jt),ajaxTransport:z(Et),ajax:function(t,i){function n(t,i,n,a){var c,h,y,w,_,k=i;2!==b&&(b=2,l&&e.clearTimeout(l),s=void 0,r=a||"",x.readyState=t>0?4:0,c=t>=200&&300>t||304===t,n&&(w=$(d,x,n)),w=q(d,w,x,c),c?(d.ifModified&&(_=x.getResponseHeader("Last-Modified"),_&&(oe.lastModified[o]=_),_=x.getResponseHeader("etag"),_&&(oe.etag[o]=_)),204===t||"HEAD"===d.type?k="nocontent":304===t?k="notmodified":(k=w.state,h=w.data,y=w.error,c=!y)):(y=k,!t&&k||(k="error",0>t&&(t=0))),x.status=t,x.statusText=(i||k)+"",c?g.resolveWith(p,[h,k,x]):g.rejectWith(p,[x,k,y]),x.statusCode(v),v=void 0,u&&f.trigger(c?"ajaxSuccess":"ajaxError",[x,d,c?h:y]),m.fireWith(p,[x,k]),u&&(f.trigger("ajaxComplete",[x,d]),--oe.active||oe.event.trigger("ajaxStop")))}"object"==typeof t&&(i=t,t=void 0),i=i||{};var s,o,r,a,l,c,u,h,d=oe.ajaxSetup({},i),p=d.context||d,f=d.context&&(p.nodeType||p.jquery)?oe(p):oe.event,g=oe.Deferred(),m=oe.Callbacks("once memory"),v=d.statusCode||{},y={},w={},b=0,_="canceled",x={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!a)for(a={};t=_t.exec(r);)a[t[1].toLowerCase()]=t[2];t=a[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?r:null},setRequestHeader:function(e,t){var i=e.toLowerCase();return b||(e=w[i]=w[i]||e,y[e]=t),this},overrideMimeType:function(e){return b||(d.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)v[t]=[v[t],e[t]];else x.always(e[x.status]);return this},abort:function(e){var t=e||_;return s&&s.abort(t),n(0,t),this}};if(g.promise(x).complete=m.add,x.success=x.done,x.error=x.fail,d.url=((t||d.url||mt.href)+"").replace(wt,"").replace(Ct,mt.protocol+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=oe.trim(d.dataType||"*").toLowerCase().match(_e)||[""],null==d.crossDomain){c=K.createElement("a");try{c.href=d.url,c.href=c.href,d.crossDomain=At.protocol+"//"+At.host!=c.protocol+"//"+c.host}catch(k){d.crossDomain=!0}}if(d.data&&d.processData&&"string"!=typeof d.data&&(d.data=oe.param(d.data,d.traditional)),Y(jt,d,i,x),2===b)return x;u=oe.event&&d.global,u&&0===oe.active++&&oe.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!kt.test(d.type),o=d.url,d.hasContent||(d.data&&(o=d.url+=(yt.test(o)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=bt.test(o)?o.replace(bt,"$1_="+vt++):o+(yt.test(o)?"&":"?")+"_="+vt++)),d.ifModified&&(oe.lastModified[o]&&x.setRequestHeader("If-Modified-Since",oe.lastModified[o]),oe.etag[o]&&x.setRequestHeader("If-None-Match",oe.etag[o])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&x.setRequestHeader("Content-Type",d.contentType),x.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Tt+"; q=0.01":""):d.accepts["*"]);for(h in d.headers)x.setRequestHeader(h,d.headers[h]);if(d.beforeSend&&(d.beforeSend.call(p,x,d)===!1||2===b))return x.abort();_="abort";for(h in{success:1,error:1,complete:1})x[h](d[h]);if(s=Y(Et,d,i,x)){if(x.readyState=1,u&&f.trigger("ajaxSend",[x,d]),2===b)return x;d.async&&d.timeout>0&&(l=e.setTimeout(function(){x.abort("timeout")},d.timeout));try{b=1,s.send(y,n)}catch(k){if(!(2>b))throw k;n(-1,k)}}else n(-1,"No Transport");return x},getJSON:function(e,t,i){return oe.get(e,t,i,"json")},getScript:function(e,t){return oe.get(e,void 0,t,"script")}}),oe.each(["get","post"],function(e,t){oe[t]=function(e,i,n,s){return oe.isFunction(i)&&(s=s||n,n=i,i=void 0),oe.ajax(oe.extend({url:e,type:t,dataType:s,data:i,success:n},oe.isPlainObject(e)&&e))}}),oe._evalUrl=function(e){return oe.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},oe.fn.extend({wrapAll:function(e){var t;return oe.isFunction(e)?this.each(function(t){oe(this).wrapAll(e.call(this,t))}):(this[0]&&(t=oe(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return oe.isFunction(e)?this.each(function(t){oe(this).wrapInner(e.call(this,t))}):this.each(function(){var t=oe(this),i=t.contents();i.length?i.wrapAll(e):t.append(e)})},wrap:function(e){var t=oe.isFunction(e);return this.each(function(i){oe(this).wrapAll(t?e.call(this,i):e)})},unwrap:function(){return this.parent().each(function(){oe.nodeName(this,"body")||oe(this).replaceWith(this.childNodes)}).end()}}),oe.expr.filters.hidden=function(e){return!oe.expr.filters.visible(e)},oe.expr.filters.visible=function(e){return e.offsetWidth>0||e.offsetHeight>0||e.getClientRects().length>0};var Pt=/%20/g,It=/\[\]$/,Dt=/\r?\n/g,Lt=/^(?:submit|button|image|reset|file)$/i,Mt=/^(?:input|select|textarea|keygen)/i;oe.param=function(e,t){var i,n=[],s=function(e,t){t=oe.isFunction(t)?t():null==t?"":t,n[n.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=oe.ajaxSettings&&oe.ajaxSettings.traditional),oe.isArray(e)||e.jquery&&!oe.isPlainObject(e))oe.each(e,function(){s(this.name,this.value)});else for(i in e)V(i,e[i],t,s);return n.join("&").replace(Pt,"+")},oe.fn.extend({serialize:function(){return oe.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=oe.prop(this,"elements");return e?oe.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!oe(this).is(":disabled")&&Mt.test(this.nodeName)&&!Lt.test(e)&&(this.checked||!Me.test(e))}).map(function(e,t){var i=oe(this).val();return null==i?null:oe.isArray(i)?oe.map(i,function(e){return{name:t.name,value:e.replace(Dt,"\r\n")}}):{name:t.name,value:i.replace(Dt,"\r\n")}}).get()}}),oe.ajaxSettings.xhr=function(){try{return new e.XMLHttpRequest}catch(t){}};var St={0:200,1223:204},Rt=oe.ajaxSettings.xhr();ne.cors=!!Rt&&"withCredentials"in Rt,ne.ajax=Rt=!!Rt,oe.ajaxTransport(function(t){var i,n;return ne.cors||Rt&&!t.crossDomain?{send:function(s,o){var r,a=t.xhr();if(a.open(t.type,t.url,t.async,t.username,t.password),t.xhrFields)for(r in t.xhrFields)a[r]=t.xhrFields[r];t.mimeType&&a.overrideMimeType&&a.overrideMimeType(t.mimeType),t.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest");for(r in s)a.setRequestHeader(r,s[r]);i=function(e){return function(){i&&(i=n=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===e?a.abort():"error"===e?"number"!=typeof a.status?o(0,"error"):o(a.status,a.statusText):o(St[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=i(),n=a.onerror=i("error"),void 0!==a.onabort?a.onabort=n:a.onreadystatechange=function(){4===a.readyState&&e.setTimeout(function(){i&&n()})},i=i("abort");try{a.send(t.hasContent&&t.data||null)}catch(l){if(i)throw l}},abort:function(){i&&i()}}:void 0}),oe.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return oe.globalEval(e),e}}}),oe.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),oe.ajaxTransport("script",function(e){if(e.crossDomain){var t,i;return{send:function(n,s){t=oe("<script>").prop({charset:e.scriptCharset,src:e.url}).on("load error",i=function(e){t.remove(),i=null,e&&s("error"===e.type?404:200,e.type)}),K.head.appendChild(t[0])},abort:function(){i&&i()}}}});var Ot=[],Nt=/(=)\?(?=&|$)|\?\?/;oe.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Ot.pop()||oe.expando+"_"+vt++;return this[e]=!0,e}}),oe.ajaxPrefilter("json jsonp",function(t,i,n){var s,o,r,a=t.jsonp!==!1&&(Nt.test(t.url)?"url":"string"==typeof t.data&&0===(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Nt.test(t.data)&&"data");return a||"jsonp"===t.dataTypes[0]?(s=t.jsonpCallback=oe.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,a?t[a]=t[a].replace(Nt,"$1"+s):t.jsonp!==!1&&(t.url+=(yt.test(t.url)?"&":"?")+t.jsonp+"="+s),t.converters["script json"]=function(){return r||oe.error(s+" was not called"),r[0]},t.dataTypes[0]="json",o=e[s],e[s]=function(){r=arguments},n.always(function(){void 0===o?oe(e).removeProp(s):e[s]=o,t[s]&&(t.jsonpCallback=i.jsonpCallback,Ot.push(s)),r&&oe.isFunction(o)&&o(r[0]),r=o=void 0}),"script"):void 0}),oe.parseHTML=function(e,t,i){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(i=t,t=!1),t=t||K;var n=fe.exec(e),s=!i&&[];return n?[t.createElement(n[1])]:(n=d([e],t,s),s&&s.length&&oe(s).remove(),oe.merge([],n.childNodes))};var Wt=oe.fn.load;oe.fn.load=function(e,t,i){if("string"!=typeof e&&Wt)return Wt.apply(this,arguments);var n,s,o,r=this,a=e.indexOf(" ");return a>-1&&(n=oe.trim(e.slice(a)),e=e.slice(0,a)),oe.isFunction(t)?(i=t,t=void 0):t&&"object"==typeof t&&(s="POST"),r.length>0&&oe.ajax({url:e,type:s||"GET",dataType:"html",data:t}).done(function(e){o=arguments,r.html(n?oe("<div>").append(oe.parseHTML(e)).find(n):e)}).always(i&&function(e,t){r.each(function(){i.apply(this,o||[e.responseText,t,e])})}),this},oe.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){oe.fn[t]=function(e){return this.on(t,e)}}),oe.expr.filters.animated=function(e){return oe.grep(oe.timers,function(t){return e===t.elem}).length},oe.offset={setOffset:function(e,t,i){var n,s,o,r,a,l,c,u=oe.css(e,"position"),h=oe(e),d={};"static"===u&&(e.style.position="relative"),a=h.offset(),o=oe.css(e,"top"),l=oe.css(e,"left"),c=("absolute"===u||"fixed"===u)&&(o+l).indexOf("auto")>-1,c?(n=h.position(),r=n.top,s=n.left):(r=parseFloat(o)||0,s=parseFloat(l)||0),oe.isFunction(t)&&(t=t.call(e,i,oe.extend({},a))),null!=t.top&&(d.top=t.top-a.top+r),null!=t.left&&(d.left=t.left-a.left+s),"using"in t?t.using.call(e,d):h.css(d)}},oe.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){oe.offset.setOffset(this,e,t)});var t,i,n=this[0],s={top:0,left:0},o=n&&n.ownerDocument;if(o)return t=o.documentElement,oe.contains(t,n)?(s=n.getBoundingClientRect(),i=J(o),{top:s.top+i.pageYOffset-t.clientTop,left:s.left+i.pageXOffset-t.clientLeft}):s},position:function(){if(this[0]){var e,t,i=this[0],n={top:0,left:0};return"fixed"===oe.css(i,"position")?t=i.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),oe.nodeName(e[0],"html")||(n=e.offset()),n.top+=oe.css(e[0],"borderTopWidth",!0),n.left+=oe.css(e[0],"borderLeftWidth",!0)),{top:t.top-n.top-oe.css(i,"marginTop",!0),left:t.left-n.left-oe.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent;e&&"static"===oe.css(e,"position");)e=e.offsetParent;return e||Qe})}}),oe.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(e,t){var i="pageYOffset"===t;oe.fn[e]=function(n){return ke(this,function(e,n,s){var o=J(e);return void 0===s?o?o[t]:e[n]:void(o?o.scrollTo(i?o.pageXOffset:s,i?s:o.pageYOffset):e[n]=s)},e,n,arguments.length)}}),oe.each(["top","left"],function(e,t){oe.cssHooks[t]=T(ne.pixelPosition,function(e,i){return i?(i=E(e,t),Ke.test(i)?oe(e).position()[t]+"px":i):void 0})}),oe.each({Height:"height",Width:"width"},function(e,t){oe.each({padding:"inner"+e,content:t,"":"outer"+e},function(i,n){oe.fn[n]=function(n,s){var o=arguments.length&&(i||"boolean"!=typeof n),r=i||(n===!0||s===!0?"margin":"border");return ke(this,function(t,i,n){var s;return oe.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(s=t.documentElement,Math.max(t.body["scroll"+e],s["scroll"+e],t.body["offset"+e],s["offset"+e],s["client"+e])):void 0===n?oe.css(t,i,r):oe.style(t,i,n,r)},t,o?n:void 0,o,null)}})}),oe.fn.extend({bind:function(e,t,i){return this.on(e,null,t,i)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,i,n){return this.on(t,e,i,n)},undelegate:function(e,t,i){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",i)},size:function(){return this.length}}),oe.fn.andSelf=oe.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return oe});var Ft=e.jQuery,Ht=e.$;return oe.noConflict=function(t){return e.$===oe&&(e.$=Ht),t&&e.jQuery===oe&&(e.jQuery=Ft),oe},t||(e.jQuery=e.$=oe),oe}),+function(e){"use strict";function t(t,n){return this.each(function(){var s=e(this),o=s.data("bs.modal"),r=e.extend({},i.DEFAULTS,s.data(),"object"==typeof t&&t);o||s.data("bs.modal",o=new i(this,r)),"string"==typeof t?o[t](n):r.show&&o.show(n)})}var i=function(t,i){this.options=i,this.$body=e(document.body),this.$element=e(t),this.$dialog=this.$element.find(".modal-dialog"),this.$backdrop=null,this.isShown=null,this.originalBodyPad=null,this.scrollbarWidth=0,this.ignoreBackdropClick=!1,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,e.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.3.6",i.TRANSITION_DURATION=300,i.BACKDROP_TRANSITION_DURATION=150,i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(e){return this.isShown?this.hide():this.show(e)},i.prototype.show=function(t){var n=this,s=e.Event("show.bs.modal",{relatedTarget:t});this.$element.trigger(s),this.isShown||s.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',e.proxy(this.hide,this)),this.$dialog.on("mousedown.dismiss.bs.modal",function(){n.$element.one("mouseup.dismiss.bs.modal",function(t){e(t.target).is(n.$element)&&(n.ignoreBackdropClick=!0)})}),this.backdrop(function(){var s=e.support.transition&&n.$element.hasClass("fade");n.$element.parent().length||n.$element.appendTo(n.$body),n.$element.show().scrollTop(0),n.adjustDialog(),s&&n.$element[0].offsetWidth,n.$element.addClass("in"),n.enforceFocus();var o=e.Event("shown.bs.modal",{relatedTarget:t});s?n.$dialog.one("bsTransitionEnd",function(){n.$element.trigger("focus").trigger(o)}).emulateTransitionEnd(i.TRANSITION_DURATION):n.$element.trigger("focus").trigger(o)}))},i.prototype.hide=function(t){t&&t.preventDefault(),t=e.Event("hide.bs.modal"),this.$element.trigger(t),this.isShown&&!t.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),e(document).off("focusin.bs.modal"),this.$element.removeClass("in").off("click.dismiss.bs.modal").off("mouseup.dismiss.bs.modal"),this.$dialog.off("mousedown.dismiss.bs.modal"),e.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",e.proxy(this.hideModal,this)).emulateTransitionEnd(i.TRANSITION_DURATION):this.hideModal())},i.prototype.enforceFocus=function(){e(document).off("focusin.bs.modal").on("focusin.bs.modal",e.proxy(function(e){this.$element[0]===e.target||this.$element.has(e.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",e.proxy(function(e){27==e.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},i.prototype.resize=function(){this.isShown?e(window).on("resize.bs.modal",e.proxy(this.handleUpdate,this)):e(window).off("resize.bs.modal")},i.prototype.hideModal=function(){var e=this;this.$element.hide(),this.backdrop(function(){e.$body.removeClass("modal-open"),e.resetAdjustments(),e.resetScrollbar(),e.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(t){var n=this,s=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var o=e.support.transition&&s;if(this.$backdrop=e(document.createElement("div")).addClass("modal-backdrop "+s).appendTo(this.$body),this.$element.on("click.dismiss.bs.modal",e.proxy(function(e){return this.ignoreBackdropClick?void(this.ignoreBackdropClick=!1):void(e.target===e.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus():this.hide()))},this)),o&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!t)return;o?this.$backdrop.one("bsTransitionEnd",t).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):t()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var r=function(){n.removeBackdrop(),t&&t()};e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",r).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):r()}else t&&t()},i.prototype.handleUpdate=function(){this.adjustDialog()},i.prototype.adjustDialog=function(){var e=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&e?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!e?this.scrollbarWidth:""})},i.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},i.prototype.checkScrollbar=function(){var e=window.innerWidth;if(!e){var t=document.documentElement.getBoundingClientRect();e=t.right-Math.abs(t.left)}this.bodyIsOverflowing=document.body.clientWidth<e,this.scrollbarWidth=this.measureScrollbar()},i.prototype.setScrollbar=function(){var e=parseInt(this.$body.css("padding-right")||0,10);this.originalBodyPad=document.body.style.paddingRight||"",this.bodyIsOverflowing&&this.$body.css("padding-right",e+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right",this.originalBodyPad)},i.prototype.measureScrollbar=function(){var e=document.createElement("div");e.className="modal-scrollbar-measure",this.$body.append(e);var t=e.offsetWidth-e.clientWidth;return this.$body[0].removeChild(e),t};var n=e.fn.modal;e.fn.modal=t,e.fn.modal.Constructor=i,e.fn.modal.noConflict=function(){return e.fn.modal=n,this},e(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var n=e(this),s=n.attr("href"),o=e(n.attr("data-target")||s&&s.replace(/.*(?=#[^\s]+$)/,"")),r=o.data("bs.modal")?"toggle":e.extend({remote:!/#/.test(s)&&s},o.data(),n.data());n.is("a")&&i.preventDefault(),o.one("show.bs.modal",function(e){e.isDefaultPrevented()||o.one("hidden.bs.modal",function(){n.is(":visible")&&n.trigger("focus")})}),t.call(o,r,this)})}(jQuery),function(){"use strict";var e,t,i;this.ScrollReveal=function(){function n(i){return"undefined"==typeof this||Object.getPrototypeOf(this)!==n.prototype?new n(i):(e=this,e.tools=new t,e.isSupported()?(e.tools.extend(e.defaults,i||{}),s(e.defaults),e.store={elements:{},containers:[]},e.sequences={},e.history=[],e.uid=0,e.initialized=!1):"undefined"!=typeof console&&null!==console&&console.log("ScrollReveal is not supported in this browser."),e)}function s(t){var i=t.container;return i&&"string"==typeof i?t.container=window.document.querySelector(i):(i&&!e.tools.isNode(i)&&(console.log("ScrollReveal: Invalid container provided, using <html> instead."),t.container=null),null==i&&(t.container=window.document.documentElement),t.container)}function o(){return++e.uid}function r(t,i){t.config?t.config=e.tools.extendClone(t.config,i):t.config=e.tools.extendClone(e.defaults,i),"top"===t.config.origin||"bottom"===t.config.origin?t.config.axis="Y":t.config.axis="X","top"!==t.config.origin&&"left"!==t.config.origin||(t.config.distance="-"+t.config.distance)}function a(e){var t=window.getComputedStyle(e.domEl);e.styles||(e.styles={transition:{},transform:{},computed:{}},e.styles.inline=e.domEl.getAttribute("style")||"",e.styles.inline+="; visibility: visible; ",e.styles.computed.opacity=t.opacity,t.transition&&"all 0s ease 0s"!=t.transition?e.styles.computed.transition=t.transition+", ":e.styles.computed.transition=""),e.styles.transition.instant=l(e,0),e.styles.transition.delayed=l(e,e.config.delay),e.styles.transform.initial=" -webkit-transform:",e.styles.transform.target=" -webkit-transform:",c(e),e.styles.transform.initial+="transform:",e.styles.transform.target+="transform:",c(e)}function l(e,t){var i=e.config;return"-webkit-transition: "+e.styles.computed.transition+"-webkit-transform "+i.duration/1e3+"s "+i.easing+" "+t/1e3+"s, opacity "+i.duration/1e3+"s "+i.easing+" "+t/1e3+"s; transition: "+e.styles.computed.transition+"transform "+i.duration/1e3+"s "+i.easing+" "+t/1e3+"s, opacity "+i.duration/1e3+"s "+i.easing+" "+t/1e3+"s; "}function c(e){var t=e.config,i=e.styles.transform;parseInt(t.distance)&&(i.initial+=" translate"+t.axis+"("+t.distance+")",i.target+=" translate"+t.axis+"(0)"),t.scale&&(i.initial+=" scale("+t.scale+")",i.target+=" scale(1)"),t.rotate.x&&(i.initial+=" rotateX("+t.rotate.x+"deg)",i.target+=" rotateX(0)"),t.rotate.y&&(i.initial+=" rotateY("+t.rotate.y+"deg)",i.target+=" rotateY(0)"),t.rotate.z&&(i.initial+=" rotateZ("+t.rotate.z+"deg)",i.target+=" rotateZ(0)"),i.initial+="; opacity: "+t.opacity+";",i.target+="; opacity: "+e.styles.computed.opacity+";"}function u(t){var i=t.config.container;i&&-1==e.store.containers.indexOf(i)&&e.store.containers.push(t.config.container),e.store.elements[t.id]=t}function h(t,i,n){var s={selector:t,config:i,interval:n};e.history.push(s)}function d(){if(e.isSupported()){g();for(var t=0;t<e.store.containers.length;t++)e.store.containers[t].addEventListener("scroll",p),e.store.containers[t].addEventListener("resize",p);e.initialized||(window.addEventListener("scroll",p),window.addEventListener("resize",p),e.initialized=!0)}return e}function p(){i(g)}function f(){var t,i,n,s;e.tools.forOwn(e.sequences,function(o){s=e.sequences[o],t=!1;for(var r=0;r<s.elemIds.length;r++)n=s.elemIds[r],i=e.store.elements[n],C(i)&&!t&&(t=!0);s.active=t})}function g(){var t,i;f(),e.tools.forOwn(e.store.elements,function(n){i=e.store.elements[n],t=w(i),y(i)?(t?i.domEl.setAttribute("style",i.styles.inline+i.styles.transform.target+i.styles.transition.delayed):i.domEl.setAttribute("style",i.styles.inline+i.styles.transform.target+i.styles.transition.instant),v("reveal",i,t),i.revealing=!0,i.seen=!0,i.sequence&&m(i,t)):b(i)&&(i.domEl.setAttribute("style",i.styles.inline+i.styles.transform.initial+i.styles.transition.instant),v("reset",i),i.revealing=!1)})}function m(t,i){var n=0,s=0,o=e.sequences[t.sequence.id];o.blocked=!0,i&&"onload"==t.config.useDelay&&(s=t.config.delay),t.sequence.timer&&(n=Math.abs(t.sequence.timer.started-new Date),
window.clearTimeout(t.sequence.timer)),t.sequence.timer={started:new Date},t.sequence.timer.clock=window.setTimeout(function(){o.blocked=!1,t.sequence.timer=null,p()},Math.abs(o.interval)+s-n)}function v(e,t,i){var n=0,s=0,o="after";switch(e){case"reveal":s=t.config.duration,i&&(s+=t.config.delay),o+="Reveal";break;case"reset":s=t.config.duration,o+="Reset"}t.timer&&(n=Math.abs(t.timer.started-new Date),window.clearTimeout(t.timer.clock)),t.timer={started:new Date},t.timer.clock=window.setTimeout(function(){t.config[o](t.domEl),t.timer=null},s-n)}function y(t){if(t.sequence){var i=e.sequences[t.sequence.id];return i.active&&!i.blocked&&!t.revealing&&!t.disabled}return C(t)&&!t.revealing&&!t.disabled}function w(t){var i=t.config.useDelay;return"always"===i||"onload"===i&&!e.initialized||"once"===i&&!t.seen}function b(t){if(t.sequence){var i=e.sequences[t.sequence.id];return!i.active&&t.config.reset&&t.revealing&&!t.disabled}return!C(t)&&t.config.reset&&t.revealing&&!t.disabled}function _(e){return{width:e.clientWidth,height:e.clientHeight}}function x(e){if(e&&e!==window.document.documentElement){var t=k(e);return{x:e.scrollLeft+t.left,y:e.scrollTop+t.top}}return{x:window.pageXOffset,y:window.pageYOffset}}function k(e){var t=0,i=0,n=e.offsetHeight,s=e.offsetWidth;do isNaN(e.offsetTop)||(t+=e.offsetTop),isNaN(e.offsetLeft)||(i+=e.offsetLeft);while(e=e.offsetParent);return{top:t,left:i,height:n,width:s}}function C(e){function t(){var t=c+a*r,i=u+l*r,n=h-a*r,p=d-l*r,f=o.y+e.config.viewOffset.top,g=o.x+e.config.viewOffset.left,m=o.y-e.config.viewOffset.bottom+s.height,v=o.x-e.config.viewOffset.right+s.width;return m>t&&n>f&&i>g&&v>p}function i(){return"fixed"===window.getComputedStyle(e.domEl).position}var n=k(e.domEl),s=_(e.config.container),o=x(e.config.container),r=e.config.viewFactor,a=n.height,l=n.width,c=n.top,u=n.left,h=c+a,d=u+l;return t()||i()}return n.prototype.defaults={origin:"bottom",distance:"20px",duration:500,delay:0,rotate:{x:0,y:0,z:0},opacity:0,scale:.9,easing:"cubic-bezier(0.6, 0.2, 0.1, 1)",container:null,mobile:!0,reset:!1,useDelay:"always",viewFactor:.2,viewOffset:{top:0,right:0,bottom:0,left:0},afterReveal:function(e){},afterReset:function(e){}},n.prototype.isSupported=function(){var e=document.documentElement.style;return"WebkitTransition"in e&&"WebkitTransform"in e||"transition"in e&&"transform"in e},n.prototype.reveal=function(t,i,n,l){var c,p,f,g,m,v;if(c=i&&i.container?s(i):e.defaults.container,p=e.tools.isNode(t)?[t]:Array.prototype.slice.call(c.querySelectorAll(t)),!p.length)return console.log('ScrollReveal: reveal on "'+t+'" failed, no elements found.'),e;i&&"number"==typeof i&&(n=i,i={}),n&&"number"==typeof n&&(v=o(),m=e.sequences[v]={id:v,interval:n,elemIds:[],active:!1});for(var y=0;y<p.length;y++)g=p[y].getAttribute("data-sr-id"),g?f=e.store.elements[g]:(f={id:o(),domEl:p[y],seen:!1,revealing:!1},f.domEl.setAttribute("data-sr-id",f.id)),m&&(f.sequence={id:m.id,index:m.elemIds.length},m.elemIds.push(f.id)),r(f,i||{}),a(f),u(f),e.tools.isMobile()&&!f.config.mobile||!e.isSupported()?(f.domEl.setAttribute("style",f.styles.inline),f.disabled=!0):f.revealing||f.domEl.setAttribute("style",f.styles.inline+f.styles.transform.initial);return!l&&e.isSupported()&&(h(t,i),e.initTimeout&&window.clearTimeout(e.initTimeout),e.initTimeout=window.setTimeout(d,0)),e},n.prototype.sync=function(){if(e.history.length&&e.isSupported()){for(var t=0;t<e.history.length;t++){var i=e.history[t];e.reveal(i.selector,i.config,i.interval,!0)}d()}else console.log("ScrollReveal: sync failed, no reveals found.");return e},n}(),t=function(){function e(){}return e.prototype.isObject=function(e){return null!==e&&"object"==typeof e&&e.constructor==Object},e.prototype.isNode=function(e){return"object"==typeof Node?e instanceof Node:e&&"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName},e.prototype.forOwn=function(e,t){if(!this.isObject(e))throw new TypeError('Expected "object", but received "'+typeof e+'".');for(var i in e)e.hasOwnProperty(i)&&t(i)},e.prototype.extend=function(e,t){return this.forOwn(t,function(i){this.isObject(t[i])?(e[i]&&this.isObject(e[i])||(e[i]={}),this.extend(e[i],t[i])):e[i]=t[i]}.bind(this)),e},e.prototype.extendClone=function(e,t){return this.extend(this.extend({},e),t)},e.prototype.isMobile=function(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)},e}(),i=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame}.call(this),function(e){"function"==typeof define&&define.amd?define(["jquery"],e):e(jQuery)}(function(e){function t(t,n){var s,o,r,a=t.nodeName.toLowerCase();return"area"===a?(s=t.parentNode,o=s.name,t.href&&o&&"map"===s.nodeName.toLowerCase()?(r=e("img[usemap='#"+o+"']")[0],!!r&&i(r)):!1):(/^(input|select|textarea|button|object)$/.test(a)?!t.disabled:"a"===a?t.href||n:n)&&i(t)}function i(t){return e.expr.filters.visible(t)&&!e(t).parents().addBack().filter(function(){return"hidden"===e.css(this,"visibility")}).length}function n(e){for(var t,i;e.length&&e[0]!==document;){if(t=e.css("position"),("absolute"===t||"relative"===t||"fixed"===t)&&(i=parseInt(e.css("zIndex"),10),!isNaN(i)&&0!==i))return i;e=e.parent()}return 0}function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},e.extend(this._defaults,this.regional[""]),this.regional.en=e.extend(!0,{},this.regional[""]),this.regional["en-US"]=e.extend(!0,{},this.regional.en),this.dpDiv=o(e("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function o(t){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return t.delegate(i,"mouseout",function(){e(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).removeClass("ui-datepicker-next-hover")}).delegate(i,"mouseover",r)}function r(){e.datepicker._isDisabledDatepicker(v.inline?v.dpDiv.parent()[0]:v.input[0])||(e(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),e(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&e(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&e(this).addClass("ui-datepicker-next-hover"))}function a(t,i){e.extend(t,i);for(var n in i)null==i[n]&&(t[n]=i[n]);return t}function l(e){return function(){var t=this.element.val();e.apply(this,arguments),this._refresh(),t!==this.element.val()&&this._trigger("change")}}e.ui=e.ui||{},e.extend(e.ui,{version:"1.11.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({scrollParent:function(t){var i=this.css("position"),n="absolute"===i,s=t?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var t=e(this);return n&&"static"===t.css("position")?!1:s.test(t.css("overflow")+t.css("overflow-y")+t.css("overflow-x"))}).eq(0);return"fixed"!==i&&o.length?o:e(this[0].ownerDocument||document)},uniqueId:function(){var e=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++e)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&e(this).removeAttr("id")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(i){return!!e.data(i,t)}}):function(t,i,n){return!!e.data(t,n[3])},focusable:function(i){return t(i,!isNaN(e.attr(i,"tabindex")))},tabbable:function(i){var n=e.attr(i,"tabindex"),s=isNaN(n);return(s||n>=0)&&t(i,!s)}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(t,i){function n(t,i,n,o){return e.each(s,function(){i-=parseFloat(e.css(t,"padding"+this))||0,n&&(i-=parseFloat(e.css(t,"border"+this+"Width"))||0),o&&(i-=parseFloat(e.css(t,"margin"+this))||0)}),i}var s="Width"===i?["Left","Right"]:["Top","Bottom"],o=i.toLowerCase(),r={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+i]=function(t){return void 0===t?r["inner"+i].call(this):this.each(function(){e(this).css(o,n(this,t)+"px")})},e.fn["outer"+i]=function(t,s){return"number"!=typeof t?r["outer"+i].call(this,t):this.each(function(){e(this).css(o,n(this,t,!0,s)+"px")})}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(e.fn.removeData=function(t){return function(i){return arguments.length?t.call(this,e.camelCase(i)):t.call(this)}}(e.fn.removeData)),e.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),e.fn.extend({focus:function(t){return function(i,n){return"number"==typeof i?this.each(function(){var t=this;setTimeout(function(){e(t).focus(),n&&n.call(t)},i)}):t.apply(this,arguments)}}(e.fn.focus),disableSelection:function(){var e="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.bind(e+".ui-disableSelection",function(e){e.preventDefault()})}}(),enableSelection:function(){return this.unbind(".ui-disableSelection")},zIndex:function(t){if(void 0!==t)return this.css("zIndex",t);if(this.length)for(var i,n,s=e(this[0]);s.length&&s[0]!==document;){if(i=s.css("position"),("absolute"===i||"relative"===i||"fixed"===i)&&(n=parseInt(s.css("zIndex"),10),!isNaN(n)&&0!==n))return n;s=s.parent()}return 0}}),e.ui.plugin={add:function(t,i,n){var s,o=e.ui[t].prototype;for(s in n)o.plugins[s]=o.plugins[s]||[],o.plugins[s].push([i,n[s]])},call:function(e,t,i,n){var s,o=e.plugins[t];if(o&&(n||e.element[0].parentNode&&11!==e.element[0].parentNode.nodeType))for(s=0;s<o.length;s++)e.options[o[s][0]]&&o[s][1].apply(e.element,i)}};var c=0,u=Array.prototype.slice;e.cleanData=function(t){return function(i){var n,s,o;for(o=0;null!=(s=i[o]);o++)try{n=e._data(s,"events"),n&&n.remove&&e(s).triggerHandler("remove")}catch(r){}t(i)}}(e.cleanData),e.widget=function(t,i,n){var s,o,r,a,l={},c=t.split(".")[0];return t=t.split(".")[1],s=c+"-"+t,n||(n=i,i=e.Widget),e.expr[":"][s.toLowerCase()]=function(t){return!!e.data(t,s)},e[c]=e[c]||{},o=e[c][t],r=e[c][t]=function(e,t){return this._createWidget?void(arguments.length&&this._createWidget(e,t)):new r(e,t)},e.extend(r,o,{version:n.version,_proto:e.extend({},n),_childConstructors:[]}),a=new i,a.options=e.widget.extend({},a.options),e.each(n,function(t,n){return e.isFunction(n)?void(l[t]=function(){var e=function(){return i.prototype[t].apply(this,arguments)},s=function(e){return i.prototype[t].apply(this,e)};return function(){var t,i=this._super,o=this._superApply;return this._super=e,this._superApply=s,t=n.apply(this,arguments),this._super=i,this._superApply=o,t}}()):void(l[t]=n)}),r.prototype=e.widget.extend(a,{widgetEventPrefix:o?a.widgetEventPrefix||t:t},l,{constructor:r,namespace:c,widgetName:t,widgetFullName:s}),o?(e.each(o._childConstructors,function(t,i){var n=i.prototype;e.widget(n.namespace+"."+n.widgetName,r,i._proto)}),delete o._childConstructors):i._childConstructors.push(r),e.widget.bridge(t,r),r},e.widget.extend=function(t){for(var i,n,s=u.call(arguments,1),o=0,r=s.length;r>o;o++)for(i in s[o])n=s[o][i],s[o].hasOwnProperty(i)&&void 0!==n&&(e.isPlainObject(n)?t[i]=e.isPlainObject(t[i])?e.widget.extend({},t[i],n):e.widget.extend({},n):t[i]=n);return t},e.widget.bridge=function(t,i){var n=i.prototype.widgetFullName||t;e.fn[t]=function(s){var o="string"==typeof s,r=u.call(arguments,1),a=this;return o?this.each(function(){var i,o=e.data(this,n);return"instance"===s?(a=o,!1):o?e.isFunction(o[s])&&"_"!==s.charAt(0)?(i=o[s].apply(o,r),i!==o&&void 0!==i?(a=i&&i.jquery?a.pushStack(i.get()):i,!1):void 0):e.error("no such method '"+s+"' for "+t+" widget instance"):e.error("cannot call methods on "+t+" prior to initialization; attempted to call method '"+s+"'")}):(r.length&&(s=e.widget.extend.apply(null,[s].concat(r))),this.each(function(){var t=e.data(this,n);t?(t.option(s||{}),t._init&&t._init()):e.data(this,n,new i(s,this))})),a}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,i){i=e(i||this.defaultElement||this)[0],this.element=e(i),this.uuid=c++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=e(),this.hoverable=e(),this.focusable=e(),i!==this&&(e.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(e){e.target===i&&this.destroy()}}),this.document=e(i.style?i.ownerDocument:i.document||i),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(t,i){var n,s,o,r=t;if(0===arguments.length)return e.widget.extend({},this.options);if("string"==typeof t)if(r={},n=t.split("."),t=n.shift(),n.length){for(s=r[t]=e.widget.extend({},this.options[t]),o=0;o<n.length-1;o++)s[n[o]]=s[n[o]]||{},s=s[n[o]];if(t=n.pop(),1===arguments.length)return void 0===s[t]?null:s[t];s[t]=i}else{if(1===arguments.length)return void 0===this.options[t]?null:this.options[t];r[t]=i}return this._setOptions(r),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,"disabled"===e&&(this.widget().toggleClass(this.widgetFullName+"-disabled",!!t),t&&(this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"))),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(t,i,n){var s,o=this;"boolean"!=typeof t&&(n=i,i=t,t=!1),n?(i=s=e(i),this.bindings=this.bindings.add(i)):(n=i,i=this.element,s=this.widget()),e.each(n,function(n,r){function a(){return t||o.options.disabled!==!0&&!e(this).hasClass("ui-state-disabled")?("string"==typeof r?o[r]:r).apply(o,arguments):void 0}"string"!=typeof r&&(a.guid=r.guid=r.guid||a.guid||e.guid++);var l=n.match(/^([\w:-]*)\s*(.*)$/),c=l[1]+o.eventNamespace,u=l[2];u?s.delegate(u,c,a):i.bind(c,a)})},_off:function(t,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,t.unbind(i).undelegate(i),this.bindings=e(this.bindings.not(t).get()),this.focusable=e(this.focusable.not(t).get()),this.hoverable=e(this.hoverable.not(t).get())},_delay:function(e,t){function i(){return("string"==typeof e?n[e]:e).apply(n,arguments)}var n=this;return setTimeout(i,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,i,n){var s,o,r=this.options[t];if(n=n||{},i=e.Event(i),i.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(s in o)s in i||(i[s]=o[s]);return this.element.trigger(i,n),!(e.isFunction(r)&&r.apply(this.element[0],[i].concat(n))===!1||i.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,i){e.Widget.prototype["_"+t]=function(n,s,o){"string"==typeof s&&(s={effect:s});var r,a=s?s===!0||"number"==typeof s?i:s.effect||i:t;s=s||{},"number"==typeof s&&(s={duration:s}),r=!e.isEmptyObject(s),s.complete=o,s.delay&&n.delay(s.delay),r&&e.effects&&e.effects.effect[a]?n[t](s):a!==t&&n[a]?n[a](s.duration,s.easing,o):n.queue(function(i){e(this)[t](),o&&o.call(n[0]),i()})}});var h=(e.widget,!1);e(document).mouseup(function(){h=!1});e.widget("ui.mouse",{version:"1.11.4",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(i){return!0===e.data(i.target,t.widgetName+".preventClickEvent")?(e.removeData(i.target,t.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(!h){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var i=this,n=1===t.which,s="string"==typeof this.options.cancel&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;return n&&!s&&this._mouseCapture(t)?(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(t)!==!1,!this._mouseStarted)?(t.preventDefault(),!0):(!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return i._mouseMove(e)},this._mouseUpDelegate=function(e){return i._mouseUp(e)},this.document.bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),h=!0,!0)):!0}},_mouseMove:function(t){if(this._mouseMoved){if(e.ui.ie&&(!document.documentMode||document.documentMode<9)&&!t.button)return this._mouseUp(t);if(!t.which)return this._mouseUp(t)}return(t.which||t.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted)},_mouseUp:function(t){return this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),h=!1,!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}});!function(){function t(e,t,i){return[parseFloat(e[0])*(p.test(e[0])?t/100:1),parseFloat(e[1])*(p.test(e[1])?i/100:1)]}function i(t,i){return parseInt(e.css(t,i),10)||0}function n(t){var i=t[0];return 9===i.nodeType?{width:t.width(),height:t.height(),offset:{top:0,left:0}}:e.isWindow(i)?{width:t.width(),height:t.height(),offset:{top:t.scrollTop(),left:t.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:t.outerWidth(),height:t.outerHeight(),offset:t.offset()}}e.ui=e.ui||{};var s,o,r=Math.max,a=Math.abs,l=Math.round,c=/left|center|right/,u=/top|center|bottom/,h=/[\+\-]\d+(\.[\d]+)?%?/,d=/^\w+/,p=/%$/,f=e.fn.position;e.position={scrollbarWidth:function(){if(void 0!==s)return s;var t,i,n=e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=n.children()[0];return e("body").append(n),t=o.offsetWidth,n.css("overflow","scroll"),i=o.offsetWidth,t===i&&(i=n[0].clientWidth),n.remove(),s=t-i},getScrollInfo:function(t){var i=t.isWindow||t.isDocument?"":t.element.css("overflow-x"),n=t.isWindow||t.isDocument?"":t.element.css("overflow-y"),s="scroll"===i||"auto"===i&&t.width<t.element[0].scrollWidth,o="scroll"===n||"auto"===n&&t.height<t.element[0].scrollHeight;return{width:o?e.position.scrollbarWidth():0,height:s?e.position.scrollbarWidth():0}},getWithinInfo:function(t){var i=e(t||window),n=e.isWindow(i[0]),s=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:n,isDocument:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:n||s?i.width():i.outerWidth(),height:n||s?i.height():i.outerHeight()}}},e.fn.position=function(s){if(!s||!s.of)return f.apply(this,arguments);s=e.extend({},s);var p,g,m,v,y,w,b=e(s.of),_=e.position.getWithinInfo(s.within),x=e.position.getScrollInfo(_),k=(s.collision||"flip").split(" "),C={};return w=n(b),b[0].preventDefault&&(s.at="left top"),g=w.width,m=w.height,v=w.offset,y=e.extend({},v),e.each(["my","at"],function(){var e,t,i=(s[this]||"").split(" ");1===i.length&&(i=c.test(i[0])?i.concat(["center"]):u.test(i[0])?["center"].concat(i):["center","center"]),i[0]=c.test(i[0])?i[0]:"center",i[1]=u.test(i[1])?i[1]:"center",e=h.exec(i[0]),t=h.exec(i[1]),C[this]=[e?e[0]:0,t?t[0]:0],s[this]=[d.exec(i[0])[0],d.exec(i[1])[0]]}),1===k.length&&(k[1]=k[0]),"right"===s.at[0]?y.left+=g:"center"===s.at[0]&&(y.left+=g/2),"bottom"===s.at[1]?y.top+=m:"center"===s.at[1]&&(y.top+=m/2),p=t(C.at,g,m),y.left+=p[0],y.top+=p[1],this.each(function(){var n,c,u=e(this),h=u.outerWidth(),d=u.outerHeight(),f=i(this,"marginLeft"),w=i(this,"marginTop"),j=h+f+i(this,"marginRight")+x.width,E=d+w+i(this,"marginBottom")+x.height,T=e.extend({},y),A=t(C.my,u.outerWidth(),u.outerHeight());"right"===s.my[0]?T.left-=h:"center"===s.my[0]&&(T.left-=h/2),"bottom"===s.my[1]?T.top-=d:"center"===s.my[1]&&(T.top-=d/2),T.left+=A[0],T.top+=A[1],o||(T.left=l(T.left),T.top=l(T.top)),n={marginLeft:f,marginTop:w},e.each(["left","top"],function(t,i){e.ui.position[k[t]]&&e.ui.position[k[t]][i](T,{targetWidth:g,targetHeight:m,elemWidth:h,elemHeight:d,collisionPosition:n,collisionWidth:j,collisionHeight:E,offset:[p[0]+A[0],p[1]+A[1]],my:s.my,at:s.at,within:_,elem:u})}),s.using&&(c=function(e){var t=v.left-T.left,i=t+g-h,n=v.top-T.top,o=n+m-d,l={target:{element:b,left:v.left,top:v.top,width:g,height:m},element:{element:u,left:T.left,top:T.top,width:h,height:d},horizontal:0>i?"left":t>0?"right":"center",vertical:0>o?"top":n>0?"bottom":"middle"};h>g&&a(t+i)<g&&(l.horizontal="center"),d>m&&a(n+o)<m&&(l.vertical="middle"),r(a(t),a(i))>r(a(n),a(o))?l.important="horizontal":l.important="vertical",s.using.call(this,e,l)}),u.offset(e.extend(T,{using:c}))})},e.ui.position={fit:{left:function(e,t){var i,n=t.within,s=n.isWindow?n.scrollLeft:n.offset.left,o=n.width,a=e.left-t.collisionPosition.marginLeft,l=s-a,c=a+t.collisionWidth-o-s;t.collisionWidth>o?l>0&&0>=c?(i=e.left+l+t.collisionWidth-o-s,e.left+=l-i):c>0&&0>=l?e.left=s:l>c?e.left=s+o-t.collisionWidth:e.left=s:l>0?e.left+=l:c>0?e.left-=c:e.left=r(e.left-a,e.left)},top:function(e,t){var i,n=t.within,s=n.isWindow?n.scrollTop:n.offset.top,o=t.within.height,a=e.top-t.collisionPosition.marginTop,l=s-a,c=a+t.collisionHeight-o-s;t.collisionHeight>o?l>0&&0>=c?(i=e.top+l+t.collisionHeight-o-s,e.top+=l-i):c>0&&0>=l?e.top=s:l>c?e.top=s+o-t.collisionHeight:e.top=s:l>0?e.top+=l:c>0?e.top-=c:e.top=r(e.top-a,e.top)}},flip:{left:function(e,t){var i,n,s=t.within,o=s.offset.left+s.scrollLeft,r=s.width,l=s.isWindow?s.scrollLeft:s.offset.left,c=e.left-t.collisionPosition.marginLeft,u=c-l,h=c+t.collisionWidth-r-l,d="left"===t.my[0]?-t.elemWidth:"right"===t.my[0]?t.elemWidth:0,p="left"===t.at[0]?t.targetWidth:"right"===t.at[0]?-t.targetWidth:0,f=-2*t.offset[0];0>u?(i=e.left+d+p+f+t.collisionWidth-r-o,(0>i||i<a(u))&&(e.left+=d+p+f)):h>0&&(n=e.left-t.collisionPosition.marginLeft+d+p+f-l,(n>0||a(n)<h)&&(e.left+=d+p+f))},top:function(e,t){var i,n,s=t.within,o=s.offset.top+s.scrollTop,r=s.height,l=s.isWindow?s.scrollTop:s.offset.top,c=e.top-t.collisionPosition.marginTop,u=c-l,h=c+t.collisionHeight-r-l,d="top"===t.my[1],p=d?-t.elemHeight:"bottom"===t.my[1]?t.elemHeight:0,f="top"===t.at[1]?t.targetHeight:"bottom"===t.at[1]?-t.targetHeight:0,g=-2*t.offset[1];0>u?(n=e.top+p+f+g+t.collisionHeight-r-o,(0>n||n<a(u))&&(e.top+=p+f+g)):h>0&&(i=e.top-t.collisionPosition.marginTop+p+f+g-l,(i>0||a(i)<h)&&(e.top+=p+f+g))}},flipfit:{left:function(){e.ui.position.flip.left.apply(this,arguments),e.ui.position.fit.left.apply(this,arguments)},top:function(){e.ui.position.flip.top.apply(this,arguments),e.ui.position.fit.top.apply(this,arguments)}}},function(){var t,i,n,s,r,a=document.getElementsByTagName("body")[0],l=document.createElement("div");t=document.createElement(a?"div":"body"),n={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},a&&e.extend(n,{position:"absolute",left:"-1000px",top:"-1000px"});for(r in n)t.style[r]=n[r];t.appendChild(l),i=a||document.documentElement,i.insertBefore(t,i.firstChild),l.style.cssText="position: absolute; left: 10.7432222px;",s=e(l).offset().left,o=s>10&&11>s,t.innerHTML="",i.removeChild(t)}()}();e.ui.position,e.widget("ui.accordion",{version:"1.11.4",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var t=this.options;this.prevShow=this.prevHide=e(),this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role","tablist"),t.collapsible||t.active!==!1&&null!=t.active||(t.active=0),this._processPanels(),t.active<0&&(t.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():e()}},_createIcons:function(){var t=this.options.icons;t&&(e("<span>").addClass("ui-accordion-header-icon ui-icon "+t.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var e;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId(),this._destroyIcons(),e=this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display","").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&e.css("height","")},_setOption:function(e,t){return"active"===e?void this._activate(t):("event"===e&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(t)),this._super(e,t),"collapsible"!==e||t||this.options.active!==!1||this._activate(0),"icons"===e&&(this._destroyIcons(),t&&this._createIcons()),void("disabled"===e&&(this.element.toggleClass("ui-state-disabled",!!t).attr("aria-disabled",t),this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!t))))},_keydown:function(t){if(!t.altKey&&!t.ctrlKey){var i=e.ui.keyCode,n=this.headers.length,s=this.headers.index(t.target),o=!1;switch(t.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(s+1)%n];break;case i.LEFT:case i.UP:o=this.headers[(s-1+n)%n];break;case i.SPACE:case i.ENTER:this._eventHandler(t);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[n-1]}o&&(e(t.target).attr("tabIndex",-1),e(o).attr("tabIndex",0),o.focus(),t.preventDefault())}},_panelKeyDown:function(t){t.keyCode===e.ui.keyCode.UP&&t.ctrlKey&&e(t.currentTarget).prev().focus()},refresh:function(){var t=this.options;this._processPanels(),t.active===!1&&t.collapsible===!0||!this.headers.length?(t.active=!1,this.active=e()):t.active===!1?this._activate(0):this.active.length&&!e.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(t.active=!1,this.active=e()):this._activate(Math.max(0,t.active-1)):t.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var e=this.headers,t=this.panels;this.headers=this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all"),this.panels=this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide(),t&&(this._off(e.not(this.headers)),this._off(t.not(this.panels)))},_refresh:function(){var t,i=this.options,n=i.heightStyle,s=this.element.parent();this.active=this._findActive(i.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"),this.active.next().addClass("ui-accordion-content-active").show(),this.headers.attr("role","tab").each(function(){var t=e(this),i=t.uniqueId().attr("id"),n=t.next(),s=n.uniqueId().attr("id");t.attr("aria-controls",s),n.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),
this._setupEvents(i.event),"fill"===n?(t=s.height(),this.element.siblings(":visible").each(function(){var i=e(this),n=i.css("position");"absolute"!==n&&"fixed"!==n&&(t-=i.outerHeight(!0))}),this.headers.each(function(){t-=e(this).outerHeight(!0)}),this.headers.next().each(function(){e(this).height(Math.max(0,t-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):"auto"===n&&(t=0,this.headers.next().each(function(){t=Math.max(t,e(this).css("height","").height())}).height(t))},_activate:function(t){var i=this._findActive(t)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return"number"==typeof t?this.headers.eq(t):e()},_setupEvents:function(t){var i={keydown:"_keydown"};t&&e.each(t.split(" "),function(e,t){i[t]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(t){var i=this.options,n=this.active,s=e(t.currentTarget),o=s[0]===n[0],r=o&&i.collapsible,a=r?e():s.next(),l=n.next(),c={oldHeader:n,oldPanel:l,newHeader:r?e():s,newPanel:a};t.preventDefault(),o&&!i.collapsible||this._trigger("beforeActivate",t,c)===!1||(i.active=r?!1:this.headers.index(s),this.active=o?e():s,this._toggle(c),n.removeClass("ui-accordion-header-active ui-state-active"),i.icons&&n.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header),o||(s.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),i.icons&&s.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader),s.next().addClass("ui-accordion-content-active")))},_toggle:function(t){var i=t.newPanel,n=this.prevShow.length?this.prevShow:t.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=n,this.options.animate?this._animate(i,n,t):(n.hide(),i.show(),this._toggleComplete(t)),n.attr({"aria-hidden":"true"}),n.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&n.length?n.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter(function(){return 0===parseInt(e(this).attr("tabIndex"),10)}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(e,t,i){var n,s,o,r=this,a=0,l=e.css("box-sizing"),c=e.length&&(!t.length||e.index()<t.index()),u=this.options.animate||{},h=c&&u.down||u,d=function(){r._toggleComplete(i)};return"number"==typeof h&&(o=h),"string"==typeof h&&(s=h),s=s||h.easing||u.easing,o=o||h.duration||u.duration,t.length?e.length?(n=e.show().outerHeight(),t.animate(this.hideProps,{duration:o,easing:s,step:function(e,t){t.now=Math.round(e)}}),void e.hide().animate(this.showProps,{duration:o,easing:s,complete:d,step:function(e,i){i.now=Math.round(e),"height"!==i.prop?"content-box"===l&&(a+=i.now):"content"!==r.options.heightStyle&&(i.now=Math.round(n-t.outerHeight()-a),a=0)}})):t.animate(this.hideProps,o,s,d):e.animate(this.showProps,o,s,d)},_toggleComplete:function(e){var t=e.oldPanel;t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),t.length&&(t.parent()[0].className=t.parent()[0].className),this._trigger("activate",null,e)}}),e.widget("ui.menu",{version:"1.11.4",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},items:"> *",menus:"ul",position:{my:"left-1 top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item":function(e){e.preventDefault()},"click .ui-menu-item":function(t){var i=e(t.target);!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(t),t.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(t):!this.element.is(":focus")&&e(this.document[0].activeElement).closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(t){if(!this.previousFilter){var i=e(t.currentTarget);i.siblings(".ui-state-active").removeClass("ui-state-active"),this.focus(t,i)}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(e,t){var i=this.active||this.element.find(this.options.items).eq(0);t||this.focus(e,i)},blur:function(t){this._delay(function(){e.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(t)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(e){this._closeOnDocumentClick(e)&&this.collapseAll(e),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-menu-icons ui-front").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").removeUniqueId().removeClass("ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var t=e(this);t.data("ui-menu-submenu-carat")&&t.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(t){var i,n,s,o,r=!0;switch(t.keyCode){case e.ui.keyCode.PAGE_UP:this.previousPage(t);break;case e.ui.keyCode.PAGE_DOWN:this.nextPage(t);break;case e.ui.keyCode.HOME:this._move("first","first",t);break;case e.ui.keyCode.END:this._move("last","last",t);break;case e.ui.keyCode.UP:this.previous(t);break;case e.ui.keyCode.DOWN:this.next(t);break;case e.ui.keyCode.LEFT:this.collapse(t);break;case e.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(t);break;case e.ui.keyCode.ENTER:case e.ui.keyCode.SPACE:this._activate(t);break;case e.ui.keyCode.ESCAPE:this.collapse(t);break;default:r=!1,n=this.previousFilter||"",s=String.fromCharCode(t.keyCode),o=!1,clearTimeout(this.filterTimer),s===n?o=!0:s=n+s,i=this._filterMenuItems(s),i=o&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i,i.length||(s=String.fromCharCode(t.keyCode),i=this._filterMenuItems(s)),i.length?(this.focus(t,i),this.previousFilter=s,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}r&&t.preventDefault()},_activate:function(e){this.active.is(".ui-state-disabled")||(this.active.is("[aria-haspopup='true']")?this.expand(e):this.select(e))},refresh:function(){var t,i,n=this,s=this.options.icons.submenu,o=this.element.find(this.options.menus);this.element.toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length),o.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-front").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var t=e(this),i=t.parent(),n=e("<span>").addClass("ui-menu-icon ui-icon "+s).data("ui-menu-submenu-carat",!0);i.attr("aria-haspopup","true").prepend(n),t.attr("aria-labelledby",i.attr("id"))}),t=o.add(this.element),i=t.find(this.options.items),i.not(".ui-menu-item").each(function(){var t=e(this);n._isDivider(t)&&t.addClass("ui-widget-content ui-menu-divider")}),i.not(".ui-menu-item, .ui-menu-divider").addClass("ui-menu-item").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),i.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!e.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(e,t){"icons"===e&&this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(t.submenu),"disabled"===e&&this.element.toggleClass("ui-state-disabled",!!t).attr("aria-disabled",t),this._super(e,t)},focus:function(e,t){var i,n;this.blur(e,e&&"focus"===e.type),this._scrollIntoView(t),this.active=t.first(),n=this.active.addClass("ui-state-focus").removeClass("ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",n.attr("id")),this.active.parent().closest(".ui-menu-item").addClass("ui-state-active"),e&&"keydown"===e.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=t.children(".ui-menu"),i.length&&e&&/^mouse/.test(e.type)&&this._startOpening(i),this.activeMenu=t.parent(),this._trigger("focus",e,{item:t})},_scrollIntoView:function(t){var i,n,s,o,r,a;this._hasScroll()&&(i=parseFloat(e.css(this.activeMenu[0],"borderTopWidth"))||0,n=parseFloat(e.css(this.activeMenu[0],"paddingTop"))||0,s=t.offset().top-this.activeMenu.offset().top-i-n,o=this.activeMenu.scrollTop(),r=this.activeMenu.height(),a=t.outerHeight(),0>s?this.activeMenu.scrollTop(o+s):s+a>r&&this.activeMenu.scrollTop(o+s-r+a))},blur:function(e,t){t||clearTimeout(this.timer),this.active&&(this.active.removeClass("ui-state-focus"),this.active=null,this._trigger("blur",e,{item:this.active}))},_startOpening:function(e){clearTimeout(this.timer),"true"===e.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(e)},this.delay))},_open:function(t){var i=e.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden","true"),t.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(t,i){clearTimeout(this.timer),this.timer=this._delay(function(){var n=i?this.element:e(t&&t.target).closest(this.element.find(".ui-menu"));n.length||(n=this.element),this._close(n),this.blur(t),this.activeMenu=n},this.delay)},_close:function(e){e||(e=this.active?this.active.parent():this.element),e.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find(".ui-state-active").not(".ui-state-focus").removeClass("ui-state-active")},_closeOnDocumentClick:function(t){return!e(t.target).closest(".ui-menu").length},_isDivider:function(e){return!/[^\-\u2014\u2013\s]/.test(e.text())},collapse:function(e){var t=this.active&&this.active.parent().closest(".ui-menu-item",this.element);t&&t.length&&(this._close(),this.focus(e,t))},expand:function(e){var t=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();t&&t.length&&(this._open(t.parent()),this._delay(function(){this.focus(e,t)}))},next:function(e){this._move("next","first",e)},previous:function(e){this._move("prev","last",e)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(e,t,i){var n;this.active&&(n="first"===e||"last"===e?this.active["first"===e?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[e+"All"](".ui-menu-item").eq(0)),n&&n.length&&this.active||(n=this.activeMenu.find(this.options.items)[t]()),this.focus(i,n)},nextPage:function(t){var i,n,s;return this.active?void(this.isLastItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=e(this),i.offset().top-n-s<0}),this.focus(t,i)):this.focus(t,this.activeMenu.find(this.options.items)[this.active?"last":"first"]()))):void this.next(t)},previousPage:function(t){var i,n,s;return this.active?void(this.isFirstItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=e(this),i.offset().top-n+s>0}),this.focus(t,i)):this.focus(t,this.activeMenu.find(this.options.items).first()))):void this.next(t)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(t){this.active=this.active||e(t.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(t,!0),this._trigger("select",t,i)},_filterMenuItems:function(t){var i=t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),n=new RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return n.test(e.trim(e(this).text()))})}});e.widget("ui.autocomplete",{version:"1.11.4",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var t,i,n,s=this.element[0].nodeName.toLowerCase(),o="textarea"===s,r="input"===s;this.isMultiLine=o?!0:r?!1:this.element.prop("isContentEditable"),this.valueMethod=this.element[o||r?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(s){if(this.element.prop("readOnly"))return t=!0,n=!0,void(i=!0);t=!1,n=!1,i=!1;var o=e.ui.keyCode;switch(s.keyCode){case o.PAGE_UP:t=!0,this._move("previousPage",s);break;case o.PAGE_DOWN:t=!0,this._move("nextPage",s);break;case o.UP:t=!0,this._keyEvent("previous",s);break;case o.DOWN:t=!0,this._keyEvent("next",s);break;case o.ENTER:this.menu.active&&(t=!0,s.preventDefault(),this.menu.select(s));break;case o.TAB:this.menu.active&&this.menu.select(s);break;case o.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(s),s.preventDefault());break;default:i=!0,this._searchTimeout(s)}},keypress:function(n){if(t)return t=!1,void(this.isMultiLine&&!this.menu.element.is(":visible")||n.preventDefault());if(!i){var s=e.ui.keyCode;switch(n.keyCode){case s.PAGE_UP:this._move("previousPage",n);break;case s.PAGE_DOWN:this._move("nextPage",n);break;case s.UP:this._keyEvent("previous",n);break;case s.DOWN:this._keyEvent("next",n)}}},input:function(e){return n?(n=!1,void e.preventDefault()):void this._searchTimeout(e)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(e){return this.cancelBlur?void delete this.cancelBlur:(clearTimeout(this.searching),this.close(e),void this._change(e))}}),this._initSource(),this.menu=e("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._on(this.menu.element,{mousedown:function(t){t.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];e(t.target).closest(".ui-menu-item").length||this._delay(function(){var t=this;this.document.one("mousedown",function(n){n.target===t.element[0]||n.target===i||e.contains(i,n.target)||t.close()})})},menufocus:function(t,i){var n,s;return this.isNewMenu&&(this.isNewMenu=!1,t.originalEvent&&/^mouse/.test(t.originalEvent.type))?(this.menu.blur(),void this.document.one("mousemove",function(){e(t.target).trigger(t.originalEvent)})):(s=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",t,{item:s})&&t.originalEvent&&/^key/.test(t.originalEvent.type)&&this._value(s.value),n=i.item.attr("aria-label")||s.value,void(n&&e.trim(n).length&&(this.liveRegion.children().hide(),e("<div>").text(n).appendTo(this.liveRegion))))},menuselect:function(e,t){var i=t.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=i})),!1!==this._trigger("select",e,{item:i})&&this._value(i.value),this.term=this._value(),this.close(e),this.selectedItem=i}}),this.liveRegion=e("<span>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(e,t){this._super(e,t),"source"===e&&this._initSource(),"appendTo"===e&&this.menu.element.appendTo(this._appendTo()),"disabled"===e&&t&&this.xhr&&this.xhr.abort()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front")),t.length||(t=this.document[0].body),t},_initSource:function(){var t,i,n=this;e.isArray(this.options.source)?(t=this.options.source,this.source=function(i,n){n(e.ui.autocomplete.filter(t,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(t,s){n.xhr&&n.xhr.abort(),n.xhr=e.ajax({url:i,data:t,dataType:"json",success:function(e){s(e)},error:function(){s([])}})}):this.source=this.options.source},_searchTimeout:function(e){clearTimeout(this.searching),this.searching=this._delay(function(){var t=this.term===this._value(),i=this.menu.element.is(":visible"),n=e.altKey||e.ctrlKey||e.metaKey||e.shiftKey;t&&(!t||i||n)||(this.selectedItem=null,this.search(null,e))},this.options.delay)},search:function(e,t){return e=null!=e?e:this._value(),this.term=this._value(),e.length<this.options.minLength?this.close(t):this._trigger("search",t)!==!1?this._search(e):void 0},_search:function(e){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:e},this._response())},_response:function(){var t=++this.requestIndex;return e.proxy(function(e){t===this.requestIndex&&this.__response(e),this.pending--,this.pending||this.element.removeClass("ui-autocomplete-loading")},this)},__response:function(e){e&&(e=this._normalize(e)),this._trigger("response",null,{content:e}),!this.options.disabled&&e&&e.length&&!this.cancelSearch?(this._suggest(e),this._trigger("open")):this._close()},close:function(e){this.cancelSearch=!0,this._close(e)},_close:function(e){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",e))},_change:function(e){this.previous!==this._value()&&this._trigger("change",e,{item:this.selectedItem})},_normalize:function(t){return t.length&&t[0].label&&t[0].value?t:e.map(t,function(t){return"string"==typeof t?{label:t,value:t}:e.extend({},t,{label:t.label||t.value,value:t.value||t.label})})},_suggest:function(t){var i=this.menu.element.empty();this._renderMenu(i,t),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(e.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var e=this.menu.element;e.outerWidth(Math.max(e.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(t,i){var n=this;e.each(i,function(e,i){n._renderItemData(t,i)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-autocomplete-item",t)},_renderItem:function(t,i){return e("<li>").text(i.label).appendTo(t)},_move:function(e,t){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(e)||this.menu.isLastItem()&&/^next/.test(e)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[e](t):void this.search(null,t)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(e,t){this.isMultiLine&&!this.menu.element.is(":visible")||(this._move(e,t),t.preventDefault())}}),e.extend(e.ui.autocomplete,{escapeRegex:function(e){return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(t,i){var n=new RegExp(e.ui.autocomplete.escapeRegex(i),"i");return e.grep(t,function(e){return n.test(e.label||e.value||e)})}}),e.widget("ui.autocomplete",e.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(e){return e+(e>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(t){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=t&&t.length?this.options.messages.results(t.length):this.options.messages.noResults,this.liveRegion.children().hide(),e("<div>").text(i).appendTo(this.liveRegion))}});var d,p=(e.ui.autocomplete,"ui-button ui-widget ui-state-default ui-corner-all"),f="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",g=function(){var t=e(this);setTimeout(function(){t.find(":ui-button").button("refresh")},1)},m=function(t){var i=t.name,n=t.form,s=e([]);return i&&(i=i.replace(/'/g,"\\'"),s=n?e(n).find("[name='"+i+"'][type=radio]"):e("[name='"+i+"'][type=radio]",t.ownerDocument).filter(function(){return!this.form})),s};e.widget("ui.button",{version:"1.11.4",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,g),"boolean"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var t=this,i=this.options,n="checkbox"===this.type||"radio"===this.type,s=n?"":"ui-state-active";null===i.label&&(i.label="input"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(p).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){i.disabled||this===d&&e(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){i.disabled||e(this).removeClass(s)}).bind("click"+this.eventNamespace,function(e){i.disabled&&(e.preventDefault(),e.stopImmediatePropagation())}),this._on({focus:function(){this.buttonElement.addClass("ui-state-focus")},blur:function(){this.buttonElement.removeClass("ui-state-focus")}}),n&&this.element.bind("change"+this.eventNamespace,function(){t.refresh()}),"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){return i.disabled?!1:void 0}):"radio"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(i.disabled)return!1;e(this).addClass("ui-state-active"),t.buttonElement.attr("aria-pressed","true");var n=t.element[0];m(n).not(n).map(function(){return e(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){return i.disabled?!1:(e(this).addClass("ui-state-active"),d=this,void t.document.one("mouseup",function(){d=null}))}).bind("mouseup"+this.eventNamespace,function(){return i.disabled?!1:void e(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(t){return i.disabled?!1:void(t.keyCode!==e.ui.keyCode.SPACE&&t.keyCode!==e.ui.keyCode.ENTER||e(this).addClass("ui-state-active"))}).bind("keyup"+this.eventNamespace+" blur"+this.eventNamespace,function(){e(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(t){t.keyCode===e.ui.keyCode.SPACE&&e(this).click()})),this._setOption("disabled",i.disabled),this._resetButton()},_determineButtonType:function(){var e,t,i;this.element.is("[type=checkbox]")?this.type="checkbox":this.element.is("[type=radio]")?this.type="radio":this.element.is("input")?this.type="input":this.type="button","checkbox"===this.type||"radio"===this.type?(e=this.element.parents().last(),t="label[for='"+this.element.attr("id")+"']",this.buttonElement=e.find(t),this.buttonElement.length||(e=e.length?e.siblings():this.element.siblings(),this.buttonElement=e.filter(t),this.buttonElement.length||(this.buttonElement=e.find(t))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(p+" ui-state-active "+f).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(e,t){return this._super(e,t),"disabled"===e?(this.widget().toggleClass("ui-state-disabled",!!t),this.element.prop("disabled",!!t),void(t&&("checkbox"===this.type||"radio"===this.type?this.buttonElement.removeClass("ui-state-focus"):this.buttonElement.removeClass("ui-state-focus ui-state-active")))):void this._resetButton()},refresh:function(){var t=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");t!==this.options.disabled&&this._setOption("disabled",t),"radio"===this.type?m(this.element[0]).each(function(){e(this).is(":checked")?e(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)return void(this.options.label&&this.element.val(this.options.label));var t=this.buttonElement.removeClass(f),i=e("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),n=this.options.icons,s=n.primary&&n.secondary,o=[];n.primary||n.secondary?(this.options.text&&o.push("ui-button-text-icon"+(s?"s":n.primary?"-primary":"-secondary")),n.primary&&t.prepend("<span class='ui-button-icon-primary ui-icon "+n.primary+"'></span>"),n.secondary&&t.append("<span class='ui-button-icon-secondary ui-icon "+n.secondary+"'></span>"),this.options.text||(o.push(s?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||t.attr("title",e.trim(i)))):o.push("ui-button-text-only"),t.addClass(o.join(" "))}}),e.widget("ui.buttonset",{version:"1.11.4",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(e,t){"disabled"===e&&this.buttons.button("option",e,t),this._super(e,t)},refresh:function(){var t="rtl"===this.element.css("direction"),i=this.element.find(this.options.items),n=i.filter(":ui-button");i.not(":ui-button").button(),n.button("refresh"),this.buttons=i.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(t?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return e(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}});e.ui.button;e.extend(e.ui,{datepicker:{version:"1.11.4"}});var v;e.extend(s.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(e){return a(this._defaults,e||{}),this},_attachDatepicker:function(t,i){var n,s,o;n=t.nodeName.toLowerCase(),s="div"===n||"span"===n,t.id||(this.uuid+=1,t.id="dp"+this.uuid),o=this._newInst(e(t),s),o.settings=e.extend({},i||{}),"input"===n?this._connectDatepicker(t,o):s&&this._inlineDatepicker(t,o)},_newInst:function(t,i){var n=t[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:n,input:t,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?o(e("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(t,i){var n=e(t);i.append=e([]),i.trigger=e([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),e.data(t,"datepicker",i),i.settings.disabled&&this._disableDatepicker(t))},_attachments:function(t,i){var n,s,o,r=this._get(i,"appendText"),a=this._get(i,"isRTL");i.append&&i.append.remove(),r&&(i.append=e("<span class='"+this._appendClass+"'>"+r+"</span>"),t[a?"before":"after"](i.append)),t.unbind("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),n=this._get(i,"showOn"),"focus"!==n&&"both"!==n||t.focus(this._showDatepicker),"button"!==n&&"both"!==n||(s=this._get(i,"buttonText"),o=this._get(i,"buttonImage"),i.trigger=e(this._get(i,"buttonImageOnly")?e("<img/>").addClass(this._triggerClass).attr({src:o,alt:s,title:s}):e("<button type='button'></button>").addClass(this._triggerClass).html(o?e("<img/>").attr({src:o,alt:s,title:s}):s)),t[a?"before":"after"](i.trigger),i.trigger.click(function(){return e.datepicker._datepickerShowing&&e.datepicker._lastInput===t[0]?e.datepicker._hideDatepicker():e.datepicker._datepickerShowing&&e.datepicker._lastInput!==t[0]?(e.datepicker._hideDatepicker(),e.datepicker._showDatepicker(t[0])):e.datepicker._showDatepicker(t[0]),!1}))},_autoSize:function(e){if(this._get(e,"autoSize")&&!e.inline){var t,i,n,s,o=new Date(2009,11,20),r=this._get(e,"dateFormat");r.match(/[DM]/)&&(t=function(e){for(i=0,n=0,s=0;s<e.length;s++)e[s].length>i&&(i=e[s].length,n=s);return n},o.setMonth(t(this._get(e,r.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(t(this._get(e,r.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),e.input.attr("size",this._formatDate(e,o).length)}},_inlineDatepicker:function(t,i){var n=e(t);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),e.data(t,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(t),i.dpDiv.css("display","block"))},_dialogDatepicker:function(t,i,n,s,o){var r,l,c,u,h,d=this._dialogInst;return d||(this.uuid+=1,r="dp"+this.uuid,this._dialogInput=e("<input type='text' id='"+r+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.keydown(this._doKeyDown),e("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},e.data(this._dialogInput[0],"datepicker",d)),a(d.settings,s||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(l=document.documentElement.clientWidth,c=document.documentElement.clientHeight,u=document.documentElement.scrollLeft||document.body.scrollLeft,h=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+u,c/2-150+h]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),e.blockUI&&e.blockUI(this.dpDiv),e.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(t){var i,n=e(t),s=e.data(t,"datepicker");n.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),e.removeData(t,"datepicker"),"input"===i?(s.append.remove(),s.trigger.remove(),n.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):"div"!==i&&"span"!==i||n.removeClass(this.markerClassName).empty(),v===s&&(v=null))},_enableDatepicker:function(t){
var i,n,s=e(t),o=e.data(t,"datepicker");s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),"input"===i?(t.disabled=!1,o.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):"div"!==i&&"span"!==i||(n=s.children("."+this._inlineClass),n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}))},_disableDatepicker:function(t){var i,n,s=e(t),o=e.data(t,"datepicker");s.hasClass(this.markerClassName)&&(i=t.nodeName.toLowerCase(),"input"===i?(t.disabled=!0,o.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):"div"!==i&&"span"!==i||(n=s.children("."+this._inlineClass),n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=e.map(this._disabledInputs,function(e){return e===t?null:e}),this._disabledInputs[this._disabledInputs.length]=t)},_isDisabledDatepicker:function(e){if(!e)return!1;for(var t=0;t<this._disabledInputs.length;t++)if(this._disabledInputs[t]===e)return!0;return!1},_getInst:function(t){try{return e.data(t,"datepicker")}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(t,i,n){var s,o,r,l,c=this._getInst(t);return 2===arguments.length&&"string"==typeof i?"defaults"===i?e.extend({},e.datepicker._defaults):c?"all"===i?e.extend({},c.settings):this._get(c,i):null:(s=i||{},"string"==typeof i&&(s={},s[i]=n),void(c&&(this._curInst===c&&this._hideDatepicker(),o=this._getDateDatepicker(t,!0),r=this._getMinMaxDate(c,"min"),l=this._getMinMaxDate(c,"max"),a(c.settings,s),null!==r&&void 0!==s.dateFormat&&void 0===s.minDate&&(c.settings.minDate=this._formatDate(c,r)),null!==l&&void 0!==s.dateFormat&&void 0===s.maxDate&&(c.settings.maxDate=this._formatDate(c,l)),"disabled"in s&&(s.disabled?this._disableDatepicker(t):this._enableDatepicker(t)),this._attachments(e(t),c),this._autoSize(c),this._setDate(c,o),this._updateAlternate(c),this._updateDatepicker(c))))},_changeDatepicker:function(e,t,i){this._optionDatepicker(e,t,i)},_refreshDatepicker:function(e){var t=this._getInst(e);t&&this._updateDatepicker(t)},_setDateDatepicker:function(e,t){var i=this._getInst(e);i&&(this._setDate(i,t),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(e,t){var i=this._getInst(e);return i&&!i.inline&&this._setDateFromField(i,t),i?this._getDate(i):null},_doKeyDown:function(t){var i,n,s,o=e.datepicker._getInst(t.target),r=!0,a=o.dpDiv.is(".ui-datepicker-rtl");if(o._keyEvent=!0,e.datepicker._datepickerShowing)switch(t.keyCode){case 9:e.datepicker._hideDatepicker(),r=!1;break;case 13:return s=e("td."+e.datepicker._dayOverClass+":not(."+e.datepicker._currentClass+")",o.dpDiv),s[0]&&e.datepicker._selectDay(t.target,o.selectedMonth,o.selectedYear,s[0]),i=e.datepicker._get(o,"onSelect"),i?(n=e.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[n,o])):e.datepicker._hideDatepicker(),!1;case 27:e.datepicker._hideDatepicker();break;case 33:e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(o,"stepBigMonths"):-e.datepicker._get(o,"stepMonths"),"M");break;case 34:e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(o,"stepBigMonths"):+e.datepicker._get(o,"stepMonths"),"M");break;case 35:(t.ctrlKey||t.metaKey)&&e.datepicker._clearDate(t.target),r=t.ctrlKey||t.metaKey;break;case 36:(t.ctrlKey||t.metaKey)&&e.datepicker._gotoToday(t.target),r=t.ctrlKey||t.metaKey;break;case 37:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,a?1:-1,"D"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?-e.datepicker._get(o,"stepBigMonths"):-e.datepicker._get(o,"stepMonths"),"M");break;case 38:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,-7,"D"),r=t.ctrlKey||t.metaKey;break;case 39:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,a?-1:1,"D"),r=t.ctrlKey||t.metaKey,t.originalEvent.altKey&&e.datepicker._adjustDate(t.target,t.ctrlKey?+e.datepicker._get(o,"stepBigMonths"):+e.datepicker._get(o,"stepMonths"),"M");break;case 40:(t.ctrlKey||t.metaKey)&&e.datepicker._adjustDate(t.target,7,"D"),r=t.ctrlKey||t.metaKey;break;default:r=!1}else 36===t.keyCode&&t.ctrlKey?e.datepicker._showDatepicker(this):r=!1;r&&(t.preventDefault(),t.stopPropagation())},_doKeyPress:function(t){var i,n,s=e.datepicker._getInst(t.target);return e.datepicker._get(s,"constrainInput")?(i=e.datepicker._possibleChars(e.datepicker._get(s,"dateFormat")),n=String.fromCharCode(null==t.charCode?t.keyCode:t.charCode),t.ctrlKey||t.metaKey||" ">n||!i||i.indexOf(n)>-1):void 0},_doKeyUp:function(t){var i,n=e.datepicker._getInst(t.target);if(n.input.val()!==n.lastVal)try{i=e.datepicker.parseDate(e.datepicker._get(n,"dateFormat"),n.input?n.input.val():null,e.datepicker._getFormatConfig(n)),i&&(e.datepicker._setDateFromField(n),e.datepicker._updateAlternate(n),e.datepicker._updateDatepicker(n))}catch(s){}return!0},_showDatepicker:function(t){if(t=t.target||t,"input"!==t.nodeName.toLowerCase()&&(t=e("input",t.parentNode)[0]),!e.datepicker._isDisabledDatepicker(t)&&e.datepicker._lastInput!==t){var i,s,o,r,l,c,u;i=e.datepicker._getInst(t),e.datepicker._curInst&&e.datepicker._curInst!==i&&(e.datepicker._curInst.dpDiv.stop(!0,!0),i&&e.datepicker._datepickerShowing&&e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])),s=e.datepicker._get(i,"beforeShow"),o=s?s.apply(t,[t,i]):{},o!==!1&&(a(i.settings,o),i.lastVal=null,e.datepicker._lastInput=t,e.datepicker._setDateFromField(i),e.datepicker._inDialog&&(t.value=""),e.datepicker._pos||(e.datepicker._pos=e.datepicker._findPos(t),e.datepicker._pos[1]+=t.offsetHeight),r=!1,e(t).parents().each(function(){return r|="fixed"===e(this).css("position"),!r}),l={left:e.datepicker._pos[0],top:e.datepicker._pos[1]},e.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),e.datepicker._updateDatepicker(i),l=e.datepicker._checkOffset(i,l,r),i.dpDiv.css({position:e.datepicker._inDialog&&e.blockUI?"static":r?"fixed":"absolute",display:"none",left:l.left+"px",top:l.top+"px"}),i.inline||(c=e.datepicker._get(i,"showAnim"),u=e.datepicker._get(i,"duration"),i.dpDiv.css("z-index",n(e(t))+1),e.datepicker._datepickerShowing=!0,e.effects&&e.effects.effect[c]?i.dpDiv.show(c,e.datepicker._get(i,"showOptions"),u):i.dpDiv[c||"show"](c?u:null),e.datepicker._shouldFocusInput(i)&&i.input.focus(),e.datepicker._curInst=i))}},_updateDatepicker:function(t){this.maxRows=4,v=t,t.dpDiv.empty().append(this._generateHTML(t)),this._attachHandlers(t);var i,n=this._getNumberOfMonths(t),s=n[1],o=17,a=t.dpDiv.find("."+this._dayOverClass+" a");a.length>0&&r.apply(a.get(0)),t.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),s>1&&t.dpDiv.addClass("ui-datepicker-multi-"+s).css("width",o*s+"em"),t.dpDiv[(1!==n[0]||1!==n[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),t.dpDiv[(this._get(t,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),t===e.datepicker._curInst&&e.datepicker._datepickerShowing&&e.datepicker._shouldFocusInput(t)&&t.input.focus(),t.yearshtml&&(i=t.yearshtml,setTimeout(function(){i===t.yearshtml&&t.yearshtml&&t.dpDiv.find("select.ui-datepicker-year:first").replaceWith(t.yearshtml),i=t.yearshtml=null},0))},_shouldFocusInput:function(e){return e.input&&e.input.is(":visible")&&!e.input.is(":disabled")&&!e.input.is(":focus")},_checkOffset:function(t,i,n){var s=t.dpDiv.outerWidth(),o=t.dpDiv.outerHeight(),r=t.input?t.input.outerWidth():0,a=t.input?t.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:e(document).scrollLeft()),c=document.documentElement.clientHeight+(n?0:e(document).scrollTop());return i.left-=this._get(t,"isRTL")?s-r:0,i.left-=n&&i.left===t.input.offset().left?e(document).scrollLeft():0,i.top-=n&&i.top===t.input.offset().top+a?e(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>l&&l>s?Math.abs(i.left+s-l):0),i.top-=Math.min(i.top,i.top+o>c&&c>o?Math.abs(o+a):0),i},_findPos:function(t){for(var i,n=this._getInst(t),s=this._get(n,"isRTL");t&&("hidden"===t.type||1!==t.nodeType||e.expr.filters.hidden(t));)t=t[s?"previousSibling":"nextSibling"];return i=e(t).offset(),[i.left,i.top]},_hideDatepicker:function(t){var i,n,s,o,r=this._curInst;!r||t&&r!==e.data(t,"datepicker")||this._datepickerShowing&&(i=this._get(r,"showAnim"),n=this._get(r,"duration"),s=function(){e.datepicker._tidyDialog(r)},e.effects&&(e.effects.effect[i]||e.effects[i])?r.dpDiv.hide(i,e.datepicker._get(r,"showOptions"),n,s):r.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?n:null,s),i||s(),this._datepickerShowing=!1,o=this._get(r,"onClose"),o&&o.apply(r.input?r.input[0]:null,[r.input?r.input.val():"",r]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),e.blockUI&&(e.unblockUI(),e("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(e){e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(t){if(e.datepicker._curInst){var i=e(t.target),n=e.datepicker._getInst(i[0]);(i[0].id===e.datepicker._mainDivId||0!==i.parents("#"+e.datepicker._mainDivId).length||i.hasClass(e.datepicker.markerClassName)||i.closest("."+e.datepicker._triggerClass).length||!e.datepicker._datepickerShowing||e.datepicker._inDialog&&e.blockUI)&&(!i.hasClass(e.datepicker.markerClassName)||e.datepicker._curInst===n)||e.datepicker._hideDatepicker()}},_adjustDate:function(t,i,n){var s=e(t),o=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(o,i+("M"===n?this._get(o,"showCurrentAtPos"):0),n),this._updateDatepicker(o))},_gotoToday:function(t){var i,n=e(t),s=this._getInst(n[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(n)},_selectMonthYear:function(t,i,n){var s=e(t),o=this._getInst(s[0]);o["selected"+("M"===n?"Month":"Year")]=o["draw"+("M"===n?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(s)},_selectDay:function(t,i,n,s){var o,r=e(t);e(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(r[0])||(o=this._getInst(r[0]),o.selectedDay=o.currentDay=e("a",s).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=n,this._selectDate(t,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(t){var i=e(t);this._selectDate(i,"")},_selectDate:function(t,i){var n,s=e(t),o=this._getInst(s[0]);i=null!=i?i:this._formatDate(o),o.input&&o.input.val(i),this._updateAlternate(o),n=this._get(o,"onSelect"),n?n.apply(o.input?o.input[0]:null,[i,o]):o.input&&o.input.trigger("change"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],"object"!=typeof o.input[0]&&o.input.focus(),this._lastInput=null)},_updateAlternate:function(t){var i,n,s,o=this._get(t,"altField");o&&(i=this._get(t,"altFormat")||this._get(t,"dateFormat"),n=this._getDate(t),s=this.formatDate(i,n,this._getFormatConfig(t)),e(o).each(function(){e(this).val(s)}))},noWeekends:function(e){var t=e.getDay();return[t>0&&6>t,""]},iso8601Week:function(e){var t,i=new Date(e.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),t=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((t-i)/864e5)/7)+1},parseDate:function(t,i,n){if(null==t||null==i)throw"Invalid arguments";if(i="object"==typeof i?i.toString():i+"",""===i)return null;var s,o,r,a,l=0,c=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,u="string"!=typeof c?c:(new Date).getFullYear()%100+parseInt(c,10),h=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,d=(n?n.dayNames:null)||this._defaults.dayNames,p=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,f=(n?n.monthNames:null)||this._defaults.monthNames,g=-1,m=-1,v=-1,y=-1,w=!1,b=function(e){var i=s+1<t.length&&t.charAt(s+1)===e;return i&&s++,i},_=function(e){var t=b(e),n="@"===e?14:"!"===e?20:"y"===e&&t?4:"o"===e?3:2,s="y"===e?n:1,o=new RegExp("^\\d{"+s+","+n+"}"),r=i.substring(l).match(o);if(!r)throw"Missing number at position "+l;return l+=r[0].length,parseInt(r[0],10)},x=function(t,n,s){var o=-1,r=e.map(b(t)?s:n,function(e,t){return[[t,e]]}).sort(function(e,t){return-(e[1].length-t[1].length)});if(e.each(r,function(e,t){var n=t[1];return i.substr(l,n.length).toLowerCase()===n.toLowerCase()?(o=t[0],l+=n.length,!1):void 0}),-1!==o)return o+1;throw"Unknown name at position "+l},k=function(){if(i.charAt(l)!==t.charAt(s))throw"Unexpected literal at position "+l;l++};for(s=0;s<t.length;s++)if(w)"'"!==t.charAt(s)||b("'")?k():w=!1;else switch(t.charAt(s)){case"d":v=_("d");break;case"D":x("D",h,d);break;case"o":y=_("o");break;case"m":m=_("m");break;case"M":m=x("M",p,f);break;case"y":g=_("y");break;case"@":a=new Date(_("@")),g=a.getFullYear(),m=a.getMonth()+1,v=a.getDate();break;case"!":a=new Date((_("!")-this._ticksTo1970)/1e4),g=a.getFullYear(),m=a.getMonth()+1,v=a.getDate();break;case"'":b("'")?k():w=!0;break;default:k()}if(l<i.length&&(r=i.substr(l),!/^\s+/.test(r)))throw"Extra/unparsed characters found in date: "+r;if(-1===g?g=(new Date).getFullYear():100>g&&(g+=(new Date).getFullYear()-(new Date).getFullYear()%100+(u>=g?0:-100)),y>-1)for(m=1,v=y;;){if(o=this._getDaysInMonth(g,m-1),o>=v)break;m++,v-=o}if(a=this._daylightSavingAdjust(new Date(g,m-1,v)),a.getFullYear()!==g||a.getMonth()+1!==m||a.getDate()!==v)throw"Invalid date";return a},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:24*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925))*60*60*1e7,formatDate:function(e,t,i){if(!t)return"";var n,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,r=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,a=(i?i.monthNames:null)||this._defaults.monthNames,l=function(t){var i=n+1<e.length&&e.charAt(n+1)===t;return i&&n++,i},c=function(e,t,i){var n=""+t;if(l(e))for(;n.length<i;)n="0"+n;return n},u=function(e,t,i,n){return l(e)?n[t]:i[t]},h="",d=!1;if(t)for(n=0;n<e.length;n++)if(d)"'"!==e.charAt(n)||l("'")?h+=e.charAt(n):d=!1;else switch(e.charAt(n)){case"d":h+=c("d",t.getDate(),2);break;case"D":h+=u("D",t.getDay(),s,o);break;case"o":h+=c("o",Math.round((new Date(t.getFullYear(),t.getMonth(),t.getDate()).getTime()-new Date(t.getFullYear(),0,0).getTime())/864e5),3);break;case"m":h+=c("m",t.getMonth()+1,2);break;case"M":h+=u("M",t.getMonth(),r,a);break;case"y":h+=l("y")?t.getFullYear():(t.getYear()%100<10?"0":"")+t.getYear()%100;break;case"@":h+=t.getTime();break;case"!":h+=1e4*t.getTime()+this._ticksTo1970;break;case"'":l("'")?h+="'":d=!0;break;default:h+=e.charAt(n)}return h},_possibleChars:function(e){var t,i="",n=!1,s=function(i){var n=t+1<e.length&&e.charAt(t+1)===i;return n&&t++,n};for(t=0;t<e.length;t++)if(n)"'"!==e.charAt(t)||s("'")?i+=e.charAt(t):n=!1;else switch(e.charAt(t)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":s("'")?i+="'":n=!0;break;default:i+=e.charAt(t)}return i},_get:function(e,t){return void 0!==e.settings[t]?e.settings[t]:this._defaults[t]},_setDateFromField:function(e,t){if(e.input.val()!==e.lastVal){var i=this._get(e,"dateFormat"),n=e.lastVal=e.input?e.input.val():null,s=this._getDefaultDate(e),o=s,r=this._getFormatConfig(e);try{o=this.parseDate(i,n,r)||s}catch(a){n=t?"":n}e.selectedDay=o.getDate(),e.drawMonth=e.selectedMonth=o.getMonth(),e.drawYear=e.selectedYear=o.getFullYear(),e.currentDay=n?o.getDate():0,e.currentMonth=n?o.getMonth():0,e.currentYear=n?o.getFullYear():0,this._adjustInstDate(e)}},_getDefaultDate:function(e){return this._restrictMinMax(e,this._determineDate(e,this._get(e,"defaultDate"),new Date))},_determineDate:function(t,i,n){var s=function(e){var t=new Date;return t.setDate(t.getDate()+e),t},o=function(i){try{return e.datepicker.parseDate(e.datepicker._get(t,"dateFormat"),i,e.datepicker._getFormatConfig(t))}catch(n){}for(var s=(i.toLowerCase().match(/^c/)?e.datepicker._getDate(t):null)||new Date,o=s.getFullYear(),r=s.getMonth(),a=s.getDate(),l=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,c=l.exec(i);c;){switch(c[2]||"d"){case"d":case"D":a+=parseInt(c[1],10);break;case"w":case"W":a+=7*parseInt(c[1],10);break;case"m":case"M":r+=parseInt(c[1],10),a=Math.min(a,e.datepicker._getDaysInMonth(o,r));break;case"y":case"Y":o+=parseInt(c[1],10),a=Math.min(a,e.datepicker._getDaysInMonth(o,r))}c=l.exec(i)}return new Date(o,r,a)},r=null==i||""===i?n:"string"==typeof i?o(i):"number"==typeof i?isNaN(i)?n:s(i):new Date(i.getTime());return r=r&&"Invalid Date"===r.toString()?n:r,r&&(r.setHours(0),r.setMinutes(0),r.setSeconds(0),r.setMilliseconds(0)),this._daylightSavingAdjust(r)},_daylightSavingAdjust:function(e){return e?(e.setHours(e.getHours()>12?e.getHours()+2:0),e):null},_setDate:function(e,t,i){var n=!t,s=e.selectedMonth,o=e.selectedYear,r=this._restrictMinMax(e,this._determineDate(e,t,new Date));e.selectedDay=e.currentDay=r.getDate(),e.drawMonth=e.selectedMonth=e.currentMonth=r.getMonth(),e.drawYear=e.selectedYear=e.currentYear=r.getFullYear(),s===e.selectedMonth&&o===e.selectedYear||i||this._notifyChange(e),this._adjustInstDate(e),e.input&&e.input.val(n?"":this._formatDate(e))},_getDate:function(e){var t=!e.currentYear||e.input&&""===e.input.val()?null:this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return t},_attachHandlers:function(t){var i=this._get(t,"stepMonths"),n="#"+t.id.replace(/\\\\/g,"\\");t.dpDiv.find("[data-handler]").map(function(){var t={prev:function(){e.datepicker._adjustDate(n,-i,"M")},next:function(){e.datepicker._adjustDate(n,+i,"M")},hide:function(){e.datepicker._hideDatepicker()},today:function(){e.datepicker._gotoToday(n)},selectDay:function(){return e.datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return e.datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return e.datepicker._selectMonthYear(n,this,"Y"),!1}};e(this).bind(this.getAttribute("data-event"),t[this.getAttribute("data-handler")])})},_generateHTML:function(e){var t,i,n,s,o,r,a,l,c,u,h,d,p,f,g,m,v,y,w,b,_,x,k,C,j,E,T,A,P,I,D,L,M,S,R,O,N,W,F,H=new Date,z=this._daylightSavingAdjust(new Date(H.getFullYear(),H.getMonth(),H.getDate())),Y=this._get(e,"isRTL"),B=this._get(e,"showButtonPanel"),$=this._get(e,"hideIfNoPrevNext"),q=this._get(e,"navigationAsDateFormat"),V=this._getNumberOfMonths(e),J=this._get(e,"showCurrentAtPos"),U=this._get(e,"stepMonths"),K=1!==V[0]||1!==V[1],G=this._daylightSavingAdjust(e.currentDay?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(9999,9,9)),X=this._getMinMaxDate(e,"min"),Q=this._getMinMaxDate(e,"max"),Z=e.drawMonth-J,ee=e.drawYear;if(0>Z&&(Z+=12,ee--),Q)for(t=this._daylightSavingAdjust(new Date(Q.getFullYear(),Q.getMonth()-V[0]*V[1]+1,Q.getDate())),t=X&&X>t?X:t;this._daylightSavingAdjust(new Date(ee,Z,1))>t;)Z--,0>Z&&(Z=11,ee--);for(e.drawMonth=Z,e.drawYear=ee,i=this._get(e,"prevText"),i=q?this.formatDate(i,this._daylightSavingAdjust(new Date(ee,Z-U,1)),this._getFormatConfig(e)):i,n=this._canAdjustMonth(e,-1,ee,Z)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"'>"+i+"</span></a>":$?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"e":"w")+"'>"+i+"</span></a>",s=this._get(e,"nextText"),s=q?this.formatDate(s,this._daylightSavingAdjust(new Date(ee,Z+U,1)),this._getFormatConfig(e)):s,o=this._canAdjustMonth(e,1,ee,Z)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"'>"+s+"</span></a>":$?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(Y?"w":"e")+"'>"+s+"</span></a>",r=this._get(e,"currentText"),a=this._get(e,"gotoCurrent")&&e.currentDay?G:z,r=q?this.formatDate(r,a,this._getFormatConfig(e)):r,l=e.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(e,"closeText")+"</button>",c=B?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(Y?l:"")+(this._isInRange(e,a)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+r+"</button>":"")+(Y?"":l)+"</div>":"",u=parseInt(this._get(e,"firstDay"),10),u=isNaN(u)?0:u,h=this._get(e,"showWeek"),d=this._get(e,"dayNames"),p=this._get(e,"dayNamesMin"),f=this._get(e,"monthNames"),g=this._get(e,"monthNamesShort"),m=this._get(e,"beforeShowDay"),v=this._get(e,"showOtherMonths"),y=this._get(e,"selectOtherMonths"),w=this._getDefaultDate(e),b="",x=0;x<V[0];x++){for(k="",this.maxRows=4,C=0;C<V[1];C++){if(j=this._daylightSavingAdjust(new Date(ee,Z,e.selectedDay)),E=" ui-corner-all",T="",K){if(T+="<div class='ui-datepicker-group",V[1]>1)switch(C){case 0:T+=" ui-datepicker-group-first",E=" ui-corner-"+(Y?"right":"left");break;case V[1]-1:T+=" ui-datepicker-group-last",E=" ui-corner-"+(Y?"left":"right");break;default:T+=" ui-datepicker-group-middle",E=""}T+="'>"}for(T+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+E+"'>"+(/all|left/.test(E)&&0===x?Y?o:n:"")+(/all|right/.test(E)&&0===x?Y?n:o:"")+this._generateMonthYearHeader(e,Z,ee,X,Q,x>0||C>0,f,g)+"</div><table class='ui-datepicker-calendar'><thead><tr>",A=h?"<th class='ui-datepicker-week-col'>"+this._get(e,"weekHeader")+"</th>":"",_=0;7>_;_++)P=(_+u)%7,A+="<th scope='col'"+((_+u+6)%7>=5?" class='ui-datepicker-week-end'":"")+"><span title='"+d[P]+"'>"+p[P]+"</span></th>";for(T+=A+"</tr></thead><tbody>",I=this._getDaysInMonth(ee,Z),ee===e.selectedYear&&Z===e.selectedMonth&&(e.selectedDay=Math.min(e.selectedDay,I)),D=(this._getFirstDayOfMonth(ee,Z)-u+7)%7,L=Math.ceil((D+I)/7),M=K&&this.maxRows>L?this.maxRows:L,this.maxRows=M,S=this._daylightSavingAdjust(new Date(ee,Z,1-D)),R=0;M>R;R++){for(T+="<tr>",O=h?"<td class='ui-datepicker-week-col'>"+this._get(e,"calculateWeek")(S)+"</td>":"",_=0;7>_;_++)N=m?m.apply(e.input?e.input[0]:null,[S]):[!0,""],W=S.getMonth()!==Z,F=W&&!y||!N[0]||X&&X>S||Q&&S>Q,O+="<td class='"+((_+u+6)%7>=5?" ui-datepicker-week-end":"")+(W?" ui-datepicker-other-month":"")+(S.getTime()===j.getTime()&&Z===e.selectedMonth&&e._keyEvent||w.getTime()===S.getTime()&&w.getTime()===j.getTime()?" "+this._dayOverClass:"")+(F?" "+this._unselectableClass+" ui-state-disabled":"")+(W&&!v?"":" "+N[1]+(S.getTime()===G.getTime()?" "+this._currentClass:"")+(S.getTime()===z.getTime()?" ui-datepicker-today":""))+"'"+(W&&!v||!N[2]?"":" title='"+N[2].replace(/'/g,"&#39;")+"'")+(F?"":" data-handler='selectDay' data-event='click' data-month='"+S.getMonth()+"' data-year='"+S.getFullYear()+"'")+">"+(W&&!v?"&#xa0;":F?"<span class='ui-state-default'>"+S.getDate()+"</span>":"<a class='ui-state-default"+(S.getTime()===z.getTime()?" ui-state-highlight":"")+(S.getTime()===G.getTime()?" ui-state-active":"")+(W?" ui-priority-secondary":"")+"' href='#'>"+S.getDate()+"</a>")+"</td>",S.setDate(S.getDate()+1),S=this._daylightSavingAdjust(S);T+=O+"</tr>"}Z++,Z>11&&(Z=0,ee++),T+="</tbody></table>"+(K?"</div>"+(V[0]>0&&C===V[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),k+=T}b+=k}return b+=c,e._keyEvent=!1,b},_generateMonthYearHeader:function(e,t,i,n,s,o,r,a){var l,c,u,h,d,p,f,g,m=this._get(e,"changeMonth"),v=this._get(e,"changeYear"),y=this._get(e,"showMonthAfterYear"),w="<div class='ui-datepicker-title'>",b="";if(o||!m)b+="<span class='ui-datepicker-month'>"+r[t]+"</span>";else{for(l=n&&n.getFullYear()===i,c=s&&s.getFullYear()===i,b+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",u=0;12>u;u++)(!l||u>=n.getMonth())&&(!c||u<=s.getMonth())&&(b+="<option value='"+u+"'"+(u===t?" selected='selected'":"")+">"+a[u]+"</option>");b+="</select>"}if(y||(w+=b+(!o&&m&&v?"":"&#xa0;")),!e.yearshtml)if(e.yearshtml="",o||!v)w+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(h=this._get(e,"yearRange").split(":"),d=(new Date).getFullYear(),p=function(e){var t=e.match(/c[+\-].*/)?i+parseInt(e.substring(1),10):e.match(/[+\-].*/)?d+parseInt(e,10):parseInt(e,10);return isNaN(t)?d:t},f=p(h[0]),g=Math.max(f,p(h[1]||"")),f=n?Math.max(f,n.getFullYear()):f,g=s?Math.min(g,s.getFullYear()):g,e.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";g>=f;f++)e.yearshtml+="<option value='"+f+"'"+(f===i?" selected='selected'":"")+">"+f+"</option>";e.yearshtml+="</select>",w+=e.yearshtml,e.yearshtml=null}return w+=this._get(e,"yearSuffix"),y&&(w+=(!o&&m&&v?"":"&#xa0;")+b),w+="</div>"},_adjustInstDate:function(e,t,i){var n=e.drawYear+("Y"===i?t:0),s=e.drawMonth+("M"===i?t:0),o=Math.min(e.selectedDay,this._getDaysInMonth(n,s))+("D"===i?t:0),r=this._restrictMinMax(e,this._daylightSavingAdjust(new Date(n,s,o)));e.selectedDay=r.getDate(),e.drawMonth=e.selectedMonth=r.getMonth(),e.drawYear=e.selectedYear=r.getFullYear(),"M"!==i&&"Y"!==i||this._notifyChange(e)},_restrictMinMax:function(e,t){var i=this._getMinMaxDate(e,"min"),n=this._getMinMaxDate(e,"max"),s=i&&i>t?i:t;return n&&s>n?n:s},_notifyChange:function(e){var t=this._get(e,"onChangeMonthYear");t&&t.apply(e.input?e.input[0]:null,[e.selectedYear,e.selectedMonth+1,e])},_getNumberOfMonths:function(e){var t=this._get(e,"numberOfMonths");return null==t?[1,1]:"number"==typeof t?[1,t]:t},_getMinMaxDate:function(e,t){return this._determineDate(e,this._get(e,t+"Date"),null)},_getDaysInMonth:function(e,t){return 32-this._daylightSavingAdjust(new Date(e,t,32)).getDate()},_getFirstDayOfMonth:function(e,t){return new Date(e,t,1).getDay()},_canAdjustMonth:function(e,t,i,n){var s=this._getNumberOfMonths(e),o=this._daylightSavingAdjust(new Date(i,n+(0>t?t:s[0]*s[1]),1));return 0>t&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(e,o)},_isInRange:function(e,t){var i,n,s=this._getMinMaxDate(e,"min"),o=this._getMinMaxDate(e,"max"),r=null,a=null,l=this._get(e,"yearRange");return l&&(i=l.split(":"),n=(new Date).getFullYear(),r=parseInt(i[0],10),a=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(r+=n),i[1].match(/[+\-].*/)&&(a+=n)),(!s||t.getTime()>=s.getTime())&&(!o||t.getTime()<=o.getTime())&&(!r||t.getFullYear()>=r)&&(!a||t.getFullYear()<=a)},_getFormatConfig:function(e){var t=this._get(e,"shortYearCutoff");return t="string"!=typeof t?t:(new Date).getFullYear()%100+parseInt(t,10),{shortYearCutoff:t,dayNamesShort:this._get(e,"dayNamesShort"),dayNames:this._get(e,"dayNames"),monthNamesShort:this._get(e,"monthNamesShort"),monthNames:this._get(e,"monthNames")}},_formatDate:function(e,t,i,n){t||(e.currentDay=e.selectedDay,e.currentMonth=e.selectedMonth,e.currentYear=e.selectedYear);var s=t?"object"==typeof t?t:this._daylightSavingAdjust(new Date(n,i,t)):this._daylightSavingAdjust(new Date(e.currentYear,e.currentMonth,e.currentDay));return this.formatDate(this._get(e,"dateFormat"),s,this._getFormatConfig(e))}}),e.fn.datepicker=function(t){if(!this.length)return this;e.datepicker.initialized||(e(document).mousedown(e.datepicker._checkExternalClick),e.datepicker.initialized=!0),0===e("#"+e.datepicker._mainDivId).length&&e("body").append(e.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof t||"isDisabled"!==t&&"getDate"!==t&&"widget"!==t?"option"===t&&2===arguments.length&&"string"==typeof arguments[1]?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof t?e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this].concat(i)):e.datepicker._attachDatepicker(this,t)}):e.datepicker["_"+t+"Datepicker"].apply(e.datepicker,[this[0]].concat(i))},e.datepicker=new s,e.datepicker.initialized=!1,e.datepicker.uuid=(new Date).getTime(),e.datepicker.version="1.11.4";e.datepicker;e.widget("ui.draggable",e.ui.mouse,{version:"1.11.4",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._setHandleClassName(),this._mouseInit()},_setOption:function(e,t){this._super(e,t),"handle"===e&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?void(this.destroyOnClear=!0):(this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._removeHandleClassName(),void this._mouseDestroy())},_mouseCapture:function(t){var i=this.options;return this._blurActiveElement(t),this.helper||i.disabled||e(t.target).closest(".ui-resizable-handle").length>0?!1:(this.handle=this._getHandle(t),this.handle?(this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0):!1)},_blockFrames:function(t){this.iframeBlocks=this.document.find(t).map(function(){var t=e(this);return e("<div>").css("position","absolute").appendTo(t.parent()).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).offset(t.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(t){var i=this.document[0];if(this.handleElement.is(t.target))try{i.activeElement&&"body"!==i.activeElement.nodeName.toLowerCase()&&e(i.activeElement).blur()}catch(n){}},_mouseStart:function(t){var i=this.options;return this.helper=this._createHelper(t),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),e.ui.ddmanager&&(e.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===e(this).css("position")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(t),this.originalPosition=this.position=this._generatePosition(t,!1),this.originalPageX=t.pageX,this.originalPageY=t.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",t)===!1?(this._clear(),!1):(this._cacheHelperProportions(),e.ui.ddmanager&&!i.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this._normalizeRightBottom(),this._mouseDrag(t,!0),e.ui.ddmanager&&e.ui.ddmanager.dragStart(this,t),!0)},_refreshOffsets:function(e){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:e.pageX-this.offset.left,top:e.pageY-this.offset.top}},_mouseDrag:function(t,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(t,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var n=this._uiHash();if(this._trigger("drag",t,n)===!1)return this._mouseUp({}),!1;this.position=n.position;
}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),!1},_mouseStop:function(t){var i=this,n=!1;return e.ui.ddmanager&&!this.options.dropBehaviour&&(n=e.ui.ddmanager.drop(this,t)),this.dropped&&(n=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!n||"valid"===this.options.revert&&n||this.options.revert===!0||e.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?e(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",t)!==!1&&i._clear()}):this._trigger("stop",t)!==!1&&this._clear(),!1},_mouseUp:function(t){return this._unblockFrames(),e.ui.ddmanager&&e.ui.ddmanager.dragStop(this,t),this.handleElement.is(t.target)&&this.element.focus(),e.ui.mouse.prototype._mouseUp.call(this,t)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(t){return this.options.handle?!!e(t.target).closest(this.element.find(this.options.handle)).length:!0},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this.handleElement.addClass("ui-draggable-handle")},_removeHandleClassName:function(){this.handleElement.removeClass("ui-draggable-handle")},_createHelper:function(t){var i=this.options,n=e.isFunction(i.helper),s=n?e(i.helper.apply(this.element[0],[t])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),n&&s[0]===this.element[0]&&this._setPositionRelative(),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_isRootNode:function(e){return/(html|body)/i.test(e.tagName)||e===this.document[0]},_getParentOffset:function(){var t=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var e=this.element.position(),t=this._isRootNode(this.scrollParent[0]);return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+(t?0:this.scrollParent.scrollTop()),left:e.left-(parseInt(this.helper.css("left"),10)||0)+(t?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,n,s=this.options,o=this.document[0];return this.relativeContainer=null,s.containment?"window"===s.containment?void(this.containment=[e(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,e(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,e(window).scrollLeft()+e(window).width()-this.helperProportions.width-this.margins.left,e(window).scrollTop()+(e(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):"document"===s.containment?void(this.containment=[0,0,e(o).width()-this.helperProportions.width-this.margins.left,(e(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):s.containment.constructor===Array?void(this.containment=s.containment):("parent"===s.containment&&(s.containment=this.helper[0].parentNode),i=e(s.containment),n=i[0],void(n&&(t=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(t?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(t?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i))):void(this.containment=null)},_convertPositionTo:function(e,t){t||(t=this.position);var i="absolute"===e?1:-1,n=this._isRootNode(this.scrollParent[0]);return{top:t.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top)*i,left:t.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)*i}},_generatePosition:function(e,t){var i,n,s,o,r=this.options,a=this._isRootNode(this.scrollParent[0]),l=e.pageX,c=e.pageY;return a&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),t&&(this.containment&&(this.relativeContainer?(n=this.relativeContainer.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,e.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),e.pageY-this.offset.click.top<i[1]&&(c=i[1]+this.offset.click.top),e.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),e.pageY-this.offset.click.top>i[3]&&(c=i[3]+this.offset.click.top)),r.grid&&(s=r.grid[1]?this.originalPageY+Math.round((c-this.originalPageY)/r.grid[1])*r.grid[1]:this.originalPageY,c=i?s-this.offset.click.top>=i[1]||s-this.offset.click.top>i[3]?s:s-this.offset.click.top>=i[1]?s-r.grid[1]:s+r.grid[1]:s,o=r.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/r.grid[0])*r.grid[0]:this.originalPageX,l=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-r.grid[0]:o+r.grid[0]:o),"y"===r.axis&&(l=this.originalPageX),"x"===r.axis&&(c=this.originalPageY)),{top:c-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:a?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:a?0:this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_normalizeRightBottom:function(){"y"!==this.options.axis&&"auto"!==this.helper.css("right")&&(this.helper.width(this.helper.width()),this.helper.css("right","auto")),"x"!==this.options.axis&&"auto"!==this.helper.css("bottom")&&(this.helper.height(this.helper.height()),this.helper.css("bottom","auto"))},_trigger:function(t,i,n){return n=n||this._uiHash(),e.ui.plugin.call(this,t,[i,n,this],!0),/^(drag|start|stop)/.test(t)&&(this.positionAbs=this._convertPositionTo("absolute"),n.offset=this.positionAbs),e.Widget.prototype._trigger.call(this,t,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),e.ui.plugin.add("draggable","connectToSortable",{start:function(t,i,n){var s=e.extend({},i,{item:n.element});n.sortables=[],e(n.options.connectToSortable).each(function(){var i=e(this).sortable("instance");i&&!i.options.disabled&&(n.sortables.push(i),i.refreshPositions(),i._trigger("activate",t,s))})},stop:function(t,i,n){var s=e.extend({},i,{item:n.element});n.cancelHelperRemoval=!1,e.each(n.sortables,function(){var e=this;e.isOver?(e.isOver=0,n.cancelHelperRemoval=!0,e.cancelHelperRemoval=!1,e._storedCSS={position:e.placeholder.css("position"),top:e.placeholder.css("top"),left:e.placeholder.css("left")},e._mouseStop(t),e.options.helper=e.options._helper):(e.cancelHelperRemoval=!0,e._trigger("deactivate",t,s))})},drag:function(t,i,n){e.each(n.sortables,function(){var s=!1,o=this;o.positionAbs=n.positionAbs,o.helperProportions=n.helperProportions,o.offset.click=n.offset.click,o._intersectsWith(o.containerCache)&&(s=!0,e.each(n.sortables,function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&e.contains(o.element[0],this.element[0])&&(s=!1),s})),s?(o.isOver||(o.isOver=1,n._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data("ui-sortable-item",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},t.target=o.currentItem[0],o._mouseCapture(t,!0),o._mouseStart(t,!0,!0),o.offset.click.top=n.offset.click.top,o.offset.click.left=n.offset.click.left,o.offset.parent.left-=n.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=n.offset.parent.top-o.offset.parent.top,n._trigger("toSortable",t),n.dropped=o.element,e.each(n.sortables,function(){this.refreshPositions()}),n.currentItem=n.element,o.fromOutside=n),o.currentItem&&(o._mouseDrag(t),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger("out",t,o._uiHash(o)),o._mouseStop(t,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(n._parent),n._refreshOffsets(t),i.position=n._generatePosition(t,!0),n._trigger("fromSortable",t),n.dropped=!1,e.each(n.sortables,function(){this.refreshPositions()}))})}}),e.ui.plugin.add("draggable","cursor",{start:function(t,i,n){var s=e("body"),o=n.options;s.css("cursor")&&(o._cursor=s.css("cursor")),s.css("cursor",o.cursor)},stop:function(t,i,n){var s=n.options;s._cursor&&e("body").css("cursor",s._cursor)}}),e.ui.plugin.add("draggable","opacity",{start:function(t,i,n){var s=e(i.helper),o=n.options;s.css("opacity")&&(o._opacity=s.css("opacity")),s.css("opacity",o.opacity)},stop:function(t,i,n){var s=n.options;s._opacity&&e(i.helper).css("opacity",s._opacity)}}),e.ui.plugin.add("draggable","scroll",{start:function(e,t,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(t,i,n){var s=n.options,o=!1,r=n.scrollParentNotHidden[0],a=n.document[0];r!==a&&"HTML"!==r.tagName?(s.axis&&"x"===s.axis||(n.overflowOffset.top+r.offsetHeight-t.pageY<s.scrollSensitivity?r.scrollTop=o=r.scrollTop+s.scrollSpeed:t.pageY-n.overflowOffset.top<s.scrollSensitivity&&(r.scrollTop=o=r.scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(n.overflowOffset.left+r.offsetWidth-t.pageX<s.scrollSensitivity?r.scrollLeft=o=r.scrollLeft+s.scrollSpeed:t.pageX-n.overflowOffset.left<s.scrollSensitivity&&(r.scrollLeft=o=r.scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(t.pageY-e(a).scrollTop()<s.scrollSensitivity?o=e(a).scrollTop(e(a).scrollTop()-s.scrollSpeed):e(window).height()-(t.pageY-e(a).scrollTop())<s.scrollSensitivity&&(o=e(a).scrollTop(e(a).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(t.pageX-e(a).scrollLeft()<s.scrollSensitivity?o=e(a).scrollLeft(e(a).scrollLeft()-s.scrollSpeed):e(window).width()-(t.pageX-e(a).scrollLeft())<s.scrollSensitivity&&(o=e(a).scrollLeft(e(a).scrollLeft()+s.scrollSpeed)))),o!==!1&&e.ui.ddmanager&&!s.dropBehaviour&&e.ui.ddmanager.prepareOffsets(n,t)}}),e.ui.plugin.add("draggable","snap",{start:function(t,i,n){var s=n.options;n.snapElements=[],e(s.snap.constructor!==String?s.snap.items||":data(ui-draggable)":s.snap).each(function(){var t=e(this),i=t.offset();this!==n.element[0]&&n.snapElements.push({item:this,width:t.outerWidth(),height:t.outerHeight(),top:i.top,left:i.left})})},drag:function(t,i,n){var s,o,r,a,l,c,u,h,d,p,f=n.options,g=f.snapTolerance,m=i.offset.left,v=m+n.helperProportions.width,y=i.offset.top,w=y+n.helperProportions.height;for(d=n.snapElements.length-1;d>=0;d--)l=n.snapElements[d].left-n.margins.left,c=l+n.snapElements[d].width,u=n.snapElements[d].top-n.margins.top,h=u+n.snapElements[d].height,l-g>v||m>c+g||u-g>w||y>h+g||!e.contains(n.snapElements[d].item.ownerDocument,n.snapElements[d].item)?(n.snapElements[d].snapping&&n.options.snap.release&&n.options.snap.release.call(n.element,t,e.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=!1):("inner"!==f.snapMode&&(s=Math.abs(u-w)<=g,o=Math.abs(h-y)<=g,r=Math.abs(l-v)<=g,a=Math.abs(c-m)<=g,s&&(i.position.top=n._convertPositionTo("relative",{top:u-n.helperProportions.height,left:0}).top),o&&(i.position.top=n._convertPositionTo("relative",{top:h,left:0}).top),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l-n.helperProportions.width}).left),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:c}).left)),p=s||o||r||a,"outer"!==f.snapMode&&(s=Math.abs(u-y)<=g,o=Math.abs(h-w)<=g,r=Math.abs(l-m)<=g,a=Math.abs(c-v)<=g,s&&(i.position.top=n._convertPositionTo("relative",{top:u,left:0}).top),o&&(i.position.top=n._convertPositionTo("relative",{top:h-n.helperProportions.height,left:0}).top),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l}).left),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:c-n.helperProportions.width}).left)),!n.snapElements[d].snapping&&(s||o||r||a||p)&&n.options.snap.snap&&n.options.snap.snap.call(n.element,t,e.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=s||o||r||a||p)}}),e.ui.plugin.add("draggable","stack",{start:function(t,i,n){var s,o=n.options,r=e.makeArray(e(o.stack)).sort(function(t,i){return(parseInt(e(t).css("zIndex"),10)||0)-(parseInt(e(i).css("zIndex"),10)||0)});r.length&&(s=parseInt(e(r[0]).css("zIndex"),10)||0,e(r).each(function(t){e(this).css("zIndex",s+t)}),this.css("zIndex",s+r.length))}}),e.ui.plugin.add("draggable","zIndex",{start:function(t,i,n){var s=e(i.helper),o=n.options;s.css("zIndex")&&(o._zIndex=s.css("zIndex")),s.css("zIndex",o.zIndex)},stop:function(t,i,n){var s=n.options;s._zIndex&&e(i.helper).css("zIndex",s._zIndex)}});e.ui.draggable;e.widget("ui.resizable",e.ui.mouse,{version:"1.11.4",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(e){return parseInt(e,10)||0},_isNumber:function(e){return!isNaN(parseInt(e,10))},_hasScroll:function(t,i){if("hidden"===e(t).css("overflow"))return!1;var n=i&&"left"===i?"scrollLeft":"scrollTop",s=!1;return t[n]>0?!0:(t[n]=1,s=t[n]>0,t[n]=0,s)},_create:function(){var t,i,n,s,o,r=this,a=this.options;if(this.element.addClass("ui-resizable"),e.extend(this,{_aspectRatio:!!a.aspectRatio,aspectRatio:a.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:a.helper||a.ghost||a.animate?a.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=a.handles||(e(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=e(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),t=this.handles.split(","),this.handles={},i=0;i<t.length;i++)n=e.trim(t[i]),o="ui-resizable-"+n,s=e("<div class='ui-resizable-handle "+o+"'></div>"),s.css({zIndex:a.zIndex}),"se"===n&&s.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[n]=".ui-resizable-"+n,this.element.append(s);this._renderAxis=function(t){var i,n,s,o;t=t||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=e(this.handles[i]),this._on(this.handles[i],{mousedown:r._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(n=e(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?n.outerHeight():n.outerWidth(),s=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),t.css(s,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.mouseover(function(){r.resizing||(this.className&&(s=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),r.axis=s&&s[1]?s[1]:"se")}),a.autoHide&&(this._handles.hide(),e(this.element).addClass("ui-resizable-autohide").mouseenter(function(){a.disabled||(e(this).removeClass("ui-resizable-autohide"),r._handles.show())}).mouseleave(function(){a.disabled||r.resizing||(e(this).addClass("ui-resizable-autohide"),r._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var t,i=function(t){e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),t=this.element,this.originalElement.css({position:t.css("position"),width:t.outerWidth(),height:t.outerHeight(),top:t.css("top"),left:t.css("left")}).insertAfter(t),t.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(t){var i,n,s=!1;for(i in this.handles)n=e(this.handles[i])[0],(n===t.target||e.contains(n,t.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(t){var i,n,s,o=this.options,r=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),n=this._num(this.helper.css("top")),o.containment&&(i+=e(o.containment).scrollLeft()||0,n+=e(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:r.width(),height:r.height()},this.originalSize=this._helper?{width:r.outerWidth(),height:r.outerHeight()}:{width:r.width(),height:r.height()},this.sizeDiff={width:r.outerWidth()-r.width(),height:r.outerHeight()-r.height()},this.originalPosition={left:i,top:n},this.originalMousePosition={left:t.pageX,top:t.pageY},this.aspectRatio="number"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=e(".ui-resizable-"+this.axis).css("cursor"),e("body").css("cursor","auto"===s?this.axis+"-resize":s),r.addClass("ui-resizable-resizing"),this._propagate("start",t),!0},_mouseDrag:function(t){var i,n,s=this.originalMousePosition,o=this.axis,r=t.pageX-s.left||0,a=t.pageY-s.top||0,l=this._change[o];return this._updatePrevProperties(),l?(i=l.apply(this,[t,r,a]),this._updateVirtualBoundaries(t.shiftKey),(this._aspectRatio||t.shiftKey)&&(i=this._updateRatio(i,t)),i=this._respectSize(i,t),this._updateCache(i),this._propagate("resize",t),n=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),e.isEmptyObject(n)||(this._updatePrevProperties(),this._trigger("resize",t,this.ui()),this._applyChanges()),!1):!1},_mouseStop:function(t){this.resizing=!1;var i,n,s,o,r,a,l,c=this.options,u=this;return this._helper&&(i=this._proportionallyResizeElements,n=i.length&&/textarea/i.test(i[0].nodeName),s=n&&this._hasScroll(i[0],"left")?0:u.sizeDiff.height,o=n?0:u.sizeDiff.width,r={width:u.helper.width()-o,height:u.helper.height()-s},a=parseInt(u.element.css("left"),10)+(u.position.left-u.originalPosition.left)||null,l=parseInt(u.element.css("top"),10)+(u.position.top-u.originalPosition.top)||null,c.animate||this.element.css(e.extend(r,{top:l,left:a})),u.helper.height(u.size.height),u.helper.width(u.size.width),this._helper&&!c.animate&&this._proportionallyResize()),e("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",t),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var e={};return this.position.top!==this.prevPosition.top&&(e.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(e.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(e.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(e.height=this.size.height+"px"),this.helper.css(e),e},_updateVirtualBoundaries:function(e){var t,i,n,s,o,r=this.options;o={minWidth:this._isNumber(r.minWidth)?r.minWidth:0,maxWidth:this._isNumber(r.maxWidth)?r.maxWidth:1/0,minHeight:this._isNumber(r.minHeight)?r.minHeight:0,maxHeight:this._isNumber(r.maxHeight)?r.maxHeight:1/0},(this._aspectRatio||e)&&(t=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,s=o.maxWidth/this.aspectRatio,t>o.minWidth&&(o.minWidth=t),n>o.minHeight&&(o.minHeight=n),i<o.maxWidth&&(o.maxWidth=i),s<o.maxHeight&&(o.maxHeight=s)),this._vBoundaries=o},_updateCache:function(e){this.offset=this.helper.offset(),this._isNumber(e.left)&&(this.position.left=e.left),this._isNumber(e.top)&&(this.position.top=e.top),this._isNumber(e.height)&&(this.size.height=e.height),this._isNumber(e.width)&&(this.size.width=e.width)},_updateRatio:function(e){var t=this.position,i=this.size,n=this.axis;return this._isNumber(e.height)?e.width=e.height*this.aspectRatio:this._isNumber(e.width)&&(e.height=e.width/this.aspectRatio),"sw"===n&&(e.left=t.left+(i.width-e.width),e.top=null),"nw"===n&&(e.top=t.top+(i.height-e.height),e.left=t.left+(i.width-e.width)),e},_respectSize:function(e){var t=this._vBoundaries,i=this.axis,n=this._isNumber(e.width)&&t.maxWidth&&t.maxWidth<e.width,s=this._isNumber(e.height)&&t.maxHeight&&t.maxHeight<e.height,o=this._isNumber(e.width)&&t.minWidth&&t.minWidth>e.width,r=this._isNumber(e.height)&&t.minHeight&&t.minHeight>e.height,a=this.originalPosition.left+this.originalSize.width,l=this.position.top+this.size.height,c=/sw|nw|w/.test(i),u=/nw|ne|n/.test(i);return o&&(e.width=t.minWidth),r&&(e.height=t.minHeight),n&&(e.width=t.maxWidth),s&&(e.height=t.maxHeight),o&&c&&(e.left=a-t.minWidth),n&&c&&(e.left=a-t.maxWidth),r&&u&&(e.top=l-t.minHeight),s&&u&&(e.top=l-t.maxHeight),e.width||e.height||e.left||!e.top?e.width||e.height||e.top||!e.left||(e.left=null):e.top=null,e},_getPaddingPlusBorderDimensions:function(e){for(var t=0,i=[],n=[e.css("borderTopWidth"),e.css("borderRightWidth"),e.css("borderBottomWidth"),e.css("borderLeftWidth")],s=[e.css("paddingTop"),e.css("paddingRight"),e.css("paddingBottom"),e.css("paddingLeft")];4>t;t++)i[t]=parseInt(n[t],10)||0,i[t]+=parseInt(s[t],10)||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var e,t=0,i=this.helper||this.element;t<this._proportionallyResizeElements.length;t++)e=this._proportionallyResizeElements[t],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(e)),e.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var t=this.element,i=this.options;this.elementOffset=t.offset(),this._helper?(this.helper=this.helper||e("<div style='overflow:hidden;'></div>"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(e,t){return{width:this.originalSize.width+t}},w:function(e,t){var i=this.originalSize,n=this.originalPosition;return{left:n.left+t,width:i.width-t}},n:function(e,t,i){var n=this.originalSize,s=this.originalPosition;return{top:s.top+i,height:n.height-i}},s:function(e,t,i){return{height:this.originalSize.height+i}},se:function(t,i,n){return e.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[t,i,n]))},sw:function(t,i,n){return e.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[t,i,n]))},ne:function(t,i,n){return e.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[t,i,n]))},nw:function(t,i,n){return e.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[t,i,n]))}},_propagate:function(t,i){e.ui.plugin.call(this,t,[i,this.ui()]),"resize"!==t&&this._trigger(t,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),e.ui.plugin.add("resizable","animate",{stop:function(t){var i=e(this).resizable("instance"),n=i.options,s=i._proportionallyResizeElements,o=s.length&&/textarea/i.test(s[0].nodeName),r=o&&i._hasScroll(s[0],"left")?0:i.sizeDiff.height,a=o?0:i.sizeDiff.width,l={width:i.size.width-a,height:i.size.height-r},c=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,u=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(e.extend(l,u&&c?{top:u,left:c}:{}),{duration:n.animateDuration,easing:n.animateEasing,step:function(){var n={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};s&&s.length&&e(s[0]).css({width:n.width,height:n.height}),i._updateCache(n),i._propagate("resize",t)}})}}),e.ui.plugin.add("resizable","containment",{start:function(){var t,i,n,s,o,r,a,l=e(this).resizable("instance"),c=l.options,u=l.element,h=c.containment,d=h instanceof e?h.get(0):/parent/.test(h)?u.parent().get(0):h;d&&(l.containerElement=e(d),/document/.test(h)||h===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:e(document),left:0,top:0,width:e(document).width(),height:e(document).height()||document.body.parentNode.scrollHeight}):(t=e(d),i=[],e(["Top","Right","Left","Bottom"]).each(function(e,n){i[e]=l._num(t.css("padding"+n))}),l.containerOffset=t.offset(),l.containerPosition=t.position(),l.containerSize={height:t.innerHeight()-i[3],width:t.innerWidth()-i[1]},n=l.containerOffset,s=l.containerSize.height,o=l.containerSize.width,r=l._hasScroll(d,"left")?d.scrollWidth:o,a=l._hasScroll(d)?d.scrollHeight:s,l.parentData={element:d,left:n.left,top:n.top,width:r,height:a}))},resize:function(t){var i,n,s,o,r=e(this).resizable("instance"),a=r.options,l=r.containerOffset,c=r.position,u=r._aspectRatio||t.shiftKey,h={top:0,left:0},d=r.containerElement,p=!0;d[0]!==document&&/static/.test(d.css("position"))&&(h=l),c.left<(r._helper?l.left:0)&&(r.size.width=r.size.width+(r._helper?r.position.left-l.left:r.position.left-h.left),u&&(r.size.height=r.size.width/r.aspectRatio,p=!1),r.position.left=a.helper?l.left:0),c.top<(r._helper?l.top:0)&&(r.size.height=r.size.height+(r._helper?r.position.top-l.top:r.position.top),u&&(r.size.width=r.size.height*r.aspectRatio,p=!1),r.position.top=r._helper?l.top:0),s=r.containerElement.get(0)===r.element.parent().get(0),o=/relative|absolute/.test(r.containerElement.css("position")),s&&o?(r.offset.left=r.parentData.left+r.position.left,r.offset.top=r.parentData.top+r.position.top):(r.offset.left=r.element.offset().left,r.offset.top=r.element.offset().top),i=Math.abs(r.sizeDiff.width+(r._helper?r.offset.left-h.left:r.offset.left-l.left)),n=Math.abs(r.sizeDiff.height+(r._helper?r.offset.top-h.top:r.offset.top-l.top)),i+r.size.width>=r.parentData.width&&(r.size.width=r.parentData.width-i,u&&(r.size.height=r.size.width/r.aspectRatio,p=!1)),n+r.size.height>=r.parentData.height&&(r.size.height=r.parentData.height-n,u&&(r.size.width=r.size.height*r.aspectRatio,p=!1)),p||(r.position.left=r.prevPosition.left,r.position.top=r.prevPosition.top,r.size.width=r.prevSize.width,r.size.height=r.prevSize.height)},stop:function(){var t=e(this).resizable("instance"),i=t.options,n=t.containerOffset,s=t.containerPosition,o=t.containerElement,r=e(t.helper),a=r.offset(),l=r.outerWidth()-t.sizeDiff.width,c=r.outerHeight()-t.sizeDiff.height;t._helper&&!i.animate&&/relative/.test(o.css("position"))&&e(this).css({left:a.left-s.left-n.left,width:l,height:c}),t._helper&&!i.animate&&/static/.test(o.css("position"))&&e(this).css({left:a.left-s.left-n.left,width:l,height:c})}}),e.ui.plugin.add("resizable","alsoResize",{start:function(){var t=e(this).resizable("instance"),i=t.options;e(i.alsoResize).each(function(){var t=e(this);t.data("ui-resizable-alsoresize",{width:parseInt(t.width(),10),height:parseInt(t.height(),10),left:parseInt(t.css("left"),10),top:parseInt(t.css("top"),10)})})},resize:function(t,i){var n=e(this).resizable("instance"),s=n.options,o=n.originalSize,r=n.originalPosition,a={height:n.size.height-o.height||0,width:n.size.width-o.width||0,top:n.position.top-r.top||0,left:n.position.left-r.left||0};e(s.alsoResize).each(function(){var t=e(this),n=e(this).data("ui-resizable-alsoresize"),s={},o=t.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];e.each(o,function(e,t){var i=(n[t]||0)+(a[t]||0);i&&i>=0&&(s[t]=i||null)}),t.css(s)})},stop:function(){e(this).removeData("resizable-alsoresize")}}),e.ui.plugin.add("resizable","ghost",{start:function(){var t=e(this).resizable("instance"),i=t.options,n=t.size;t.ghost=t.originalElement.clone(),t.ghost.css({opacity:.25,display:"block",position:"relative",height:n.height,width:n.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),t.ghost.appendTo(t.helper)},resize:function(){var t=e(this).resizable("instance");t.ghost&&t.ghost.css({position:"relative",height:t.size.height,
width:t.size.width})},stop:function(){var t=e(this).resizable("instance");t.ghost&&t.helper&&t.helper.get(0).removeChild(t.ghost.get(0))}}),e.ui.plugin.add("resizable","grid",{resize:function(){var t,i=e(this).resizable("instance"),n=i.options,s=i.size,o=i.originalSize,r=i.originalPosition,a=i.axis,l="number"==typeof n.grid?[n.grid,n.grid]:n.grid,c=l[0]||1,u=l[1]||1,h=Math.round((s.width-o.width)/c)*c,d=Math.round((s.height-o.height)/u)*u,p=o.width+h,f=o.height+d,g=n.maxWidth&&n.maxWidth<p,m=n.maxHeight&&n.maxHeight<f,v=n.minWidth&&n.minWidth>p,y=n.minHeight&&n.minHeight>f;n.grid=l,v&&(p+=c),y&&(f+=u),g&&(p-=c),m&&(f-=u),/^(se|s|e)$/.test(a)?(i.size.width=p,i.size.height=f):/^(ne)$/.test(a)?(i.size.width=p,i.size.height=f,i.position.top=r.top-d):/^(sw)$/.test(a)?(i.size.width=p,i.size.height=f,i.position.left=r.left-h):((0>=f-u||0>=p-c)&&(t=i._getPaddingPlusBorderDimensions(this)),f-u>0?(i.size.height=f,i.position.top=r.top-d):(f=u-t.height,i.size.height=f,i.position.top=r.top+o.height-f),p-c>0?(i.size.width=p,i.position.left=r.left-h):(p=c-t.width,i.size.width=p,i.position.left=r.left+o.width-p))}});e.ui.resizable,e.widget("ui.dialog",{version:"1.11.4",options:{appendTo:"body",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:"Close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(t){var i=e(this).css(t).offset().top;0>i&&e(this).css("top",t.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),this.options.title=this.options.title||this.originalTitle,this._createWrapper(),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&e.fn.draggable&&this._makeDraggable(),this.options.resizable&&e.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var t=this.options.appendTo;return t&&(t.jquery||t.nodeType)?e(t):this.document.find(t||"body").eq(0)},_destroy:function(){var e,t=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(),this.uiDialog.stop(!0,!0).remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),e=t.parent.children().eq(t.index),e.length&&e[0]!==this.element[0]?e.before(this.element):t.parent.append(this.element)},widget:function(){return this.uiDialog},disable:e.noop,enable:e.noop,close:function(t){var i,n=this;if(this._isOpen&&this._trigger("beforeClose",t)!==!1){if(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),!this.opener.filter(":focusable").focus().length)try{i=this.document[0].activeElement,i&&"body"!==i.nodeName.toLowerCase()&&e(i).blur()}catch(s){}this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",t)})}},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(t,i){var n=!1,s=this.uiDialog.siblings(".ui-front:visible").map(function(){return+e(this).css("z-index")}).get(),o=Math.max.apply(null,s);return o>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",o+1),n=!0),n&&!i&&this._trigger("focus",t),n},open:function(){var t=this;return this._isOpen?void(this._moveToTop()&&this._focusTabbable()):(this._isOpen=!0,this.opener=e(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){t._focusTabbable(),t._trigger("focus")}),this._makeFocusTarget(),void this._trigger("open"))},_focusTabbable:function(){var e=this._focusedElement;e||(e=this.element.find("[autofocus]")),e.length||(e=this.element.find(":tabbable")),e.length||(e=this.uiDialogButtonPane.find(":tabbable")),e.length||(e=this.uiDialogTitlebarClose.filter(":tabbable")),e.length||(e=this.uiDialog),e.eq(0).focus()},_keepFocus:function(t){function i(){var t=this.document[0].activeElement,i=this.uiDialog[0]===t||e.contains(this.uiDialog[0],t);i||this._focusTabbable()}t.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=e("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front "+this.options.dialogClass).hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._on(this.uiDialog,{keydown:function(t){if(this.options.closeOnEscape&&!t.isDefaultPrevented()&&t.keyCode&&t.keyCode===e.ui.keyCode.ESCAPE)return t.preventDefault(),void this.close(t);if(t.keyCode===e.ui.keyCode.TAB&&!t.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),n=i.filter(":first"),s=i.filter(":last");t.target!==s[0]&&t.target!==this.uiDialog[0]||t.shiftKey?t.target!==n[0]&&t.target!==this.uiDialog[0]||!t.shiftKey||(this._delay(function(){s.focus()}),t.preventDefault()):(this._delay(function(){n.focus()}),t.preventDefault())}},mousedown:function(e){this._moveToTop(e)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var t;this.uiDialogTitlebar=e("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog),this._on(this.uiDialogTitlebar,{mousedown:function(t){e(t.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.focus()}}),this.uiDialogTitlebarClose=e("<button type='button'></button>").button({label:this.options.closeText,icons:{primary:"ui-icon-closethick"},text:!1}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar),this._on(this.uiDialogTitlebarClose,{click:function(e){e.preventDefault(),this.close(e)}}),t=e("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar),this._title(t),this.uiDialog.attr({"aria-labelledby":t.attr("id")})},_title:function(e){this.options.title||e.html("&#160;"),e.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=e("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),this.uiButtonSet=e("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane),this._createButtons()},_createButtons:function(){var t=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),e.isEmptyObject(i)||e.isArray(i)&&!i.length?void this.uiDialog.removeClass("ui-dialog-buttons"):(e.each(i,function(i,n){var s,o;n=e.isFunction(n)?{click:n,text:i}:n,n=e.extend({type:"button"},n),s=n.click,n.click=function(){s.apply(t.element[0],arguments)},o={icons:n.icons,text:n.showText},delete n.icons,delete n.showText,e("<button></button>",n).button(o).appendTo(t.uiButtonSet)}),this.uiDialog.addClass("ui-dialog-buttons"),void this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function t(e){return{position:e.position,offset:e.offset}}var i=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,s){e(this).addClass("ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",n,t(s))},drag:function(e,n){i._trigger("drag",e,t(n))},stop:function(s,o){var r=o.offset.left-i.document.scrollLeft(),a=o.offset.top-i.document.scrollTop();n.position={my:"left top",at:"left"+(r>=0?"+":"")+r+" top"+(a>=0?"+":"")+a,of:i.window},e(this).removeClass("ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",s,t(o))}})},_makeResizable:function(){function t(e){return{originalPosition:e.originalPosition,originalSize:e.originalSize,position:e.position,size:e.size}}var i=this,n=this.options,s=n.resizable,o=this.uiDialog.css("position"),r="string"==typeof s?s:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:r,start:function(n,s){e(this).addClass("ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",n,t(s))},resize:function(e,n){i._trigger("resize",e,t(n))},stop:function(s,o){var r=i.uiDialog.offset(),a=r.left-i.document.scrollLeft(),l=r.top-i.document.scrollTop();n.height=i.uiDialog.height(),n.width=i.uiDialog.width(),n.position={my:"left top",at:"left"+(a>=0?"+":"")+a+" top"+(l>=0?"+":"")+l,of:i.window},e(this).removeClass("ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",s,t(o))}}).css("position",o)},_trackFocus:function(){this._on(this.widget(),{focusin:function(t){this._makeFocusTarget(),this._focusedElement=e(t.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var t=this._trackingInstances(),i=e.inArray(this,t);-1!==i&&t.splice(i,1)},_trackingInstances:function(){var e=this.document.data("ui-dialog-instances");return e||(e=[],this.document.data("ui-dialog-instances",e)),e},_minHeight:function(){var e=this.options;return"auto"===e.height?e.minHeight:Math.min(e.minHeight,e.height)},_position:function(){var e=this.uiDialog.is(":visible");e||this.uiDialog.show(),this.uiDialog.position(this.options.position),e||this.uiDialog.hide()},_setOptions:function(t){var i=this,n=!1,s={};e.each(t,function(e,t){i._setOption(e,t),e in i.sizeRelatedOptions&&(n=!0),e in i.resizableRelatedOptions&&(s[e]=t)}),n&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(e,t){var i,n,s=this.uiDialog;"dialogClass"===e&&s.removeClass(this.options.dialogClass).addClass(t),"disabled"!==e&&(this._super(e,t),"appendTo"===e&&this.uiDialog.appendTo(this._appendTo()),"buttons"===e&&this._createButtons(),"closeText"===e&&this.uiDialogTitlebarClose.button({label:""+t}),"draggable"===e&&(i=s.is(":data(ui-draggable)"),i&&!t&&s.draggable("destroy"),!i&&t&&this._makeDraggable()),"position"===e&&this._position(),"resizable"===e&&(n=s.is(":data(ui-resizable)"),n&&!t&&s.resizable("destroy"),n&&"string"==typeof t&&s.resizable("option","handles",t),n||t===!1||this._makeResizable()),"title"===e&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var e,t,i,n=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),n.minWidth>n.width&&(n.width=n.minWidth),e=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),t=Math.max(0,n.minHeight-e),i="number"==typeof n.maxHeight?Math.max(0,n.maxHeight-e):"none","auto"===n.height?this.element.css({minHeight:t,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,n.height-e)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var t=e(this);return e("<div>").css({position:"absolute",width:t.outerWidth(),height:t.outerHeight()}).appendTo(t.parent()).offset(t.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(t){return e(t.target).closest(".ui-dialog").length?!0:!!e(t.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var t=!0;this._delay(function(){t=!1}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(e){t||this._allowInteraction(e)||(e.preventDefault(),this._trackingInstances()[0]._focusTabbable())}}),this.overlay=e("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var e=this.document.data("ui-dialog-overlays")-1;e?this.document.data("ui-dialog-overlays",e):this.document.unbind("focusin").removeData("ui-dialog-overlays"),this.overlay.remove(),this.overlay=null}}});e.widget("ui.droppable",{version:"1.11.4",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var t,i=this.options,n=i.accept;this.isover=!1,this.isout=!0,this.accept=e.isFunction(n)?n:function(e){return e.is(n)},this.proportions=function(){return arguments.length?void(t=arguments[0]):t?t:t={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this.element.addClass("ui-droppable")},_addToManager:function(t){e.ui.ddmanager.droppables[t]=e.ui.ddmanager.droppables[t]||[],e.ui.ddmanager.droppables[t].push(this)},_splice:function(e){for(var t=0;t<e.length;t++)e[t]===this&&e.splice(t,1)},_destroy:function(){var t=e.ui.ddmanager.droppables[this.options.scope];this._splice(t),this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(t,i){if("accept"===t)this.accept=e.isFunction(i)?i:function(e){return e.is(i)};else if("scope"===t){var n=e.ui.ddmanager.droppables[this.options.scope];this._splice(n),this._addToManager(i)}this._super(t,i)},_activate:function(t){var i=e.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger("activate",t,this.ui(i))},_deactivate:function(t){var i=e.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger("deactivate",t,this.ui(i))},_over:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",t,this.ui(i)))},_out:function(t){var i=e.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",t,this.ui(i)))},_drop:function(t,i){var n=i||e.ui.ddmanager.current,s=!1;return n&&(n.currentItem||n.element)[0]!==this.element[0]?(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=e(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===n.options.scope&&i.accept.call(i.element[0],n.currentItem||n.element)&&e.ui.intersect(n,e.extend(i,{offset:i.element.offset()}),i.options.tolerance,t)?(s=!0,!1):void 0}),s?!1:this.accept.call(this.element[0],n.currentItem||n.element)?(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",t,this.ui(n)),this.element):!1):!1},ui:function(e){return{draggable:e.currentItem||e.element,helper:e.helper,position:e.position,offset:e.positionAbs}}}),e.ui.intersect=function(){function e(e,t,i){return e>=t&&t+i>e}return function(t,i,n,s){if(!i.offset)return!1;var o=(t.positionAbs||t.position.absolute).left+t.margins.left,r=(t.positionAbs||t.position.absolute).top+t.margins.top,a=o+t.helperProportions.width,l=r+t.helperProportions.height,c=i.offset.left,u=i.offset.top,h=c+i.proportions().width,d=u+i.proportions().height;switch(n){case"fit":return o>=c&&h>=a&&r>=u&&d>=l;case"intersect":return c<o+t.helperProportions.width/2&&a-t.helperProportions.width/2<h&&u<r+t.helperProportions.height/2&&l-t.helperProportions.height/2<d;case"pointer":return e(s.pageY,u,i.proportions().height)&&e(s.pageX,c,i.proportions().width);case"touch":return(r>=u&&d>=r||l>=u&&d>=l||u>r&&l>d)&&(o>=c&&h>=o||a>=c&&h>=a||c>o&&a>h);default:return!1}}}(),e.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(t,i){var n,s,o=e.ui.ddmanager.droppables[t.options.scope]||[],r=i?i.type:null,a=(t.currentItem||t.element).find(":data(ui-droppable)").addBack();e:for(n=0;n<o.length;n++)if(!(o[n].options.disabled||t&&!o[n].accept.call(o[n].element[0],t.currentItem||t.element))){for(s=0;s<a.length;s++)if(a[s]===o[n].element[0]){o[n].proportions().height=0;continue e}o[n].visible="none"!==o[n].element.css("display"),o[n].visible&&("mousedown"===r&&o[n]._activate.call(o[n],i),o[n].offset=o[n].element.offset(),o[n].proportions({width:o[n].element[0].offsetWidth,height:o[n].element[0].offsetHeight}))}},drop:function(t,i){var n=!1;return e.each((e.ui.ddmanager.droppables[t.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&e.ui.intersect(t,this,this.options.tolerance,i)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],t.currentItem||t.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),n},dragStart:function(t,i){t.element.parentsUntil("body").bind("scroll.droppable",function(){t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)})},drag:function(t,i){t.options.refreshPositions&&e.ui.ddmanager.prepareOffsets(t,i),e.each(e.ui.ddmanager.droppables[t.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,s,o,r=e.ui.intersect(t,this,this.options.tolerance,i),a=!r&&this.isover?"isout":r&&!this.isover?"isover":null;a&&(this.options.greedy&&(s=this.options.scope,o=this.element.parents(":data(ui-droppable)").filter(function(){return e(this).droppable("instance").options.scope===s}),o.length&&(n=e(o[0]).droppable("instance"),n.greedyChild="isover"===a)),n&&"isover"===a&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[a]=!0,this["isout"===a?"isover":"isout"]=!1,this["isover"===a?"_over":"_out"].call(this,i),n&&"isout"===a&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}})},dragStop:function(t,i){t.element.parentsUntil("body").unbind("scroll.droppable"),t.options.refreshPositions||e.ui.ddmanager.prepareOffsets(t,i)}};var y=(e.ui.droppable,"ui-effects-"),w=e;e.effects={effect:{}},function(e,t){function i(e,t,i){var n=h[t.type]||{};return null==e?i||!t.def?null:t.def:(e=n.floor?~~e:parseFloat(e),isNaN(e)?t.def:n.mod?(e+n.mod)%n.mod:0>e?0:n.max<e?n.max:e)}function n(t){var i=c(),n=i._rgba=[];return t=t.toLowerCase(),f(l,function(e,s){var o,r=s.re.exec(t),a=r&&s.parse(r),l=s.space||"rgba";return a?(o=i[l](a),i[u[l].cache]=o[u[l].cache],n=i._rgba=o._rgba,!1):void 0}),n.length?("0,0,0,0"===n.join()&&e.extend(n,o.transparent),i):o[t]}function s(e,t,i){return i=(i+1)%1,1>6*i?e+(t-e)*i*6:1>2*i?t:2>3*i?e+(t-e)*(2/3-i)*6:e}var o,r="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",a=/^([\-+])=\s*(\d+\.?\d*)/,l=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(e){return[e[1],e[2],e[3],e[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(e){return[2.55*e[1],2.55*e[2],2.55*e[3],e[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(e){return[e[1],e[2]/100,e[3]/100,e[4]]}}],c=e.Color=function(t,i,n,s){return new e.Color.fn.parse(t,i,n,s)},u={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},h={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=c.support={},p=e("<p>")[0],f=e.each;p.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=p.style.backgroundColor.indexOf("rgba")>-1,f(u,function(e,t){t.cache="_"+e,t.props.alpha={idx:3,type:"percent",def:1}}),c.fn=e.extend(c.prototype,{parse:function(s,r,a,l){if(s===t)return this._rgba=[null,null,null,null],this;(s.jquery||s.nodeType)&&(s=e(s).css(r),r=t);var h=this,d=e.type(s),p=this._rgba=[];return r!==t&&(s=[s,r,a,l],d="array"),"string"===d?this.parse(n(s)||o._default):"array"===d?(f(u.rgba.props,function(e,t){p[t.idx]=i(s[t.idx],t)}),this):"object"===d?(s instanceof c?f(u,function(e,t){s[t.cache]&&(h[t.cache]=s[t.cache].slice())}):f(u,function(t,n){var o=n.cache;f(n.props,function(e,t){if(!h[o]&&n.to){if("alpha"===e||null==s[e])return;h[o]=n.to(h._rgba)}h[o][t.idx]=i(s[e],t,!0)}),h[o]&&e.inArray(null,h[o].slice(0,3))<0&&(h[o][3]=1,n.from&&(h._rgba=n.from(h[o])))}),this):void 0},is:function(e){var t=c(e),i=!0,n=this;return f(u,function(e,s){var o,r=t[s.cache];return r&&(o=n[s.cache]||s.to&&s.to(n._rgba)||[],f(s.props,function(e,t){return null!=r[t.idx]?i=r[t.idx]===o[t.idx]:void 0})),i}),i},_space:function(){var e=[],t=this;return f(u,function(i,n){t[n.cache]&&e.push(i)}),e.pop()},transition:function(e,t){var n=c(e),s=n._space(),o=u[s],r=0===this.alpha()?c("transparent"):this,a=r[o.cache]||o.to(r._rgba),l=a.slice();return n=n[o.cache],f(o.props,function(e,s){var o=s.idx,r=a[o],c=n[o],u=h[s.type]||{};null!==c&&(null===r?l[o]=c:(u.mod&&(c-r>u.mod/2?r+=u.mod:r-c>u.mod/2&&(r-=u.mod)),l[o]=i((c-r)*t+r,s)))}),this[s](l)},blend:function(t){if(1===this._rgba[3])return this;var i=this._rgba.slice(),n=i.pop(),s=c(t)._rgba;return c(e.map(i,function(e,t){return(1-n)*s[t]+n*e}))},toRgbaString:function(){var t="rgba(",i=e.map(this._rgba,function(e,t){return null==e?t>2?1:0:e});return 1===i[3]&&(i.pop(),t="rgb("),t+i.join()+")"},toHslaString:function(){var t="hsla(",i=e.map(this.hsla(),function(e,t){return null==e&&(e=t>2?1:0),t&&3>t&&(e=Math.round(100*e)+"%"),e});return 1===i[3]&&(i.pop(),t="hsl("),t+i.join()+")"},toHexString:function(t){var i=this._rgba.slice(),n=i.pop();return t&&i.push(~~(255*n)),"#"+e.map(i,function(e){return e=(e||0).toString(16),1===e.length?"0"+e:e}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),c.fn.parse.prototype=c.fn,u.hsla.to=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t,i,n=e[0]/255,s=e[1]/255,o=e[2]/255,r=e[3],a=Math.max(n,s,o),l=Math.min(n,s,o),c=a-l,u=a+l,h=.5*u;return t=l===a?0:n===a?60*(s-o)/c+360:s===a?60*(o-n)/c+120:60*(n-s)/c+240,i=0===c?0:.5>=h?c/u:c/(2-u),[Math.round(t)%360,i,h,null==r?1:r]},u.hsla.from=function(e){if(null==e[0]||null==e[1]||null==e[2])return[null,null,null,e[3]];var t=e[0]/360,i=e[1],n=e[2],o=e[3],r=.5>=n?n*(1+i):n+i-n*i,a=2*n-r;return[Math.round(255*s(a,r,t+1/3)),Math.round(255*s(a,r,t)),Math.round(255*s(a,r,t-1/3)),o]},f(u,function(n,s){var o=s.props,r=s.cache,l=s.to,u=s.from;c.fn[n]=function(n){if(l&&!this[r]&&(this[r]=l(this._rgba)),n===t)return this[r].slice();var s,a=e.type(n),h="array"===a||"object"===a?n:arguments,d=this[r].slice();return f(o,function(e,t){var n=h["object"===a?e:t.idx];null==n&&(n=d[t.idx]),d[t.idx]=i(n,t)}),u?(s=c(u(d)),s[r]=d,s):c(d)},f(o,function(t,i){c.fn[t]||(c.fn[t]=function(s){var o,r=e.type(s),l="alpha"===t?this._hsla?"hsla":"rgba":n,c=this[l](),u=c[i.idx];return"undefined"===r?u:("function"===r&&(s=s.call(this,u),r=e.type(s)),null==s&&i.empty?this:("string"===r&&(o=a.exec(s),o&&(s=u+parseFloat(o[2])*("+"===o[1]?1:-1))),c[i.idx]=s,this[l](c)))})})}),c.hook=function(t){var i=t.split(" ");f(i,function(t,i){e.cssHooks[i]={set:function(t,s){var o,r,a="";if("transparent"!==s&&("string"!==e.type(s)||(o=n(s)))){if(s=c(o||s),!d.rgba&&1!==s._rgba[3]){for(r="backgroundColor"===i?t.parentNode:t;(""===a||"transparent"===a)&&r&&r.style;)try{a=e.css(r,"backgroundColor"),r=r.parentNode}catch(l){}s=s.blend(a&&"transparent"!==a?a:"_default")}s=s.toRgbaString()}try{t.style[i]=s}catch(l){}}},e.fx.step[i]=function(t){t.colorInit||(t.start=c(t.elem,i),t.end=c(t.end),t.colorInit=!0),e.cssHooks[i].set(t.elem,t.start.transition(t.end,t.pos))}})},c.hook(r),e.cssHooks.borderColor={expand:function(e){var t={};return f(["Top","Right","Bottom","Left"],function(i,n){t["border"+n+"Color"]=e}),t}},o=e.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(w),function(){function t(t){var i,n,s=t.ownerDocument.defaultView?t.ownerDocument.defaultView.getComputedStyle(t,null):t.currentStyle,o={};if(s&&s.length&&s[0]&&s[s[0]])for(n=s.length;n--;)i=s[n],"string"==typeof s[i]&&(o[e.camelCase(i)]=s[i]);else for(i in s)"string"==typeof s[i]&&(o[i]=s[i]);return o}function i(t,i){var n,o,r={};for(n in i)o=i[n],t[n]!==o&&(s[n]||!e.fx.step[n]&&isNaN(parseFloat(o))||(r[n]=o));return r}var n=["add","remove","toggle"],s={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};e.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(t,i){e.fx.step[i]=function(e){("none"!==e.end&&!e.setAttr||1===e.pos&&!e.setAttr)&&(w.style(e.elem,i,e.end),e.setAttr=!0)}}),e.fn.addBack||(e.fn.addBack=function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}),e.effects.animateClass=function(s,o,r,a){var l=e.speed(o,r,a);return this.queue(function(){var o,r=e(this),a=r.attr("class")||"",c=l.children?r.find("*").addBack():r;c=c.map(function(){var i=e(this);return{el:i,start:t(this)}}),o=function(){e.each(n,function(e,t){s[t]&&r[t+"Class"](s[t])})},o(),c=c.map(function(){return this.end=t(this.el[0]),this.diff=i(this.start,this.end),this}),r.attr("class",a),c=c.map(function(){var t=this,i=e.Deferred(),n=e.extend({},l,{queue:!1,complete:function(){i.resolve(t)}});return this.el.animate(this.diff,n),i.promise()}),e.when.apply(e,c.get()).done(function(){o(),e.each(arguments,function(){var t=this.el;e.each(this.diff,function(e){t.css(e,"")})}),l.complete.call(r[0])})})},e.fn.extend({addClass:function(t){return function(i,n,s,o){return n?e.effects.animateClass.call(this,{add:i},n,s,o):t.apply(this,arguments)}}(e.fn.addClass),removeClass:function(t){return function(i,n,s,o){return arguments.length>1?e.effects.animateClass.call(this,{remove:i},n,s,o):t.apply(this,arguments)}}(e.fn.removeClass),toggleClass:function(t){return function(i,n,s,o,r){return"boolean"==typeof n||void 0===n?s?e.effects.animateClass.call(this,n?{add:i}:{remove:i},s,o,r):t.apply(this,arguments):e.effects.animateClass.call(this,{toggle:i},n,s,o)}}(e.fn.toggleClass),switchClass:function(t,i,n,s,o){return e.effects.animateClass.call(this,{add:i,remove:t},n,s,o)}})}(),function(){function t(t,i,n,s){return e.isPlainObject(t)&&(i=t,t=t.effect),t={effect:t},null==i&&(i={}),e.isFunction(i)&&(s=i,n=null,i={}),("number"==typeof i||e.fx.speeds[i])&&(s=n,n=i,i={}),e.isFunction(n)&&(s=n,n=null),i&&e.extend(t,i),n=n||i.duration,t.duration=e.fx.off?0:"number"==typeof n?n:n in e.fx.speeds?e.fx.speeds[n]:e.fx.speeds._default,t.complete=s||i.complete,t}function i(t){return!t||"number"==typeof t||e.fx.speeds[t]?!0:"string"!=typeof t||e.effects.effect[t]?e.isFunction(t)?!0:"object"==typeof t&&!t.effect:!0}e.extend(e.effects,{version:"1.11.4",save:function(e,t){for(var i=0;i<t.length;i++)null!==t[i]&&e.data(y+t[i],e[0].style[t[i]])},restore:function(e,t){var i,n;for(n=0;n<t.length;n++)null!==t[n]&&(i=e.data(y+t[n]),void 0===i&&(i=""),e.css(t[n],i))},setMode:function(e,t){return"toggle"===t&&(t=e.is(":hidden")?"show":"hide"),t},getBaseline:function(e,t){var i,n;switch(e[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=e[0]/t.height}switch(e[1]){case"left":n=0;break;case"center":n=.5;break;case"right":n=1;break;default:n=e[1]/t.width}return{x:n,y:i}},createWrapper:function(t){if(t.parent().is(".ui-effects-wrapper"))return t.parent();var i={width:t.outerWidth(!0),height:t.outerHeight(!0),"float":t.css("float")},n=e("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),s={width:t.width(),height:t.height()},o=document.activeElement;try{o.id}catch(r){o=document.body}return t.wrap(n),(t[0]===o||e.contains(t[0],o))&&e(o).focus(),n=t.parent(),"static"===t.css("position")?(n.css({position:"relative"}),t.css({position:"relative"})):(e.extend(i,{position:t.css("position"),zIndex:t.css("z-index")}),e.each(["top","left","bottom","right"],function(e,n){i[n]=t.css(n),isNaN(parseInt(i[n],10))&&(i[n]="auto")}),t.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),t.css(s),n.css(i).show()},removeWrapper:function(t){var i=document.activeElement;return t.parent().is(".ui-effects-wrapper")&&(t.parent().replaceWith(t),(t[0]===i||e.contains(t[0],i))&&e(i).focus()),t},setTransition:function(t,i,n,s){return s=s||{},e.each(i,function(e,i){var o=t.cssUnit(i);o[0]>0&&(s[i]=o[0]*n+o[1])}),s}}),e.fn.extend({effect:function(){function i(t){function i(){e.isFunction(o)&&o.call(s[0]),e.isFunction(t)&&t()}var s=e(this),o=n.complete,a=n.mode;(s.is(":hidden")?"hide"===a:"show"===a)?(s[a](),i()):r.call(s[0],n,i)}var n=t.apply(this,arguments),s=n.mode,o=n.queue,r=e.effects.effect[n.effect];return e.fx.off||!r?s?this[s](n.duration,n.complete):this.each(function(){n.complete&&n.complete.call(this)}):o===!1?this.each(i):this.queue(o||"fx",i)},show:function(e){return function(n){if(i(n))return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="show",this.effect.call(this,s)}}(e.fn.show),hide:function(e){return function(n){if(i(n))return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="hide",this.effect.call(this,s)}}(e.fn.hide),toggle:function(e){return function(n){if(i(n)||"boolean"==typeof n)return e.apply(this,arguments);var s=t.apply(this,arguments);return s.mode="toggle",this.effect.call(this,s)}}(e.fn.toggle),cssUnit:function(t){var i=this.css(t),n=[];return e.each(["em","px","%","pt"],function(e,t){i.indexOf(t)>0&&(n=[parseFloat(i),t])}),n}})}(),function(){var t={};e.each(["Quad","Cubic","Quart","Quint","Expo"],function(e,i){t[i]=function(t){return Math.pow(t,e+2)}}),e.extend(t,{Sine:function(e){return 1-Math.cos(e*Math.PI/2)},Circ:function(e){return 1-Math.sqrt(1-e*e)},Elastic:function(e){return 0===e||1===e?e:-Math.pow(2,8*(e-1))*Math.sin((80*(e-1)-7.5)*Math.PI/15)},Back:function(e){return e*e*(3*e-2)},Bounce:function(e){for(var t,i=4;e<((t=Math.pow(2,--i))-1)/11;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*t-2)/22-e,2)}}),e.each(t,function(t,i){e.easing["easeIn"+t]=i,e.easing["easeOut"+t]=function(e){return 1-i(1-e)},e.easing["easeInOut"+t]=function(e){return.5>e?i(2*e)/2:1-i(-2*e+2)/2}})}();e.effects,e.effects.effect.blind=function(t,i){var n,s,o,r=e(this),a=/up|down|vertical/,l=/up|left|vertical|horizontal/,c=["position","top","bottom","left","right","height","width"],u=e.effects.setMode(r,t.mode||"hide"),h=t.direction||"up",d=a.test(h),p=d?"height":"width",f=d?"top":"left",g=l.test(h),m={},v="show"===u;r.parent().is(".ui-effects-wrapper")?e.effects.save(r.parent(),c):e.effects.save(r,c),
r.show(),n=e.effects.createWrapper(r).css({overflow:"hidden"}),s=n[p](),o=parseFloat(n.css(f))||0,m[p]=v?s:0,g||(r.css(d?"bottom":"right",0).css(d?"top":"left","auto").css({position:"absolute"}),m[f]=v?o:s+o),v&&(n.css(p,0),g||n.css(f,o+s)),n.animate(m,{duration:t.duration,easing:t.easing,queue:!1,complete:function(){"hide"===u&&r.hide(),e.effects.restore(r,c),e.effects.removeWrapper(r),i()}})},e.effects.effect.bounce=function(t,i){var n,s,o,r=e(this),a=["position","top","bottom","left","right","height","width"],l=e.effects.setMode(r,t.mode||"effect"),c="hide"===l,u="show"===l,h=t.direction||"up",d=t.distance,p=t.times||5,f=2*p+(u||c?1:0),g=t.duration/f,m=t.easing,v="up"===h||"down"===h?"top":"left",y="up"===h||"left"===h,w=r.queue(),b=w.length;for((u||c)&&a.push("opacity"),e.effects.save(r,a),r.show(),e.effects.createWrapper(r),d||(d=r["top"===v?"outerHeight":"outerWidth"]()/3),u&&(o={opacity:1},o[v]=0,r.css("opacity",0).css(v,y?2*-d:2*d).animate(o,g,m)),c&&(d/=Math.pow(2,p-1)),o={},o[v]=0,n=0;p>n;n++)s={},s[v]=(y?"-=":"+=")+d,r.animate(s,g,m).animate(o,g,m),d=c?2*d:d/2;c&&(s={opacity:0},s[v]=(y?"-=":"+=")+d,r.animate(s,g,m)),r.queue(function(){c&&r.hide(),e.effects.restore(r,a),e.effects.removeWrapper(r),i()}),b>1&&w.splice.apply(w,[1,0].concat(w.splice(b,f+1))),r.dequeue()},e.effects.effect.clip=function(t,i){var n,s,o,r=e(this),a=["position","top","bottom","left","right","height","width"],l=e.effects.setMode(r,t.mode||"hide"),c="show"===l,u=t.direction||"vertical",h="vertical"===u,d=h?"height":"width",p=h?"top":"left",f={};e.effects.save(r,a),r.show(),n=e.effects.createWrapper(r).css({overflow:"hidden"}),s="IMG"===r[0].tagName?n:r,o=s[d](),c&&(s.css(d,0),s.css(p,o/2)),f[d]=c?o:0,f[p]=c?0:o/2,s.animate(f,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){c||r.hide(),e.effects.restore(r,a),e.effects.removeWrapper(r),i()}})},e.effects.effect.drop=function(t,i){var n,s=e(this),o=["position","top","bottom","left","right","opacity","height","width"],r=e.effects.setMode(s,t.mode||"hide"),a="show"===r,l=t.direction||"left",c="up"===l||"down"===l?"top":"left",u="up"===l||"left"===l?"pos":"neg",h={opacity:a?1:0};e.effects.save(s,o),s.show(),e.effects.createWrapper(s),n=t.distance||s["top"===c?"outerHeight":"outerWidth"](!0)/2,a&&s.css("opacity",0).css(c,"pos"===u?-n:n),h[c]=(a?"pos"===u?"+=":"-=":"pos"===u?"-=":"+=")+n,s.animate(h,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){"hide"===r&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}})},e.effects.effect.explode=function(t,i){function n(){w.push(this),w.length===h*d&&s()}function s(){p.css({visibility:"visible"}),e(w).remove(),g||p.hide(),i()}var o,r,a,l,c,u,h=t.pieces?Math.round(Math.sqrt(t.pieces)):3,d=h,p=e(this),f=e.effects.setMode(p,t.mode||"hide"),g="show"===f,m=p.show().css("visibility","hidden").offset(),v=Math.ceil(p.outerWidth()/d),y=Math.ceil(p.outerHeight()/h),w=[];for(o=0;h>o;o++)for(l=m.top+o*y,u=o-(h-1)/2,r=0;d>r;r++)a=m.left+r*v,c=r-(d-1)/2,p.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-r*v,top:-o*y}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:v,height:y,left:a+(g?c*v:0),top:l+(g?u*y:0),opacity:g?0:1}).animate({left:a+(g?0:c*v),top:l+(g?0:u*y),opacity:g?1:0},t.duration||500,t.easing,n)},e.effects.effect.fade=function(t,i){var n=e(this),s=e.effects.setMode(n,t.mode||"toggle");n.animate({opacity:s},{queue:!1,duration:t.duration,easing:t.easing,complete:i})},e.effects.effect.fold=function(t,i){var n,s,o=e(this),r=["position","top","bottom","left","right","height","width"],a=e.effects.setMode(o,t.mode||"hide"),l="show"===a,c="hide"===a,u=t.size||15,h=/([0-9]+)%/.exec(u),d=!!t.horizFirst,p=l!==d,f=p?["width","height"]:["height","width"],g=t.duration/2,m={},v={};e.effects.save(o,r),o.show(),n=e.effects.createWrapper(o).css({overflow:"hidden"}),s=p?[n.width(),n.height()]:[n.height(),n.width()],h&&(u=parseInt(h[1],10)/100*s[c?0:1]),l&&n.css(d?{height:0,width:u}:{height:u,width:0}),m[f[0]]=l?s[0]:u,v[f[1]]=l?s[1]:0,n.animate(m,g,t.easing).animate(v,g,t.easing,function(){c&&o.hide(),e.effects.restore(o,r),e.effects.removeWrapper(o),i()})},e.effects.effect.highlight=function(t,i){var n=e(this),s=["backgroundImage","backgroundColor","opacity"],o=e.effects.setMode(n,t.mode||"show"),r={backgroundColor:n.css("backgroundColor")};"hide"===o&&(r.opacity=0),e.effects.save(n,s),n.show().css({backgroundImage:"none",backgroundColor:t.color||"#ffff99"}).animate(r,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){"hide"===o&&n.hide(),e.effects.restore(n,s),i()}})},e.effects.effect.size=function(t,i){var n,s,o,r=e(this),a=["position","top","bottom","left","right","width","height","overflow","opacity"],l=["position","top","bottom","left","right","overflow","opacity"],c=["width","height","overflow"],u=["fontSize"],h=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],d=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],p=e.effects.setMode(r,t.mode||"effect"),f=t.restore||"effect"!==p,g=t.scale||"both",m=t.origin||["middle","center"],v=r.css("position"),y=f?a:l,w={height:0,width:0,outerHeight:0,outerWidth:0};"show"===p&&r.show(),n={height:r.height(),width:r.width(),outerHeight:r.outerHeight(),outerWidth:r.outerWidth()},"toggle"===t.mode&&"show"===p?(r.from=t.to||w,r.to=t.from||n):(r.from=t.from||("show"===p?w:n),r.to=t.to||("hide"===p?w:n)),o={from:{y:r.from.height/n.height,x:r.from.width/n.width},to:{y:r.to.height/n.height,x:r.to.width/n.width}},"box"!==g&&"both"!==g||(o.from.y!==o.to.y&&(y=y.concat(h),r.from=e.effects.setTransition(r,h,o.from.y,r.from),r.to=e.effects.setTransition(r,h,o.to.y,r.to)),o.from.x!==o.to.x&&(y=y.concat(d),r.from=e.effects.setTransition(r,d,o.from.x,r.from),r.to=e.effects.setTransition(r,d,o.to.x,r.to))),"content"!==g&&"both"!==g||o.from.y!==o.to.y&&(y=y.concat(u).concat(c),r.from=e.effects.setTransition(r,u,o.from.y,r.from),r.to=e.effects.setTransition(r,u,o.to.y,r.to)),e.effects.save(r,y),r.show(),e.effects.createWrapper(r),r.css("overflow","hidden").css(r.from),m&&(s=e.effects.getBaseline(m,n),r.from.top=(n.outerHeight-r.outerHeight())*s.y,r.from.left=(n.outerWidth-r.outerWidth())*s.x,r.to.top=(n.outerHeight-r.to.outerHeight)*s.y,r.to.left=(n.outerWidth-r.to.outerWidth)*s.x),r.css(r.from),"content"!==g&&"both"!==g||(h=h.concat(["marginTop","marginBottom"]).concat(u),d=d.concat(["marginLeft","marginRight"]),c=a.concat(h).concat(d),r.find("*[width]").each(function(){var i=e(this),n={height:i.height(),width:i.width(),outerHeight:i.outerHeight(),outerWidth:i.outerWidth()};f&&e.effects.save(i,c),i.from={height:n.height*o.from.y,width:n.width*o.from.x,outerHeight:n.outerHeight*o.from.y,outerWidth:n.outerWidth*o.from.x},i.to={height:n.height*o.to.y,width:n.width*o.to.x,outerHeight:n.height*o.to.y,outerWidth:n.width*o.to.x},o.from.y!==o.to.y&&(i.from=e.effects.setTransition(i,h,o.from.y,i.from),i.to=e.effects.setTransition(i,h,o.to.y,i.to)),o.from.x!==o.to.x&&(i.from=e.effects.setTransition(i,d,o.from.x,i.from),i.to=e.effects.setTransition(i,d,o.to.x,i.to)),i.css(i.from),i.animate(i.to,t.duration,t.easing,function(){f&&e.effects.restore(i,c)})})),r.animate(r.to,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){0===r.to.opacity&&r.css("opacity",r.from.opacity),"hide"===p&&r.hide(),e.effects.restore(r,y),f||("static"===v?r.css({position:"relative",top:r.to.top,left:r.to.left}):e.each(["top","left"],function(e,t){r.css(t,function(t,i){var n=parseInt(i,10),s=e?r.to.left:r.to.top;return"auto"===i?s+"px":n+s+"px"})})),e.effects.removeWrapper(r),i()}})},e.effects.effect.scale=function(t,i){var n=e(this),s=e.extend(!0,{},t),o=e.effects.setMode(n,t.mode||"effect"),r=parseInt(t.percent,10)||(0===parseInt(t.percent,10)?0:"hide"===o?0:100),a=t.direction||"both",l=t.origin,c={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()},u={y:"horizontal"!==a?r/100:1,x:"vertical"!==a?r/100:1};s.effect="size",s.queue=!1,s.complete=i,"effect"!==o&&(s.origin=l||["middle","center"],s.restore=!0),s.from=t.from||("show"===o?{height:0,width:0,outerHeight:0,outerWidth:0}:c),s.to={height:c.height*u.y,width:c.width*u.x,outerHeight:c.outerHeight*u.y,outerWidth:c.outerWidth*u.x},s.fade&&("show"===o&&(s.from.opacity=0,s.to.opacity=1),"hide"===o&&(s.from.opacity=1,s.to.opacity=0)),n.effect(s)},e.effects.effect.puff=function(t,i){var n=e(this),s=e.effects.setMode(n,t.mode||"hide"),o="hide"===s,r=parseInt(t.percent,10)||150,a=r/100,l={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()};e.extend(t,{effect:"scale",queue:!1,fade:!0,mode:s,complete:i,percent:o?r:100,from:o?l:{height:l.height*a,width:l.width*a,outerHeight:l.outerHeight*a,outerWidth:l.outerWidth*a}}),n.effect(t)},e.effects.effect.pulsate=function(t,i){var n,s=e(this),o=e.effects.setMode(s,t.mode||"show"),r="show"===o,a="hide"===o,l=r||"hide"===o,c=2*(t.times||5)+(l?1:0),u=t.duration/c,h=0,d=s.queue(),p=d.length;for(!r&&s.is(":visible")||(s.css("opacity",0).show(),h=1),n=1;c>n;n++)s.animate({opacity:h},u,t.easing),h=1-h;s.animate({opacity:h},u,t.easing),s.queue(function(){a&&s.hide(),i()}),p>1&&d.splice.apply(d,[1,0].concat(d.splice(p,c+1))),s.dequeue()},e.effects.effect.shake=function(t,i){var n,s=e(this),o=["position","top","bottom","left","right","height","width"],r=e.effects.setMode(s,t.mode||"effect"),a=t.direction||"left",l=t.distance||20,c=t.times||3,u=2*c+1,h=Math.round(t.duration/u),d="up"===a||"down"===a?"top":"left",p="up"===a||"left"===a,f={},g={},m={},v=s.queue(),y=v.length;for(e.effects.save(s,o),s.show(),e.effects.createWrapper(s),f[d]=(p?"-=":"+=")+l,g[d]=(p?"+=":"-=")+2*l,m[d]=(p?"-=":"+=")+2*l,s.animate(f,h,t.easing),n=1;c>n;n++)s.animate(g,h,t.easing).animate(m,h,t.easing);s.animate(g,h,t.easing).animate(f,h/2,t.easing).queue(function(){"hide"===r&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}),y>1&&v.splice.apply(v,[1,0].concat(v.splice(y,u+1))),s.dequeue()},e.effects.effect.slide=function(t,i){var n,s=e(this),o=["position","top","bottom","left","right","width","height"],r=e.effects.setMode(s,t.mode||"show"),a="show"===r,l=t.direction||"left",c="up"===l||"down"===l?"top":"left",u="up"===l||"left"===l,h={};e.effects.save(s,o),s.show(),n=t.distance||s["top"===c?"outerHeight":"outerWidth"](!0),e.effects.createWrapper(s).css({overflow:"hidden"}),a&&s.css(c,u?isNaN(n)?"-"+n:-n:n),h[c]=(a?u?"+=":"-=":u?"-=":"+=")+n,s.animate(h,{queue:!1,duration:t.duration,easing:t.easing,complete:function(){"hide"===r&&s.hide(),e.effects.restore(s,o),e.effects.removeWrapper(s),i()}})},e.effects.effect.transfer=function(t,i){var n=e(this),s=e(t.to),o="fixed"===s.css("position"),r=e("body"),a=o?r.scrollTop():0,l=o?r.scrollLeft():0,c=s.offset(),u={top:c.top-a,left:c.left-l,height:s.innerHeight(),width:s.innerWidth()},h=n.offset(),d=e("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(t.className).css({top:h.top-a,left:h.left-l,height:n.innerHeight(),width:n.innerWidth(),position:o?"fixed":"absolute"}).animate(u,t.duration,t.easing,function(){d.remove(),i()})},e.widget("ui.progressbar",{version:"1.11.4",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min}),this.valueDiv=e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove()},value:function(e){return void 0===e?this.options.value:(this.options.value=this._constrainedValue(e),void this._refreshValue())},_constrainedValue:function(e){return void 0===e&&(e=this.options.value),this.indeterminate=e===!1,"number"!=typeof e&&(e=0),this.indeterminate?!1:Math.min(this.options.max,Math.max(this.min,e))},_setOptions:function(e){var t=e.value;delete e.value,this._super(e),this.options.value=this._constrainedValue(t),this._refreshValue()},_setOption:function(e,t){"max"===e&&(t=Math.max(this.min,t)),"disabled"===e&&this.element.toggleClass("ui-state-disabled",!!t).attr("aria-disabled",t),this._super(e,t)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var t=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||t>this.min).toggleClass("ui-corner-right",t===this.options.max).width(i.toFixed(0)+"%"),this.element.toggleClass("ui-progressbar-indeterminate",this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=e("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":t}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==t&&(this.oldValue=t,this._trigger("change")),t===this.options.max&&this._trigger("complete")}}),e.widget("ui.selectable",e.ui.mouse,{version:"1.11.4",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var t,i=this;this.element.addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){t=e(i.options.filter,i.element[0]),t.addClass("ui-selectee"),t.each(function(){var t=e(this),i=t.offset();e.data(this,"selectable-item",{element:this,$element:t,left:i.left,top:i.top,right:i.left+t.outerWidth(),bottom:i.top+t.outerHeight(),startselected:!1,selected:t.hasClass("ui-selected"),selecting:t.hasClass("ui-selecting"),unselecting:t.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=t.addClass("ui-selectee"),this._mouseInit(),this.helper=e("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(t){var i=this,n=this.options;this.opos=[t.pageX,t.pageY],this.options.disabled||(this.selectees=e(n.filter,this.element[0]),this._trigger("start",t),e(n.appendTo).append(this.helper),this.helper.css({left:t.pageX,top:t.pageY,width:0,height:0}),n.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var n=e.data(this,"selectable-item");n.startselected=!0,t.metaKey||t.ctrlKey||(n.$element.removeClass("ui-selected"),n.selected=!1,n.$element.addClass("ui-unselecting"),n.unselecting=!0,i._trigger("unselecting",t,{unselecting:n.element}))}),e(t.target).parents().addBack().each(function(){var n,s=e.data(this,"selectable-item");return s?(n=!t.metaKey&&!t.ctrlKey||!s.$element.hasClass("ui-selected"),s.$element.removeClass(n?"ui-unselecting":"ui-selected").addClass(n?"ui-selecting":"ui-unselecting"),s.unselecting=!n,s.selecting=n,s.selected=n,n?i._trigger("selecting",t,{selecting:s.element}):i._trigger("unselecting",t,{unselecting:s.element}),!1):void 0}))},_mouseDrag:function(t){if(this.dragged=!0,!this.options.disabled){var i,n=this,s=this.options,o=this.opos[0],r=this.opos[1],a=t.pageX,l=t.pageY;return o>a&&(i=a,a=o,o=i),r>l&&(i=l,l=r,r=i),this.helper.css({left:o,top:r,width:a-o,height:l-r}),this.selectees.each(function(){var i=e.data(this,"selectable-item"),c=!1;i&&i.element!==n.element[0]&&("touch"===s.tolerance?c=!(i.left>a||i.right<o||i.top>l||i.bottom<r):"fit"===s.tolerance&&(c=i.left>o&&i.right<a&&i.top>r&&i.bottom<l),c?(i.selected&&(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&&(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,n._trigger("selecting",t,{selecting:i.element}))):(i.selecting&&((t.metaKey||t.ctrlKey)&&i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&&(i.$element.addClass("ui-unselecting"),i.unselecting=!0),n._trigger("unselecting",t,{unselecting:i.element}))),i.selected&&(t.metaKey||t.ctrlKey||i.startselected||(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,n._trigger("unselecting",t,{unselecting:i.element})))))}),!1}},_mouseStop:function(t){var i=this;return this.dragged=!1,e(".ui-unselecting",this.element[0]).each(function(){var n=e.data(this,"selectable-item");n.$element.removeClass("ui-unselecting"),n.unselecting=!1,n.startselected=!1,i._trigger("unselected",t,{unselected:n.element})}),e(".ui-selecting",this.element[0]).each(function(){var n=e.data(this,"selectable-item");n.$element.removeClass("ui-selecting").addClass("ui-selected"),n.selecting=!1,n.selected=!0,n.startselected=!0,i._trigger("selected",t,{selected:n.element})}),this._trigger("stop",t),this.helper.remove(),!1}}),e.widget("ui.selectmenu",{version:"1.11.4",defaultElement:"<select>",options:{appendTo:null,disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:null,change:null,close:null,focus:null,open:null,select:null},_create:function(){var e=this.element.uniqueId().attr("id");this.ids={element:e,button:e+"-button",menu:e+"-menu"},this._drawButton(),this._drawMenu(),this.options.disabled&&this.disable()},_drawButton:function(){var t=this;this.label=e("label[for='"+this.ids.element+"']").attr("for",this.ids.button),this._on(this.label,{click:function(e){this.button.focus(),e.preventDefault()}}),this.element.hide(),this.button=e("<span>",{"class":"ui-selectmenu-button ui-widget ui-state-default ui-corner-all",tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true"}).insertAfter(this.element),e("<span>",{"class":"ui-icon "+this.options.icons.button}).prependTo(this.button),this.buttonText=e("<span>",{"class":"ui-selectmenu-text"}).appendTo(this.button),this._setText(this.buttonText,this.element.find("option:selected").text()),this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){t.menuItems||t._refreshMenu()}),this._hoverable(this.button),this._focusable(this.button)},_drawMenu:function(){var t=this;this.menu=e("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=e("<div>",{"class":"ui-selectmenu-menu ui-front"}).append(this.menu).appendTo(this._appendTo()),this.menuInstance=this.menu.menu({role:"listbox",select:function(e,i){e.preventDefault(),t._setSelection(),t._select(i.item.data("ui-selectmenu-item"),e)},focus:function(e,i){var n=i.item.data("ui-selectmenu-item");null!=t.focusIndex&&n.index!==t.focusIndex&&(t._trigger("focus",e,{item:n}),t.isOpen||t._select(n,e)),t.focusIndex=n.index,t.button.attr("aria-activedescendant",t.menuItems.eq(n.index).attr("id"))}}).menu("instance"),this.menu.addClass("ui-corner-bottom").removeClass("ui-corner-all"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this._setText(this.buttonText,this._getSelectedItem().text()),this.options.width||this._resizeButton()},_refreshMenu:function(){this.menu.empty();var e,t=this.element.find("option");t.length&&(this._parseOptions(t),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup"),e=this._getSelectedItem(),this.menuInstance.focus(null,e),this._setAria(e.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(e){this.options.disabled||(this.menuItems?(this.menu.find(".ui-state-focus").removeClass("ui-state-focus"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",e))},_position:function(){this.menuWrap.position(e.extend({of:this.button},this.options.position))},close:function(e){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",e))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderMenu:function(t,i){var n=this,s="";e.each(i,function(i,o){o.optgroup!==s&&(e("<li>",{"class":"ui-selectmenu-optgroup ui-menu-divider"+(o.element.parent("optgroup").prop("disabled")?" ui-state-disabled":""),text:o.optgroup}).appendTo(t),s=o.optgroup),n._renderItemData(t,o)})},_renderItemData:function(e,t){return this._renderItem(e,t).data("ui-selectmenu-item",t)},_renderItem:function(t,i){var n=e("<li>");return i.disabled&&n.addClass("ui-state-disabled"),this._setText(n,i.label),n.appendTo(t)},_setText:function(e,t){t?e.text(t):e.html("&#160;")},_move:function(e,t){var i,n,s=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex):(i=this.menuItems.eq(this.element[0].selectedIndex),s+=":not(.ui-state-disabled)"),n="first"===e||"last"===e?i["first"===e?"prevAll":"nextAll"](s).eq(-1):i[e+"All"](s).eq(0),n.length&&this.menuInstance.focus(t,n)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex)},_toggle:function(e){this[this.isOpen?"close":"open"](e)},_setSelection:function(){var e;this.range&&(window.getSelection?(e=window.getSelection(),e.removeAllRanges(),e.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(t){this.isOpen&&(e(t.target).closest(".ui-selectmenu-menu, #"+this.ids.button).length||this.close(t))}},_buttonEvents:{mousedown:function(){var e;window.getSelection?(e=window.getSelection(),e.rangeCount&&(this.range=e.getRangeAt(0))):this.range=document.selection.createRange()},click:function(e){this._setSelection(),this._toggle(e)},keydown:function(t){var i=!0;switch(t.keyCode){case e.ui.keyCode.TAB:case e.ui.keyCode.ESCAPE:this.close(t),i=!1;break;case e.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(t);break;case e.ui.keyCode.UP:t.altKey?this._toggle(t):this._move("prev",t);break;case e.ui.keyCode.DOWN:t.altKey?this._toggle(t):this._move("next",t);break;case e.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(t):this._toggle(t);break;case e.ui.keyCode.LEFT:this._move("prev",t);break;case e.ui.keyCode.RIGHT:this._move("next",t);break;case e.ui.keyCode.HOME:case e.ui.keyCode.PAGE_UP:this._move("first",t);break;case e.ui.keyCode.END:case e.ui.keyCode.PAGE_DOWN:this._move("last",t);break;default:this.menu.trigger(t),i=!1}i&&t.preventDefault()}},_selectFocusedItem:function(e){var t=this.menuItems.eq(this.focusIndex);t.hasClass("ui-state-disabled")||this._select(t.data("ui-selectmenu-item"),e)},_select:function(e,t){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=e.index,this._setText(this.buttonText,e.label),this._setAria(e),this._trigger("select",t,{item:e}),e.index!==i&&this._trigger("change",t,{item:e}),this.close(t)},_setAria:function(e){var t=this.menuItems.eq(e.index).attr("id");this.button.attr({"aria-labelledby":t,"aria-activedescendant":t}),this.menu.attr("aria-activedescendant",t)},_setOption:function(e,t){"icons"===e&&this.button.find("span.ui-icon").removeClass(this.options.icons.button).addClass(t.button),this._super(e,t),"appendTo"===e&&this.menuWrap.appendTo(this._appendTo()),"disabled"===e&&(this.menuInstance.option("disabled",t),this.button.toggleClass("ui-state-disabled",t).attr("aria-disabled",t),this.element.prop("disabled",t),t?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)),"width"===e&&this._resizeButton()},_appendTo:function(){var t=this.options.appendTo;return t&&(t=t.jquery||t.nodeType?e(t):this.document.find(t).eq(0)),t&&t[0]||(t=this.element.closest(".ui-front")),t.length||(t=this.document[0].body),t},_toggleAttr:function(){this.button.toggleClass("ui-corner-top",this.isOpen).toggleClass("ui-corner-all",!this.isOpen).attr("aria-expanded",this.isOpen),this.menuWrap.toggleClass("ui-selectmenu-open",this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var e=this.options.width;e||(e=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(e)},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){return{disabled:this.element.prop("disabled")}},_parseOptions:function(t){var i=[];t.each(function(t,n){var s=e(n),o=s.parent("optgroup");i.push({element:s,index:t,value:s.val(),label:s.text(),optgroup:o.attr("label")||"",disabled:o.prop("disabled")||s.prop("disabled")})}),this.items=i},_destroy:function(){this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.label.attr("for",this.ids.element)}}),e.widget("ui.slider",e.ui.mouse,{version:"1.11.4",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget ui-widget-content ui-corner-all"),this._refresh(),this._setOption("disabled",this.options.disabled),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var t,i,n=this.options,s=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),o="<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",r=[];for(i=n.values&&n.values.length||1,s.length>i&&(s.slice(i).remove(),s=s.slice(0,i)),t=s.length;i>t;t++)r.push(o);this.handles=s.add(e(r.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)})},_createRange:function(){var t=this.options,i="";t.range?(t.range===!0&&(t.values?t.values.length&&2!==t.values.length?t.values=[t.values[0],t.values[0]]:e.isArray(t.values)&&(t.values=t.values.slice(0)):t.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left:"",bottom:""}):(this.range=e("<div></div>").appendTo(this.element),i="ui-slider-range ui-widget-header ui-corner-all"),this.range.addClass(i+("min"===t.range||"max"===t.range?" ui-slider-range-"+t.range:""))):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(t){var i,n,s,o,r,a,l,c,u=this,h=this.options;return h.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:t.pageX,y:t.pageY},n=this._normValueFromMouse(i),s=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var i=Math.abs(n-u.values(t));(s>i||s===i&&(t===u._lastChangedValue||u.values(t)===h.min))&&(s=i,o=e(this),r=t)}),a=this._start(t,r),a===!1?!1:(this._mouseSliding=!0,this._handleIndex=r,o.addClass("ui-state-active").focus(),l=o.offset(),c=!e(t.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=c?{left:0,top:0}:{left:t.pageX-l.left-o.width()/2,top:t.pageY-l.top-o.height()/2-(parseInt(o.css("borderTopWidth"),10)||0)-(parseInt(o.css("borderBottomWidth"),10)||0)+(parseInt(o.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,r,n),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},i=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,i),!1},_mouseStop:function(e){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,i,n,s,o;return"horizontal"===this.orientation?(t=this.elementSize.width,i=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,i=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),n=i/t,n>1&&(n=1),0>n&&(n=0),"vertical"===this.orientation&&(n=1-n),s=this._valueMax()-this._valueMin(),o=this._valueMin()+n*s,this._trimAlignValue(o)},_start:function(e,t){var i={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(i.value=this.values(t),i.values=this.values()),this._trigger("start",e,i)},_slide:function(e,t,i){var n,s,o;this.options.values&&this.options.values.length?(n=this.values(t?0:1),2===this.options.values.length&&this.options.range===!0&&(0===t&&i>n||1===t&&n>i)&&(i=n),i!==this.values(t)&&(s=this.values(),s[t]=i,o=this._trigger("slide",e,{handle:this.handles[t],value:i,values:s}),n=this.values(t?0:1),o!==!1&&this.values(t,i))):i!==this.value()&&(o=this._trigger("slide",e,{handle:this.handles[t],value:i}),o!==!1&&this.value(i))},_stop:function(e,t){var i={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(t),i.values=this.values()),this._trigger("stop",e,i)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var i={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(t),i.values=this.values()),this._lastChangedValue=t,this._trigger("change",e,i)}},value:function(e){return arguments.length?(this.options.value=this._trimAlignValue(e),this._refreshValue(),void this._change(null,0)):this._value()},values:function(t,i){var n,s,o;if(arguments.length>1)return this.options.values[t]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,t);if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();for(n=this.options.values,s=arguments[0],o=0;o<n.length;o+=1)n[o]=this._trimAlignValue(s[o]),this._change(null,o);this._refreshValue()},_setOption:function(t,i){var n,s=0;switch("range"===t&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),e.isArray(this.options.values)&&(s=this.options.values.length),"disabled"===t&&this.element.toggleClass("ui-state-disabled",!!i),this._super(t,i),t){case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue(),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),n=0;s>n;n+=1)this._change(null,n);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,
this._refresh(),this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e)},_values:function(e){var t,i,n;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t);if(this.options.values&&this.options.values.length){for(i=this.options.values.slice(),n=0;n<i.length;n+=1)i[n]=this._trimAlignValue(i[n]);return i}return[]},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,i=(e-this._valueMin())%t,n=e-i;return 2*Math.abs(i)>=t&&(n+=i>0?t:-t),parseFloat(n.toFixed(5))},_calculateNewMax:function(){var e=this.options.max,t=this._valueMin(),i=this.options.step,n=Math.floor(+(e-t).toFixed(this._precision())/i)*i;e=n+t,this.max=parseFloat(e.toFixed(this._precision()))},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),i=t.indexOf(".");return-1===i?0:t.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshValue:function(){var t,i,n,s,o,r=this.options.range,a=this.options,l=this,c=this._animateOff?!1:a.animate,u={};this.options.values&&this.options.values.length?this.handles.each(function(n){i=(l.values(n)-l._valueMin())/(l._valueMax()-l._valueMin())*100,u["horizontal"===l.orientation?"left":"bottom"]=i+"%",e(this).stop(1,1)[c?"animate":"css"](u,a.animate),l.options.range===!0&&("horizontal"===l.orientation?(0===n&&l.range.stop(1,1)[c?"animate":"css"]({left:i+"%"},a.animate),1===n&&l.range[c?"animate":"css"]({width:i-t+"%"},{queue:!1,duration:a.animate})):(0===n&&l.range.stop(1,1)[c?"animate":"css"]({bottom:i+"%"},a.animate),1===n&&l.range[c?"animate":"css"]({height:i-t+"%"},{queue:!1,duration:a.animate}))),t=i}):(n=this.value(),s=this._valueMin(),o=this._valueMax(),i=o!==s?(n-s)/(o-s)*100:0,u["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[c?"animate":"css"](u,a.animate),"min"===r&&"horizontal"===this.orientation&&this.range.stop(1,1)[c?"animate":"css"]({width:i+"%"},a.animate),"max"===r&&"horizontal"===this.orientation&&this.range[c?"animate":"css"]({width:100-i+"%"},{queue:!1,duration:a.animate}),"min"===r&&"vertical"===this.orientation&&this.range.stop(1,1)[c?"animate":"css"]({height:i+"%"},a.animate),"max"===r&&"vertical"===this.orientation&&this.range[c?"animate":"css"]({height:100-i+"%"},{queue:!1,duration:a.animate}))},_handleEvents:{keydown:function(t){var i,n,s,o,r=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(t.preventDefault(),!this._keySliding&&(this._keySliding=!0,e(t.target).addClass("ui-state-active"),i=this._start(t,r),i===!1))return}switch(o=this.options.step,n=s=this.options.values&&this.options.values.length?this.values(r):this.value(),t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(n+(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(n-(this._valueMax()-this._valueMin())/this.numPages);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(n===this._valueMax())return;s=this._trimAlignValue(n+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(n===this._valueMin())return;s=this._trimAlignValue(n-o)}this._slide(t,r,s)},keyup:function(t){var i=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,i),this._change(t,i),e(t.target).removeClass("ui-state-active"))}}}),e.widget("ui.sortable",e.ui.mouse,{version:"1.11.4",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(e,t,i){return e>=t&&t+i>e},_isFloating:function(e){return/left|right/.test(e.css("float"))||/inline|table-cell/.test(e.css("display"))},_create:function(){this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(e,t){this._super(e,t),"handle"===e&&this._setHandleClassName()},_setHandleClassName:function(){this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"),e.each(this.items,function(){(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item).addClass("ui-sortable-handle")})},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"),this._mouseDestroy();for(var e=this.items.length-1;e>=0;e--)this.items[e].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(t,i){var n=null,s=!1,o=this;return this.reverting?!1:this.options.disabled||"static"===this.options.type?!1:(this._refreshItems(t),e(t.target).parents().each(function(){return e.data(this,o.widgetName+"-item")===o?(n=e(this),!1):void 0}),e.data(t.target,o.widgetName+"-item")===o&&(n=e(t.target)),n&&(!this.options.handle||i||(e(this.options.handle,n).find("*").addBack().each(function(){this===t.target&&(s=!0)}),s))?(this.currentItem=n,this._removeCurrentsFromItems(),!0):!1)},_mouseStart:function(t,i,n){var s,o,r=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(t),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},e.extend(this.offset,{click:{left:t.pageX-this.offset.left,top:t.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(t),this.originalPageX=t.pageX,this.originalPageY=t.pageY,r.cursorAt&&this._adjustOffsetFromHelper(r.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),r.containment&&this._setContainment(),r.cursor&&"auto"!==r.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",r.cursor),this.storedStylesheet=e("<style>*{ cursor: "+r.cursor+" !important; }</style>").appendTo(o)),r.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",r.opacity)),r.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",r.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",t,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",t,this._uiHash(this));return e.ui.ddmanager&&(e.ui.ddmanager.current=this),e.ui.ddmanager&&!r.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(t),!0},_mouseDrag:function(t){var i,n,s,o,r=this.options,a=!1;for(this.position=this._generatePosition(t),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-t.pageY<r.scrollSensitivity?this.scrollParent[0].scrollTop=a=this.scrollParent[0].scrollTop+r.scrollSpeed:t.pageY-this.overflowOffset.top<r.scrollSensitivity&&(this.scrollParent[0].scrollTop=a=this.scrollParent[0].scrollTop-r.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-t.pageX<r.scrollSensitivity?this.scrollParent[0].scrollLeft=a=this.scrollParent[0].scrollLeft+r.scrollSpeed:t.pageX-this.overflowOffset.left<r.scrollSensitivity&&(this.scrollParent[0].scrollLeft=a=this.scrollParent[0].scrollLeft-r.scrollSpeed)):(t.pageY-this.document.scrollTop()<r.scrollSensitivity?a=this.document.scrollTop(this.document.scrollTop()-r.scrollSpeed):this.window.height()-(t.pageY-this.document.scrollTop())<r.scrollSensitivity&&(a=this.document.scrollTop(this.document.scrollTop()+r.scrollSpeed)),t.pageX-this.document.scrollLeft()<r.scrollSensitivity?a=this.document.scrollLeft(this.document.scrollLeft()-r.scrollSpeed):this.window.width()-(t.pageX-this.document.scrollLeft())<r.scrollSensitivity&&(a=this.document.scrollLeft(this.document.scrollLeft()+r.scrollSpeed))),a!==!1&&e.ui.ddmanager&&!r.dropBehaviour&&e.ui.ddmanager.prepareOffsets(this,t)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(n=this.items[i],s=n.item[0],o=this._intersectsWithPointer(n),o&&n.instance===this.currentContainer&&s!==this.currentItem[0]&&this.placeholder[1===o?"next":"prev"]()[0]!==s&&!e.contains(this.placeholder[0],s)&&("semi-dynamic"===this.options.type?!e.contains(this.element[0],s):!0)){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(t,n),this._trigger("change",t,this._uiHash());break}return this._contactContainers(t),e.ui.ddmanager&&e.ui.ddmanager.drag(this,t),this._trigger("sort",t,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(t,i){if(t){if(e.ui.ddmanager&&!this.options.dropBehaviour&&e.ui.ddmanager.drop(this,t),this.options.revert){var n=this,s=this.placeholder.offset(),o=this.options.axis,r={};o&&"x"!==o||(r.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(r.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,e(this.helper).animate(r,parseInt(this.options.revert,10)||500,function(){n._clear(t)})}else this._clear(t,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var t=this.containers.length-1;t>=0;t--)this.containers[t]._trigger("deactivate",null,this._uiHash(this)),this.containers[t].containerCache.over&&(this.containers[t]._trigger("out",null,this._uiHash(this)),this.containers[t].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),e.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?e(this.domPosition.prev).after(this.currentItem):e(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(t){var i=this._getItemsAsjQuery(t&&t.connected),n=[];return t=t||{},e(i).each(function(){var i=(e(t.item||this).attr(t.attribute||"id")||"").match(t.expression||/(.+)[\-=_](.+)/);i&&n.push((t.key||i[1]+"[]")+"="+(t.key&&t.expression?i[1]:i[2]))}),!n.length&&t.key&&n.push(t.key+"="),n.join("&")},toArray:function(t){var i=this._getItemsAsjQuery(t&&t.connected),n=[];return t=t||{},i.each(function(){n.push(e(t.item||this).attr(t.attribute||"id")||"")}),n},_intersectsWith:function(e){var t=this.positionAbs.left,i=t+this.helperProportions.width,n=this.positionAbs.top,s=n+this.helperProportions.height,o=e.left,r=o+e.width,a=e.top,l=a+e.height,c=this.offset.click.top,u=this.offset.click.left,h="x"===this.options.axis||n+c>a&&l>n+c,d="y"===this.options.axis||t+u>o&&r>t+u,p=h&&d;return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>e[this.floating?"width":"height"]?p:o<t+this.helperProportions.width/2&&i-this.helperProportions.width/2<r&&a<n+this.helperProportions.height/2&&s-this.helperProportions.height/2<l},_intersectsWithPointer:function(e){var t="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,e.top,e.height),i="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,e.left,e.width),n=t&&i,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return n?this.floating?o&&"right"===o||"down"===s?2:1:s&&("down"===s?2:1):!1},_intersectsWithSides:function(e){var t=this._isOverAxis(this.positionAbs.top+this.offset.click.top,e.top+e.height/2,e.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,e.left+e.width/2,e.width),n=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?"right"===s&&i||"left"===s&&!i:n&&("down"===n&&t||"up"===n&&!t)},_getDragVerticalDirection:function(){var e=this.positionAbs.top-this.lastPositionAbs.top;return 0!==e&&(e>0?"down":"up")},_getDragHorizontalDirection:function(){var e=this.positionAbs.left-this.lastPositionAbs.left;return 0!==e&&(e>0?"right":"left")},refresh:function(e){return this._refreshItems(e),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var e=this.options;return e.connectWith.constructor===String?[e.connectWith]:e.connectWith},_getItemsAsjQuery:function(t){function i(){a.push(this)}var n,s,o,r,a=[],l=[],c=this._connectWith();if(c&&t)for(n=c.length-1;n>=0;n--)for(o=e(c[n],this.document[0]),s=o.length-1;s>=0;s--)r=e.data(o[s],this.widgetFullName),r&&r!==this&&!r.options.disabled&&l.push([e.isFunction(r.options.items)?r.options.items.call(r.element):e(r.options.items,r.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),r]);for(l.push([e.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):e(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return e(a)},_removeCurrentsFromItems:function(){var t=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=e.grep(this.items,function(e){for(var i=0;i<t.length;i++)if(t[i]===e.item[0])return!1;return!0})},_refreshItems:function(t){this.items=[],this.containers=[this];var i,n,s,o,r,a,l,c,u=this.items,h=[[e.isFunction(this.options.items)?this.options.items.call(this.element[0],t,{item:this.currentItem}):e(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(s=e(d[i],this.document[0]),n=s.length-1;n>=0;n--)o=e.data(s[n],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(h.push([e.isFunction(o.options.items)?o.options.items.call(o.element[0],t,{item:this.currentItem}):e(o.options.items,o.element),o]),this.containers.push(o));for(i=h.length-1;i>=0;i--)for(r=h[i][1],a=h[i][0],n=0,c=a.length;c>n;n++)l=e(a[n]),l.data(this.widgetName+"-item",r),u.push({item:l,instance:r,width:0,height:0,left:0,top:0})},refreshPositions:function(t){this.floating=this.items.length?"x"===this.options.axis||this._isFloating(this.items[0].item):!1,this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,n,s,o;for(i=this.items.length-1;i>=0;i--)n=this.items[i],n.instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?e(this.options.toleranceElement,n.item):n.item,t||(n.width=s.outerWidth(),n.height=s.outerHeight()),o=s.offset(),n.left=o.left,n.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(t){t=t||this;var i,n=t.options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=t.currentItem[0].nodeName.toLowerCase(),s=e("<"+n+">",t.document[0]).addClass(i||t.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");return"tbody"===n?t._createTrPlaceholder(t.currentItem.find("tr").eq(0),e("<tr>",t.document[0]).appendTo(s)):"tr"===n?t._createTrPlaceholder(t.currentItem,s):"img"===n&&s.attr("src",t.currentItem.attr("src")),i||s.css("visibility","hidden"),s},update:function(e,s){i&&!n.forcePlaceholderSize||(s.height()||s.height(t.currentItem.innerHeight()-parseInt(t.currentItem.css("paddingTop")||0,10)-parseInt(t.currentItem.css("paddingBottom")||0,10)),s.width()||s.width(t.currentItem.innerWidth()-parseInt(t.currentItem.css("paddingLeft")||0,10)-parseInt(t.currentItem.css("paddingRight")||0,10)))}}),t.placeholder=e(n.placeholder.element.call(t.element,t.currentItem)),t.currentItem.after(t.placeholder),n.placeholder.update(t,t.placeholder)},_createTrPlaceholder:function(t,i){var n=this;t.children().each(function(){e("<td>&#160;</td>",n.document[0]).attr("colspan",e(this).attr("colspan")||1).appendTo(i)})},_contactContainers:function(t){var i,n,s,o,r,a,l,c,u,h,d=null,p=null;for(i=this.containers.length-1;i>=0;i--)if(!e.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&e.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],p=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",t,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[p].containerCache.over||(this.containers[p]._trigger("over",t,this._uiHash(this)),this.containers[p].containerCache.over=1);else{for(s=1e4,o=null,u=d.floating||this._isFloating(this.currentItem),r=u?"left":"top",a=u?"width":"height",h=u?"clientX":"clientY",n=this.items.length-1;n>=0;n--)e.contains(this.containers[p].element[0],this.items[n].item[0])&&this.items[n].item[0]!==this.currentItem[0]&&(l=this.items[n].item.offset()[r],c=!1,t[h]-l>this.items[n][a]/2&&(c=!0),Math.abs(t[h]-l)<s&&(s=Math.abs(t[h]-l),o=this.items[n],this.direction=c?"up":"down"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[p])return void(this.currentContainer.containerCache.over||(this.containers[p]._trigger("over",t,this._uiHash()),this.currentContainer.containerCache.over=1));o?this._rearrange(t,o,null,!0):this._rearrange(t,null,this.containers[p].element,!0),this._trigger("change",t,this._uiHash()),this.containers[p]._trigger("change",t,this._uiHash(this)),this.currentContainer=this.containers[p],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[p]._trigger("over",t,this._uiHash(this)),this.containers[p].containerCache.over=1}},_createHelper:function(t){var i=this.options,n=e.isFunction(i.helper)?e(i.helper.apply(this.element[0],[t,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return n.parents("body").length||e("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),n[0].style.width&&!i.forceHelperSize||n.width(this.currentItem.width()),n[0].style.height&&!i.forceHelperSize||n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(t){"string"==typeof t&&(t=t.split(" ")),e.isArray(t)&&(t={left:+t[0],top:+t[1]||0}),"left"in t&&(this.offset.click.left=t.left+this.margins.left),"right"in t&&(this.offset.click.left=this.helperProportions.width-t.right+this.margins.left),"top"in t&&(this.offset.click.top=t.top+this.margins.top),"bottom"in t&&(this.offset.click.top=this.helperProportions.height-t.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var t=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])&&(t.left+=this.scrollParent.scrollLeft(),t.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&e.ui.ie)&&(t={top:0,left:0}),{top:t.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:t.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var e=this.currentItem.position();return{top:e.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:e.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var t,i,n,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),"document"!==s.containment&&"window"!==s.containment||(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.width():this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(t=e(s.containment)[0],i=e(s.containment).offset(),n="hidden"!==e(t).css("overflow"),this.containment=[i.left+(parseInt(e(t).css("borderLeftWidth"),10)||0)+(parseInt(e(t).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(e(t).css("borderTopWidth"),10)||0)+(parseInt(e(t).css("paddingTop"),10)||0)-this.margins.top,i.left+(n?Math.max(t.scrollWidth,t.offsetWidth):t.offsetWidth)-(parseInt(e(t).css("borderLeftWidth"),10)||0)-(parseInt(e(t).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(t.scrollHeight,t.offsetHeight):t.offsetHeight)-(parseInt(e(t).css("borderTopWidth"),10)||0)-(parseInt(e(t).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(t,i){i||(i=this.position);var n="absolute"===t?1:-1,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:s.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*n}},_generatePosition:function(t){var i,n,s=this.options,o=t.pageX,r=t.pageY,a="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&e.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(a[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(t.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),t.pageY-this.offset.click.top<this.containment[1]&&(r=this.containment[1]+this.offset.click.top),t.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),t.pageY-this.offset.click.top>this.containment[3]&&(r=this.containment[3]+this.offset.click.top)),s.grid&&(i=this.originalPageY+Math.round((r-this.originalPageY)/s.grid[1])*s.grid[1],r=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-s.grid[1]:i+s.grid[1]:i,n=this.originalPageX+Math.round((o-this.originalPageX)/s.grid[0])*s.grid[0],o=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-s.grid[0]:n+s.grid[0]:n)),{top:r-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:a.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:a.scrollLeft())}},_rearrange:function(e,t,i,n){i?i[0].appendChild(this.placeholder[0]):t.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?t.item[0]:t.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var s=this.counter;this._delay(function(){s===this.counter&&this.refreshPositions(!n)})},_clear:function(e,t){function i(e,t,i){return function(n){i._trigger(e,n,t._uiHash(t))}}this.reverting=!1;var n,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)"auto"!==this._storedCSS[n]&&"static"!==this._storedCSS[n]||(this._storedCSS[n]="");this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!t&&s.push(function(e){this._trigger("receive",e,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||t||s.push(function(e){this._trigger("update",e,this._uiHash())}),this!==this.currentContainer&&(t||(s.push(function(e){this._trigger("remove",e,this._uiHash())}),s.push(function(e){return function(t){e._trigger("receive",t,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(e){return function(t){e._trigger("update",t,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)t||s.push(i("deactivate",this,this.containers[n])),this.containers[n].containerCache.over&&(s.push(i("out",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,t||this._trigger("beforeStop",e,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!t){for(n=0;n<s.length;n++)s[n].call(this,e);this._trigger("stop",e,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){e.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(t){var i=t||this;return{helper:i.helper,placeholder:i.placeholder||e([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:t?t.element:null}}}),e.widget("ui.spinner",{version:"1.11.4",defaultElement:"<input>",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var t={},i=this.element;return e.each(["min","max","step"],function(e,n){var s=i.attr(n);void 0!==s&&s.length&&(t[n]=s)}),t},_events:{keydown:function(e){this._start(e)&&this._keydown(e)&&e.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(e){return this.cancelBlur?void delete this.cancelBlur:(this._stop(),this._refresh(),void(this.previous!==this.element.val()&&this._trigger("change",e)))},mousewheel:function(e,t){if(t){if(!this.spinning&&!this._start(e))return!1;this._spin((t>0?1:-1)*this.options.step,e),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(e)},100),e.preventDefault()}},"mousedown .ui-spinner-button":function(t){function i(){var e=this.element[0]===this.document[0].activeElement;e||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),t.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(t)!==!1&&this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(t){return e(t.currentTarget).hasClass("ui-state-active")?this._start(t)===!1?!1:void this._repeat(null,e(t.currentTarget).hasClass("ui-spinner-up")?1:-1,t):void 0},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var e=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr("role","spinbutton"),this.buttons=e.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all"),this.buttons.height()>Math.ceil(.5*e.height())&&e.height()>0&&e.height(e.height()),this.options.disabled&&this.disable()},_keydown:function(t){var i=this.options,n=e.ui.keyCode;switch(t.keyCode){case n.UP:return this._repeat(null,1,t),!0;case n.DOWN:return this._repeat(null,-1,t),!0;case n.PAGE_UP:return this._repeat(null,i.page,t),!0;case n.PAGE_DOWN:return this._repeat(null,-i.page,t),!0}return!1},_uiSpinnerHtml:function(){return"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"},_buttonHtml:function(){return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon "+this.options.icons.up+"'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon "+this.options.icons.down+"'>&#9660;</span></a>"},_start:function(e){return this.spinning||this._trigger("start",e)!==!1?(this.counter||(this.counter=1),this.spinning=!0,!0):!1},_repeat:function(e,t,i){e=e||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,t,i)},e),this._spin(t*this.options.step,i)},_spin:function(e,t){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+e*this._increment(this.counter)),
this.spinning&&this._trigger("spin",t,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(t){var i=this.options.incremental;return i?e.isFunction(i)?i(t):Math.floor(t*t*t/5e4-t*t/500+17*t/200+1):1},_precision:function(){var e=this._precisionOf(this.options.step);return null!==this.options.min&&(e=Math.max(e,this._precisionOf(this.options.min))),e},_precisionOf:function(e){var t=e.toString(),i=t.indexOf(".");return-1===i?0:t.length-i-1},_adjustValue:function(e){var t,i,n=this.options;return t=null!==n.min?n.min:0,i=e-t,i=Math.round(i/n.step)*n.step,e=t+i,e=parseFloat(e.toFixed(this._precision())),null!==n.max&&e>n.max?n.max:null!==n.min&&e<n.min?n.min:e},_stop:function(e){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",e))},_setOption:function(e,t){if("culture"===e||"numberFormat"===e){var i=this._parse(this.element.val());return this.options[e]=t,void this.element.val(this._format(i))}"max"!==e&&"min"!==e&&"step"!==e||"string"==typeof t&&(t=this._parse(t)),"icons"===e&&(this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(t.up),this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(t.down)),this._super(e,t),"disabled"===e&&(this.widget().toggleClass("ui-state-disabled",!!t),this.element.prop("disabled",!!t),this.buttons.button(t?"disable":"enable"))},_setOptions:l(function(e){this._super(e)}),_parse:function(e){return"string"==typeof e&&""!==e&&(e=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(e,10,this.options.culture):+e),""===e||isNaN(e)?null:e},_format:function(e){return""===e?"":window.Globalize&&this.options.numberFormat?Globalize.format(e,this.options.numberFormat,this.options.culture):e},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var e=this.value();return null===e?!1:e===this._adjustValue(e)},_value:function(e,t){var i;""!==e&&(i=this._parse(e),null!==i&&(t||(i=this._adjustValue(i)),e=this._format(i))),this.element.val(e),this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:l(function(e){this._stepUp(e)}),_stepUp:function(e){this._start()&&(this._spin((e||1)*this.options.step),this._stop())},stepDown:l(function(e){this._stepDown(e)}),_stepDown:function(e){this._start()&&(this._spin((e||1)*-this.options.step),this._stop())},pageUp:l(function(e){this._stepUp((e||1)*this.options.page)}),pageDown:l(function(e){this._stepDown((e||1)*this.options.page)}),value:function(e){return arguments.length?void l(this._value).call(this,e):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),e.widget("ui.tabs",{version:"1.11.4",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var e=/#.*$/;return function(t){var i,n;t=t.cloneNode(!1),i=t.href.replace(e,""),n=location.href.replace(e,"");try{i=decodeURIComponent(i)}catch(s){}try{n=decodeURIComponent(n)}catch(s){}return t.hash.length>1&&i===n}}(),_create:function(){var t=this,i=this.options;this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",i.collapsible),this._processTabs(),i.active=this._initialActive(),e.isArray(i.disabled)&&(i.disabled=e.unique(i.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"),function(e){return t.tabs.index(e)}))).sort()),this.options.active!==!1&&this.anchors.length?this.active=this._findActive(i.active):this.active=e(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var t=this.options.active,i=this.options.collapsible,n=location.hash.substring(1);return null===t&&(n&&this.tabs.each(function(i,s){return e(s).attr("aria-controls")===n?(t=i,!1):void 0}),null===t&&(t=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),null!==t&&-1!==t||(t=this.tabs.length?0:!1)),t!==!1&&(t=this.tabs.index(this.tabs.eq(t)),-1===t&&(t=i?!1:0)),!i&&t===!1&&this.anchors.length&&(t=0),t},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):e()}},_tabKeydown:function(t){var i=e(this.document[0].activeElement).closest("li"),n=this.tabs.index(i),s=!0;if(!this._handlePageNav(t)){switch(t.keyCode){case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:n++;break;case e.ui.keyCode.UP:case e.ui.keyCode.LEFT:s=!1,n--;break;case e.ui.keyCode.END:n=this.anchors.length-1;break;case e.ui.keyCode.HOME:n=0;break;case e.ui.keyCode.SPACE:return t.preventDefault(),clearTimeout(this.activating),void this._activate(n);case e.ui.keyCode.ENTER:return t.preventDefault(),clearTimeout(this.activating),void this._activate(n===this.options.active?!1:n);default:return}t.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,s),t.ctrlKey||t.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(n).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",n)},this.delay))}},_panelKeydown:function(t){this._handlePageNav(t)||t.ctrlKey&&t.keyCode===e.ui.keyCode.UP&&(t.preventDefault(),this.active.focus())},_handlePageNav:function(t){return t.altKey&&t.keyCode===e.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):t.altKey&&t.keyCode===e.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(t,i){function n(){return t>s&&(t=0),0>t&&(t=s),t}for(var s=this.tabs.length-1;-1!==e.inArray(n(),this.options.disabled);)t=i?t+1:t-1;return t},_focusNextTab:function(e,t){return e=this._findNextTab(e,t),this.tabs.eq(e).focus(),e},_setOption:function(e,t){return"active"===e?void this._activate(t):"disabled"===e?void this._setupDisabled(t):(this._super(e,t),"collapsible"===e&&(this.element.toggleClass("ui-tabs-collapsible",t),t||this.options.active!==!1||this._activate(0)),"event"===e&&this._setupEvents(t),void("heightStyle"===e&&this._setupHeightStyle(t)))},_sanitizeSelector:function(e){return e?e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var t=this.options,i=this.tablist.children(":has(a[href])");t.disabled=e.map(i.filter(".ui-state-disabled"),function(e){return i.index(e)}),this._processTabs(),t.active!==!1&&this.anchors.length?this.active.length&&!e.contains(this.tablist[0],this.active[0])?this.tabs.length===t.disabled.length?(t.active=!1,this.active=e()):this._activate(this._findNextTab(Math.max(0,t.active-1),!1)):t.active=this.tabs.index(this.active):(t.active=!1,this.active=e()),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var t=this,i=this.tabs,n=this.anchors,s=this.panels;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist").delegate("> li","mousedown"+this.eventNamespace,function(t){e(this).is(".ui-state-disabled")&&t.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){e(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return e("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=e(),this.anchors.each(function(i,n){var s,o,r,a=e(n).uniqueId().attr("id"),l=e(n).closest("li"),c=l.attr("aria-controls");t._isLocal(n)?(s=n.hash,r=s.substring(1),o=t.element.find(t._sanitizeSelector(s))):(r=l.attr("aria-controls")||e({}).uniqueId()[0].id,s="#"+r,o=t.element.find(s),o.length||(o=t._createPanel(r),o.insertAfter(t.panels[i-1]||t.tablist)),o.attr("aria-live","polite")),o.length&&(t.panels=t.panels.add(o)),c&&l.data("ui-tabs-aria-controls",c),l.attr({"aria-controls":r,"aria-labelledby":a}),o.attr("aria-labelledby",a)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel"),i&&(this._off(i.not(this.tabs)),this._off(n.not(this.anchors)),this._off(s.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol,ul").eq(0)},_createPanel:function(t){return e("<div>").attr("id",t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(t){e.isArray(t)&&(t.length?t.length===this.anchors.length&&(t=!0):t=!1);for(var i,n=0;i=this.tabs[n];n++)t===!0||-1!==e.inArray(n,t)?e(i).addClass("ui-state-disabled").attr("aria-disabled","true"):e(i).removeClass("ui-state-disabled").removeAttr("aria-disabled");this.options.disabled=t},_setupEvents:function(t){var i={};t&&e.each(t.split(" "),function(e,t){i[t]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(e){e.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(t){var i,n=this.element.parent();"fill"===t?(i=n.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var t=e(this),n=t.css("position");"absolute"!==n&&"fixed"!==n&&(i-=t.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=e(this).outerHeight(!0)}),this.panels.each(function(){e(this).height(Math.max(0,i-e(this).innerHeight()+e(this).height()))}).css("overflow","auto")):"auto"===t&&(i=0,this.panels.each(function(){i=Math.max(i,e(this).height("").height())}).height(i))},_eventHandler:function(t){var i=this.options,n=this.active,s=e(t.currentTarget),o=s.closest("li"),r=o[0]===n[0],a=r&&i.collapsible,l=a?e():this._getPanelForTab(o),c=n.length?this._getPanelForTab(n):e(),u={oldTab:n,oldPanel:c,newTab:a?e():o,newPanel:l};t.preventDefault(),o.hasClass("ui-state-disabled")||o.hasClass("ui-tabs-loading")||this.running||r&&!i.collapsible||this._trigger("beforeActivate",t,u)===!1||(i.active=a?!1:this.tabs.index(o),this.active=r?e():o,this.xhr&&this.xhr.abort(),c.length||l.length||e.error("jQuery UI Tabs: Mismatching fragment identifier."),l.length&&this.load(this.tabs.index(o),t),this._toggle(t,u))},_toggle:function(t,i){function n(){o.running=!1,o._trigger("activate",t,i)}function s(){i.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),r.length&&o.options.show?o._show(r,o.options.show,n):(r.show(),n())}var o=this,r=i.newPanel,a=i.oldPanel;this.running=!0,a.length&&this.options.hide?this._hide(a,this.options.hide,function(){i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),s()}):(i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),a.hide(),s()),a.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),r.length&&a.length?i.oldTab.attr("tabIndex",-1):r.length&&this.tabs.filter(function(){return 0===e(this).attr("tabIndex")}).attr("tabIndex",-1),r.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(t){var i,n=this._findActive(t);n[0]!==this.active[0]&&(n.length||(n=this.active),i=n.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:e.noop}))},_findActive:function(t){return t===!1?e():this.tabs.eq(t)},_getIndex:function(e){return"string"==typeof e&&(e=this.anchors.index(this.anchors.filter("[href$='"+e+"']"))),e},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(),this.tablist.unbind(this.eventNamespace),this.tabs.add(this.panels).each(function(){e.data(this,"ui-tabs-destroy")?e(this).remove():e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var t=e(this),i=t.data("ui-tabs-aria-controls");i?t.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):t.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(t){var i=this.options.disabled;i!==!1&&(void 0===t?i=!1:(t=this._getIndex(t),i=e.isArray(i)?e.map(i,function(e){return e!==t?e:null}):e.map(this.tabs,function(e,i){return i!==t?i:null})),this._setupDisabled(i))},disable:function(t){var i=this.options.disabled;if(i!==!0){if(void 0===t)i=!0;else{if(t=this._getIndex(t),-1!==e.inArray(t,i))return;i=e.isArray(i)?e.merge([t],i).sort():[t]}this._setupDisabled(i)}},load:function(t,i){t=this._getIndex(t);var n=this,s=this.tabs.eq(t),o=s.find(".ui-tabs-anchor"),r=this._getPanelForTab(s),a={tab:s,panel:r},l=function(e,t){"abort"===t&&n.panels.stop(!1,!0),s.removeClass("ui-tabs-loading"),r.removeAttr("aria-busy"),e===n.xhr&&delete n.xhr};this._isLocal(o[0])||(this.xhr=e.ajax(this._ajaxSettings(o,i,a)),this.xhr&&"canceled"!==this.xhr.statusText&&(s.addClass("ui-tabs-loading"),r.attr("aria-busy","true"),this.xhr.done(function(e,t,s){setTimeout(function(){r.html(e),n._trigger("load",i,a),l(s,t)},1)}).fail(function(e,t){setTimeout(function(){l(e,t)},1)})))},_ajaxSettings:function(t,i,n){var s=this;return{url:t.attr("href"),beforeSend:function(t,o){return s._trigger("beforeLoad",i,e.extend({jqXHR:t,ajaxSettings:o},n))}}},_getPanelForTab:function(t){var i=e(t).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),e.widget("ui.tooltip",{version:"1.11.4",options:{content:function(){var t=e(this).attr("title")||"";return e("<a>").text(t).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_addDescribedBy:function(t,i){var n=(t.attr("aria-describedby")||"").split(/\s+/);n.push(i),t.data("ui-tooltip-id",i).attr("aria-describedby",e.trim(n.join(" ")))},_removeDescribedBy:function(t){var i=t.data("ui-tooltip-id"),n=(t.attr("aria-describedby")||"").split(/\s+/),s=e.inArray(i,n);-1!==s&&n.splice(s,1),t.removeData("ui-tooltip-id"),n=e.trim(n.join(" ")),n?t.attr("aria-describedby",n):t.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable(),this.liveRegion=e("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body)},_setOption:function(t,i){var n=this;return"disabled"===t?(this[i?"_disable":"_enable"](),void(this.options[t]=i)):(this._super(t,i),void("content"===t&&e.each(this.tooltips,function(e,t){n._updateContent(t.element)})))},_disable:function(){var t=this;e.each(this.tooltips,function(i,n){var s=e.Event("blur");s.target=s.currentTarget=n.element[0],t.close(s,!0)}),this.element.find(this.options.items).addBack().each(function(){var t=e(this);t.is("[title]")&&t.data("ui-tooltip-title",t.attr("title")).removeAttr("title")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var t=e(this);t.data("ui-tooltip-title")&&t.attr("title",t.data("ui-tooltip-title"))})},open:function(t){var i=this,n=e(t?t.target:this.element).closest(this.options.items);n.length&&!n.data("ui-tooltip-id")&&(n.attr("title")&&n.data("ui-tooltip-title",n.attr("title")),n.data("ui-tooltip-open",!0),t&&"mouseover"===t.type&&n.parents().each(function(){var t,n=e(this);n.data("ui-tooltip-open")&&(t=e.Event("blur"),t.target=t.currentTarget=this,i.close(t,!0)),n.attr("title")&&(n.uniqueId(),i.parents[this.id]={element:this,title:n.attr("title")},n.attr("title",""))}),this._registerCloseHandlers(t,n),this._updateContent(n,t))},_updateContent:function(e,t){var i,n=this.options.content,s=this,o=t?t.type:null;return"string"==typeof n?this._open(t,e,n):(i=n.call(e[0],function(i){s._delay(function(){e.data("ui-tooltip-open")&&(t&&(t.type=o),this._open(t,e,i))})}),void(i&&this._open(t,e,i)))},_open:function(t,i,n){function s(e){c.of=e,r.is(":hidden")||r.position(c)}var o,r,a,l,c=e.extend({},this.options.position);if(n){if(o=this._find(i))return void o.tooltip.find(".ui-tooltip-content").html(n);i.is("[title]")&&(t&&"mouseover"===t.type?i.attr("title",""):i.removeAttr("title")),o=this._tooltip(i),r=o.tooltip,this._addDescribedBy(i,r.attr("id")),r.find(".ui-tooltip-content").html(n),this.liveRegion.children().hide(),n.clone?(l=n.clone(),l.removeAttr("id").find("[id]").removeAttr("id")):l=n,e("<div>").html(l).appendTo(this.liveRegion),this.options.track&&t&&/^mouse/.test(t.type)?(this._on(this.document,{mousemove:s}),s(t)):r.position(e.extend({of:i},this.options.position)),r.hide(),this._show(r,this.options.show),this.options.show&&this.options.show.delay&&(a=this.delayedShow=setInterval(function(){r.is(":visible")&&(s(c.of),clearInterval(a))},e.fx.interval)),this._trigger("open",t,{tooltip:r})}},_registerCloseHandlers:function(t,i){var n={keyup:function(t){if(t.keyCode===e.ui.keyCode.ESCAPE){var n=e.Event(t);n.currentTarget=i[0],this.close(n,!0)}}};i[0]!==this.element[0]&&(n.remove=function(){this._removeTooltip(this._find(i).tooltip)}),t&&"mouseover"!==t.type||(n.mouseleave="close"),t&&"focusin"!==t.type||(n.focusout="close"),this._on(!0,i,n)},close:function(t){var i,n=this,s=e(t?t.currentTarget:this.element),o=this._find(s);return o?(i=o.tooltip,void(o.closing||(clearInterval(this.delayedShow),s.data("ui-tooltip-title")&&!s.attr("title")&&s.attr("title",s.data("ui-tooltip-title")),this._removeDescribedBy(s),o.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){n._removeTooltip(e(this))}),s.removeData("ui-tooltip-open"),this._off(s,"mouseleave focusout keyup"),s[0]!==this.element[0]&&this._off(s,"remove"),this._off(this.document,"mousemove"),t&&"mouseleave"===t.type&&e.each(this.parents,function(t,i){e(i.element).attr("title",i.title),delete n.parents[t]}),o.closing=!0,this._trigger("close",t,{tooltip:i}),o.hiding||(o.closing=!1)))):void s.removeData("ui-tooltip-open")},_tooltip:function(t){var i=e("<div>").attr("role","tooltip").addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||"")),n=i.uniqueId().attr("id");return e("<div>").addClass("ui-tooltip-content").appendTo(i),i.appendTo(this.document[0].body),this.tooltips[n]={element:t,tooltip:i}},_find:function(e){var t=e.data("ui-tooltip-id");return t?this.tooltips[t]:null},_removeTooltip:function(e){e.remove(),delete this.tooltips[e.attr("id")]},_destroy:function(){var t=this;e.each(this.tooltips,function(i,n){var s=e.Event("blur"),o=n.element;s.target=s.currentTarget=o[0],t.close(s,!0),e("#"+i).remove(),o.data("ui-tooltip-title")&&(o.attr("title")||o.attr("title",o.data("ui-tooltip-title")),o.removeData("ui-tooltip-title"))}),this.liveRegion.remove()}})}),function(e,t,i,n){"use strict";var s=i("html"),o=i(e),r=i(t),a=i.fancybox=function(){a.open.apply(this,arguments)},l=navigator.userAgent.match(/msie/i),c=null,u=t.createTouch!==n,h=function(e){return e&&e.hasOwnProperty&&e instanceof i},d=function(e){return e&&"string"===i.type(e)},p=function(e){return d(e)&&e.indexOf("%")>0},f=function(e){return e&&!(e.style.overflow&&"hidden"===e.style.overflow)&&(e.clientWidth&&e.scrollWidth>e.clientWidth||e.clientHeight&&e.scrollHeight>e.clientHeight)},g=function(e,t){var i=parseInt(e,10)||0;return t&&p(e)&&(i=a.getViewport()[t]/100*i),Math.ceil(i)},m=function(e,t){return g(e,t)+"px"};i.extend(a,{version:"2.1.5",defaults:{padding:15,margin:20,width:800,height:600,minWidth:100,minHeight:100,maxWidth:9999,maxHeight:9999,pixelRatio:1,autoSize:!0,autoHeight:!1,autoWidth:!1,autoResize:!0,autoCenter:!u,fitToView:!0,aspectRatio:!1,topRatio:.5,leftRatio:.5,scrolling:"auto",wrapCSS:"",arrows:!0,closeBtn:!0,closeClick:!0,nextClick:!1,mouseWheel:!0,autoPlay:!1,playSpeed:3e3,preload:3,modal:!1,loop:!0,ajax:{dataType:"html",headers:{"X-fancyBox":!0}},iframe:{scrolling:"auto",preload:!0},swf:{wmode:"transparent",allowfullscreen:"true",allowscriptaccess:"always"},keys:{next:{13:"left",34:"up",39:"left",40:"up"},prev:{8:"right",33:"down",37:"right",38:"down"},close:[27],play:[32],toggle:[70]},direction:{next:"left",prev:"right"},scrollOutside:!0,index:0,type:null,href:null,content:null,title:null,tpl:{wrap:'<div class="fancybox-wrap" tabIndex="-1"><div class="fancybox-skin"><div class="fancybox-outer"><div class="fancybox-inner"></div></div></div></div>',image:'<img class="fancybox-image" src="{href}" alt="" />',iframe:'<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen'+(l?' allowtransparency="true"':"")+"></iframe>",error:'<p class="fancybox-error">The requested content cannot be loaded.<br/>Please try again later.</p>',closeBtn:'<a title="Close" class="fancybox-item fancybox-close" href="javascript:;"></a>',next:'<a title="Next" class="fancybox-nav fancybox-next" href="javascript:;"><span></span></a>',prev:'<a title="Previous" class="fancybox-nav fancybox-prev" href="javascript:;"><span></span></a>'},openEffect:"fade",openSpeed:250,openEasing:"swing",openOpacity:!0,openMethod:"zoomIn",closeEffect:"fade",closeSpeed:250,closeEasing:"swing",closeOpacity:!0,closeMethod:"zoomOut",nextEffect:"elastic",nextSpeed:250,nextEasing:"swing",nextMethod:"changeIn",prevEffect:"elastic",prevSpeed:250,prevEasing:"swing",prevMethod:"changeOut",helpers:{overlay:!0,title:!0},onCancel:i.noop,beforeLoad:i.noop,afterLoad:i.noop,beforeShow:i.noop,afterShow:i.noop,beforeChange:i.noop,beforeClose:i.noop,afterClose:i.noop},group:{},opts:{},previous:null,coming:null,current:null,isActive:!1,isOpen:!1,isOpened:!1,wrap:null,skin:null,outer:null,inner:null,player:{timer:null,isActive:!1},ajaxLoad:null,imgPreload:null,transitions:{},helpers:{},open:function(e,t){return e&&(i.isPlainObject(t)||(t={}),!1!==a.close(!0))?(i.isArray(e)||(e=h(e)?i(e).get():[e]),i.each(e,function(s,o){var r,l,c,u,p,f,g,m={};"object"===i.type(o)&&(o.nodeType&&(o=i(o)),h(o)?(m={href:o.data("fancybox-href")||o.attr("href"),title:o.data("fancybox-title")||o.attr("title"),isDom:!0,element:o},i.metadata&&i.extend(!0,m,o.metadata())):m=o),r=t.href||m.href||(d(o)?o:null),l=t.title!==n?t.title:m.title||"",c=t.content||m.content,u=c?"html":t.type||m.type,!u&&m.isDom&&(u=o.data("fancybox-type"),u||(p=o.prop("class").match(/fancybox\.(\w+)/),u=p?p[1]:null)),d(r)&&(u||(a.isImage(r)?u="image":a.isSWF(r)?u="swf":"#"===r.charAt(0)?u="inline":d(o)&&(u="html",c=o)),"ajax"===u&&(f=r.split(/\s+/,2),r=f.shift(),g=f.shift())),c||("inline"===u?r?c=i(d(r)?r.replace(/.*(?=#[^\s]+$)/,""):r):m.isDom&&(c=o):"html"===u?c=r:u||r||!m.isDom||(u="inline",c=o)),i.extend(m,{href:r,type:u,content:c,title:l,selector:g}),e[s]=m}),a.opts=i.extend(!0,{},a.defaults,t),t.keys!==n&&(a.opts.keys=t.keys?i.extend({},a.defaults.keys,t.keys):!1),a.group=e,a._start(a.opts.index)):void 0},cancel:function(){var e=a.coming;e&&!1!==a.trigger("onCancel")&&(a.hideLoading(),a.ajaxLoad&&a.ajaxLoad.abort(),a.ajaxLoad=null,a.imgPreload&&(a.imgPreload.onload=a.imgPreload.onerror=null),e.wrap&&e.wrap.stop(!0,!0).trigger("onReset").remove(),a.coming=null,a.current||a._afterZoomOut(e))},close:function(e){a.cancel(),!1!==a.trigger("beforeClose")&&(a.unbindEvents(),a.isActive&&(a.isOpen&&e!==!0?(a.isOpen=a.isOpened=!1,a.isClosing=!0,i(".fancybox-item, .fancybox-nav").remove(),a.wrap.stop(!0,!0).removeClass("fancybox-opened"),a.transitions[a.current.closeMethod]()):(i(".fancybox-wrap").stop(!0).trigger("onReset").remove(),a._afterZoomOut())))},play:function(e){var t=function(){clearTimeout(a.player.timer)},i=function(){t(),a.current&&a.player.isActive&&(a.player.timer=setTimeout(a.next,a.current.playSpeed))},n=function(){t(),r.unbind(".player"),a.player.isActive=!1,a.trigger("onPlayEnd")},s=function(){a.current&&(a.current.loop||a.current.index<a.group.length-1)&&(a.player.isActive=!0,r.bind({"onCancel.player beforeClose.player":n,"onUpdate.player":i,"beforeLoad.player":t}),i(),a.trigger("onPlayStart"))};e===!0||!a.player.isActive&&e!==!1?s():n()},next:function(e){var t=a.current;t&&(d(e)||(e=t.direction.next),a.jumpto(t.index+1,e,"next"))},prev:function(e){var t=a.current;t&&(d(e)||(e=t.direction.prev),a.jumpto(t.index-1,e,"prev"))},jumpto:function(e,t,i){var s=a.current;s&&(e=g(e),a.direction=t||s.direction[e>=s.index?"next":"prev"],a.router=i||"jumpto",s.loop&&(0>e&&(e=s.group.length+e%s.group.length),e%=s.group.length),s.group[e]!==n&&(a.cancel(),a._start(e)))},reposition:function(e,t){var n,s=a.current,o=s?s.wrap:null;o&&(n=a._getPosition(t),e&&"scroll"===e.type?(delete n.position,o.stop(!0,!0).animate(n,200)):(o.css(n),s.pos=i.extend({},s.dim,n)))},update:function(e){var t=e&&e.type,i=!t||"orientationchange"===t;i&&(clearTimeout(c),c=null),a.isOpen&&!c&&(c=setTimeout(function(){var n=a.current;n&&!a.isClosing&&(a.wrap.removeClass("fancybox-tmp"),(i||"load"===t||"resize"===t&&n.autoResize)&&a._setDimension(),"scroll"===t&&n.canShrink||a.reposition(e),a.trigger("onUpdate"),c=null)},i&&!u?0:300))},toggle:function(e){a.isOpen&&(a.current.fitToView="boolean"===i.type(e)?e:!a.current.fitToView,u&&(a.wrap.removeAttr("style").addClass("fancybox-tmp"),a.trigger("onUpdate")),a.update())},hideLoading:function(){r.unbind(".loading"),i("#fancybox-loading").remove()},showLoading:function(){var e,t;a.hideLoading(),e=i('<div id="fancybox-loading"><div></div></div>').click(a.cancel).appendTo("body"),r.bind("keydown.loading",function(e){27===(e.which||e.keyCode)&&(e.preventDefault(),a.cancel())}),a.defaults.fixed||(t=a.getViewport(),e.css({position:"absolute",top:.5*t.h+t.y,left:.5*t.w+t.x}))},getViewport:function(){var t=a.current&&a.current.locked||!1,i={x:o.scrollLeft(),y:o.scrollTop()};return t?(i.w=t[0].clientWidth,i.h=t[0].clientHeight):(i.w=u&&e.innerWidth?e.innerWidth:o.width(),i.h=u&&e.innerHeight?e.innerHeight:o.height()),i},unbindEvents:function(){a.wrap&&h(a.wrap)&&a.wrap.unbind(".fb"),r.unbind(".fb"),o.unbind(".fb")},bindEvents:function(){var e,t=a.current;t&&(o.bind("orientationchange.fb"+(u?"":" resize.fb")+(t.autoCenter&&!t.locked?" scroll.fb":""),a.update),e=t.keys,e&&r.bind("keydown.fb",function(s){var o=s.which||s.keyCode,r=s.target||s.srcElement;return 27===o&&a.coming?!1:void(s.ctrlKey||s.altKey||s.shiftKey||s.metaKey||r&&(r.type||i(r).is("[contenteditable]"))||i.each(e,function(e,r){return t.group.length>1&&r[o]!==n?(a[e](r[o]),s.preventDefault(),!1):i.inArray(o,r)>-1?(a[e](),s.preventDefault(),!1):void 0}))}),i.fn.mousewheel&&t.mouseWheel&&a.wrap.bind("mousewheel.fb",function(e,n,s,o){for(var r=e.target||null,l=i(r),c=!1;l.length&&!(c||l.is(".fancybox-skin")||l.is(".fancybox-wrap"));)c=f(l[0]),l=i(l).parent();0===n||c||a.group.length>1&&!t.canShrink&&(o>0||s>0?a.prev(o>0?"down":"left"):(0>o||0>s)&&a.next(0>o?"up":"right"),e.preventDefault())}))},trigger:function(e,t){var n,s=t||a.coming||a.current;if(s){if(i.isFunction(s[e])&&(n=s[e].apply(s,Array.prototype.slice.call(arguments,1))),n===!1)return!1;s.helpers&&i.each(s.helpers,function(t,n){n&&a.helpers[t]&&i.isFunction(a.helpers[t][e])&&a.helpers[t][e](i.extend(!0,{},a.helpers[t].defaults,n),s)}),r.trigger(e)}},isImage:function(e){return d(e)&&e.match(/(^data:image\/.*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg)((\?|#).*)?$)/i)},isSWF:function(e){return d(e)&&e.match(/\.(swf)((\?|#).*)?$/i)},_start:function(e){var t,n,s,o,r,l={};if(e=g(e),t=a.group[e]||null,!t)return!1;if(l=i.extend(!0,{},a.opts,t),o=l.margin,r=l.padding,"number"===i.type(o)&&(l.margin=[o,o,o,o]),"number"===i.type(r)&&(l.padding=[r,r,r,r]),l.modal&&i.extend(!0,l,{closeBtn:!1,closeClick:!1,nextClick:!1,arrows:!1,mouseWheel:!1,keys:null,helpers:{overlay:{closeClick:!1}}}),l.autoSize&&(l.autoWidth=l.autoHeight=!0),"auto"===l.width&&(l.autoWidth=!0),"auto"===l.height&&(l.autoHeight=!0),l.group=a.group,l.index=e,a.coming=l,!1===a.trigger("beforeLoad"))return void(a.coming=null);if(s=l.type,n=l.href,!s)return a.coming=null,a.current&&a.router&&"jumpto"!==a.router?(a.current.index=e,a[a.router](a.direction)):!1;if(a.isActive=!0,"image"!==s&&"swf"!==s||(l.autoHeight=l.autoWidth=!1,l.scrolling="visible"),"image"===s&&(l.aspectRatio=!0),"iframe"===s&&u&&(l.scrolling="scroll"),l.wrap=i(l.tpl.wrap).addClass("fancybox-"+(u?"mobile":"desktop")+" fancybox-type-"+s+" fancybox-tmp "+l.wrapCSS).appendTo(l.parent||"body"),i.extend(l,{skin:i(".fancybox-skin",l.wrap),outer:i(".fancybox-outer",l.wrap),inner:i(".fancybox-inner",l.wrap)}),i.each(["Top","Right","Bottom","Left"],function(e,t){l.skin.css("padding"+t,m(l.padding[e]))}),a.trigger("onReady"),"inline"===s||"html"===s){if(!l.content||!l.content.length)return a._error("content")}else if(!n)return a._error("href");"image"===s?a._loadImage():"ajax"===s?a._loadAjax():"iframe"===s?a._loadIframe():a._afterLoad()},_error:function(e){i.extend(a.coming,{type:"html",autoWidth:!0,autoHeight:!0,minWidth:0,minHeight:0,scrolling:"no",hasError:e,content:a.coming.tpl.error}),a._afterLoad()},_loadImage:function(){var e=a.imgPreload=new Image;e.onload=function(){this.onload=this.onerror=null,a.coming.width=this.width/a.opts.pixelRatio,a.coming.height=this.height/a.opts.pixelRatio,a._afterLoad()},e.onerror=function(){this.onload=this.onerror=null,a._error("image")},e.src=a.coming.href,e.complete!==!0&&a.showLoading()},_loadAjax:function(){var e=a.coming;a.showLoading(),a.ajaxLoad=i.ajax(i.extend({},e.ajax,{url:e.href,error:function(e,t){a.coming&&"abort"!==t?a._error("ajax",e):a.hideLoading()},success:function(t,i){"success"===i&&(e.content=t,a._afterLoad())}}))},_loadIframe:function(){var e=a.coming,t=i(e.tpl.iframe.replace(/\{rnd\}/g,(new Date).getTime())).attr("scrolling",u?"auto":e.iframe.scrolling).attr("src",e.href);i(e.wrap).bind("onReset",function(){try{i(this).find("iframe").hide().attr("src","//about:blank").end().empty()}catch(e){}}),e.iframe.preload&&(a.showLoading(),t.one("load",function(){i(this).data("ready",1),u||i(this).bind("load.fb",a.update),i(this).parents(".fancybox-wrap").width("100%").removeClass("fancybox-tmp").show(),a._afterLoad()})),e.content=t.appendTo(e.inner),e.iframe.preload||a._afterLoad()},_preloadImages:function(){var e,t,i=a.group,n=a.current,s=i.length,o=n.preload?Math.min(n.preload,s-1):0;for(t=1;o>=t;t+=1)e=i[(n.index+t)%s],"image"===e.type&&e.href&&((new Image).src=e.href)},_afterLoad:function(){var e,t,n,s,o,r,l=a.coming,c=a.current,u="fancybox-placeholder";if(a.hideLoading(),l&&a.isActive!==!1){if(!1===a.trigger("afterLoad",l,c))return l.wrap.stop(!0).trigger("onReset").remove(),void(a.coming=null);switch(c&&(a.trigger("beforeChange",c),c.wrap.stop(!0).removeClass("fancybox-opened").find(".fancybox-item, .fancybox-nav").remove()),a.unbindEvents(),
e=l,t=l.content,n=l.type,s=l.scrolling,i.extend(a,{wrap:e.wrap,skin:e.skin,outer:e.outer,inner:e.inner,current:e,previous:c}),o=e.href,n){case"inline":case"ajax":case"html":e.selector?t=i("<div>").html(t).find(e.selector):h(t)&&(t.data(u)||t.data(u,i('<div class="'+u+'"></div>').insertAfter(t).hide()),t=t.show().detach(),e.wrap.bind("onReset",function(){i(this).find(t).length&&t.hide().replaceAll(t.data(u)).data(u,!1)}));break;case"image":t=e.tpl.image.replace("{href}",o);break;case"swf":t='<object id="fancybox-swf" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%"><param name="movie" value="'+o+'"></param>',r="",i.each(e.swf,function(e,i){t+='<param name="'+e+'" value="'+i+'"></param>',r+=" "+e+'="'+i+'"'}),t+='<embed src="'+o+'" type="application/x-shockwave-flash" width="100%" height="100%"'+r+"></embed></object>"}h(t)&&t.parent().is(e.inner)||e.inner.append(t),a.trigger("beforeShow"),e.inner.css("overflow","yes"===s?"scroll":"no"===s?"hidden":s),a._setDimension(),a.reposition(),a.isOpen=!1,a.coming=null,a.bindEvents(),a.isOpened?c.prevMethod&&a.transitions[c.prevMethod]():i(".fancybox-wrap").not(e.wrap).stop(!0).trigger("onReset").remove(),a.transitions[a.isOpened?e.nextMethod:e.openMethod](),a._preloadImages()}},_setDimension:function(){var e,t,n,s,o,r,l,c,u,h,d,f,v,y,w,b=a.getViewport(),_=0,x=!1,k=!1,C=a.wrap,j=a.skin,E=a.inner,T=a.current,A=T.width,P=T.height,I=T.minWidth,D=T.minHeight,L=T.maxWidth,M=T.maxHeight,S=T.scrolling,R=T.scrollOutside?T.scrollbarWidth:0,O=T.margin,N=g(O[1]+O[3]),W=g(O[0]+O[2]);if(C.add(j).add(E).width("auto").height("auto").removeClass("fancybox-tmp"),e=g(j.outerWidth(!0)-j.width()),t=g(j.outerHeight(!0)-j.height()),n=N+e,s=W+t,o=p(A)?(b.w-n)*g(A)/100:A,r=p(P)?(b.h-s)*g(P)/100:P,"iframe"===T.type){if(y=T.content,T.autoHeight&&1===y.data("ready"))try{y[0].contentWindow.document.location&&(E.width(o).height(9999),w=y.contents().find("body"),R&&w.css("overflow-x","hidden"),r=w.outerHeight(!0))}catch(F){}}else(T.autoWidth||T.autoHeight)&&(E.addClass("fancybox-tmp"),T.autoWidth||E.width(o),T.autoHeight||E.height(r),T.autoWidth&&(o=E.width()),T.autoHeight&&(r=E.height()),E.removeClass("fancybox-tmp"));if(A=g(o),P=g(r),u=o/r,I=g(p(I)?g(I,"w")-n:I),L=g(p(L)?g(L,"w")-n:L),D=g(p(D)?g(D,"h")-s:D),M=g(p(M)?g(M,"h")-s:M),l=L,c=M,T.fitToView&&(L=Math.min(b.w-n,L),M=Math.min(b.h-s,M)),f=b.w-N,v=b.h-W,T.aspectRatio?(A>L&&(A=L,P=g(A/u)),P>M&&(P=M,A=g(P*u)),I>A&&(A=I,P=g(A/u)),D>P&&(P=D,A=g(P*u))):(A=Math.max(I,Math.min(A,L)),T.autoHeight&&"iframe"!==T.type&&(E.width(A),P=E.height()),P=Math.max(D,Math.min(P,M))),T.fitToView)if(E.width(A).height(P),C.width(A+e),h=C.width(),d=C.height(),T.aspectRatio)for(;(h>f||d>v)&&A>I&&P>D&&!(_++>19);)P=Math.max(D,Math.min(M,P-10)),A=g(P*u),I>A&&(A=I,P=g(A/u)),A>L&&(A=L,P=g(A/u)),E.width(A).height(P),C.width(A+e),h=C.width(),d=C.height();else A=Math.max(I,Math.min(A,A-(h-f))),P=Math.max(D,Math.min(P,P-(d-v)));R&&"auto"===S&&r>P&&f>A+e+R&&(A+=R),E.width(A).height(P),C.width(A+e),h=C.width(),d=C.height(),x=(h>f||d>v)&&A>I&&P>D,k=T.aspectRatio?l>A&&c>P&&o>A&&r>P:(l>A||c>P)&&(o>A||r>P),i.extend(T,{dim:{width:m(h),height:m(d)},origWidth:o,origHeight:r,canShrink:x,canExpand:k,wPadding:e,hPadding:t,wrapSpace:d-j.outerHeight(!0),skinSpace:j.height()-P}),!y&&T.autoHeight&&P>D&&M>P&&!k&&E.height("auto")},_getPosition:function(e){var t=a.current,i=a.getViewport(),n=t.margin,s=a.wrap.width()+n[1]+n[3],o=a.wrap.height()+n[0]+n[2],r={position:"absolute",top:n[0],left:n[3]};return t.autoCenter&&t.fixed&&!e&&o<=i.h&&s<=i.w?r.position="fixed":t.locked||(r.top+=i.y,r.left+=i.x),r.top=m(Math.max(r.top,r.top+(i.h-o)*t.topRatio)),r.left=m(Math.max(r.left,r.left+(i.w-s)*t.leftRatio)),r},_afterZoomIn:function(){var e=a.current;e&&(a.isOpen=a.isOpened=!0,a.wrap.css("overflow","visible").addClass("fancybox-opened"),a.update(),(e.closeClick||e.nextClick&&a.group.length>1)&&a.inner.css("cursor","pointer").bind("click.fb",function(t){i(t.target).is("a")||i(t.target).parent().is("a")||(t.preventDefault(),a[e.closeClick?"close":"next"]())}),e.closeBtn&&i(e.tpl.closeBtn).appendTo(a.skin).bind("click.fb",function(e){e.preventDefault(),a.close()}),e.arrows&&a.group.length>1&&((e.loop||e.index>0)&&i(e.tpl.prev).appendTo(a.outer).bind("click.fb",a.prev),(e.loop||e.index<a.group.length-1)&&i(e.tpl.next).appendTo(a.outer).bind("click.fb",a.next)),a.trigger("afterShow"),e.loop||e.index!==e.group.length-1?a.opts.autoPlay&&!a.player.isActive&&(a.opts.autoPlay=!1,a.play()):a.play(!1))},_afterZoomOut:function(e){e=e||a.current,i(".fancybox-wrap").trigger("onReset").remove(),i.extend(a,{group:{},opts:{},router:!1,current:null,isActive:!1,isOpened:!1,isOpen:!1,isClosing:!1,wrap:null,skin:null,outer:null,inner:null}),a.trigger("afterClose",e)}}),a.transitions={getOrigPosition:function(){var e=a.current,t=e.element,i=e.orig,n={},s=50,o=50,r=e.hPadding,l=e.wPadding,c=a.getViewport();return!i&&e.isDom&&t.is(":visible")&&(i=t.find("img:first"),i.length||(i=t)),h(i)?(n=i.offset(),i.is("img")&&(s=i.outerWidth(),o=i.outerHeight())):(n.top=c.y+(c.h-o)*e.topRatio,n.left=c.x+(c.w-s)*e.leftRatio),("fixed"===a.wrap.css("position")||e.locked)&&(n.top-=c.y,n.left-=c.x),n={top:m(n.top-r*e.topRatio),left:m(n.left-l*e.leftRatio),width:m(s+l),height:m(o+r)}},step:function(e,t){var i,n,s,o=t.prop,r=a.current,l=r.wrapSpace,c=r.skinSpace;"width"!==o&&"height"!==o||(i=t.end===t.start?1:(e-t.start)/(t.end-t.start),a.isClosing&&(i=1-i),n="width"===o?r.wPadding:r.hPadding,s=e-n,a.skin[o](g("width"===o?s:s-l*i)),a.inner[o](g("width"===o?s:s-l*i-c*i)))},zoomIn:function(){var e=a.current,t=e.pos,n=e.openEffect,s="elastic"===n,o=i.extend({opacity:1},t);delete o.position,s?(t=this.getOrigPosition(),e.openOpacity&&(t.opacity=.1)):"fade"===n&&(t.opacity=.1),a.wrap.css(t).animate(o,{duration:"none"===n?0:e.openSpeed,easing:e.openEasing,step:s?this.step:null,complete:a._afterZoomIn})},zoomOut:function(){var e=a.current,t=e.closeEffect,i="elastic"===t,n={opacity:.1};i&&(n=this.getOrigPosition(),e.closeOpacity&&(n.opacity=.1)),a.wrap.animate(n,{duration:"none"===t?0:e.closeSpeed,easing:e.closeEasing,step:i?this.step:null,complete:a._afterZoomOut})},changeIn:function(){var e,t=a.current,i=t.nextEffect,n=t.pos,s={opacity:1},o=a.direction,r=200;n.opacity=.1,"elastic"===i&&(e="down"===o||"up"===o?"top":"left","down"===o||"right"===o?(n[e]=m(g(n[e])-r),s[e]="+="+r+"px"):(n[e]=m(g(n[e])+r),s[e]="-="+r+"px")),"none"===i?a._afterZoomIn():a.wrap.css(n).animate(s,{duration:t.nextSpeed,easing:t.nextEasing,complete:a._afterZoomIn})},changeOut:function(){var e=a.previous,t=e.prevEffect,n={opacity:.1},s=a.direction,o=200;"elastic"===t&&(n["down"===s||"up"===s?"top":"left"]=("up"===s||"left"===s?"-":"+")+"="+o+"px"),e.wrap.animate(n,{duration:"none"===t?0:e.prevSpeed,easing:e.prevEasing,complete:function(){i(this).trigger("onReset").remove()}})}},a.helpers.overlay={defaults:{closeClick:!0,speedOut:200,showEarly:!0,css:{},locked:!u,fixed:!0},overlay:null,fixed:!1,el:i("html"),create:function(e){e=i.extend({},this.defaults,e),this.overlay&&this.close(),this.overlay=i('<div class="fancybox-overlay"></div>').appendTo(a.coming?a.coming.parent:e.parent),this.fixed=!1,e.fixed&&a.defaults.fixed&&(this.overlay.addClass("fancybox-overlay-fixed"),this.fixed=!0)},open:function(e){var t=this;e=i.extend({},this.defaults,e),this.overlay?this.overlay.unbind(".overlay").width("auto").height("auto"):this.create(e),this.fixed||(o.bind("resize.overlay",i.proxy(this.update,this)),this.update()),e.closeClick&&this.overlay.bind("click.overlay",function(e){return i(e.target).hasClass("fancybox-overlay")?(a.isActive?a.close():t.close(),!1):void 0}),this.overlay.css(e.css).show()},close:function(){var e,t;o.unbind("resize.overlay"),this.el.hasClass("fancybox-lock")&&(i(".fancybox-margin").removeClass("fancybox-margin"),e=o.scrollTop(),t=o.scrollLeft(),this.el.removeClass("fancybox-lock"),o.scrollTop(e).scrollLeft(t)),i(".fancybox-overlay").remove().hide(),i.extend(this,{overlay:null,fixed:!1})},update:function(){var e,i="100%";this.overlay.width(i).height("100%"),l?(e=Math.max(t.documentElement.offsetWidth,t.body.offsetWidth),r.width()>e&&(i=r.width())):r.width()>o.width()&&(i=r.width()),this.overlay.width(i).height(r.height())},onReady:function(e,t){var n=this.overlay;i(".fancybox-overlay").stop(!0,!0),n||this.create(e),e.locked&&this.fixed&&t.fixed&&(n||(this.margin=r.height()>o.height()?i("html").css("margin-right").replace("px",""):!1),t.locked=this.overlay.append(t.wrap),t.fixed=!1),e.showEarly===!0&&this.beforeShow.apply(this,arguments)},beforeShow:function(e,t){var n,s;t.locked&&(this.margin!==!1&&(i("*").filter(function(){return"fixed"===i(this).css("position")&&!i(this).hasClass("fancybox-overlay")&&!i(this).hasClass("fancybox-wrap")}).addClass("fancybox-margin"),this.el.addClass("fancybox-margin")),n=o.scrollTop(),s=o.scrollLeft(),this.el.addClass("fancybox-lock"),o.scrollTop(n).scrollLeft(s)),this.open(e)},onUpdate:function(){this.fixed||this.update()},afterClose:function(e){this.overlay&&!a.coming&&this.overlay.fadeOut(e.speedOut,i.proxy(this.close,this))}},a.helpers.title={defaults:{type:"float",position:"bottom"},beforeShow:function(e){var t,n,s=a.current,o=s.title,r=e.type;if(i.isFunction(o)&&(o=o.call(s.element,s)),d(o)&&""!==i.trim(o)){switch(t=i('<div class="fancybox-title fancybox-title-'+r+'-wrap">'+o+"</div>"),r){case"inside":n=a.skin;break;case"outside":n=a.wrap;break;case"over":n=a.inner;break;default:n=a.skin,t.appendTo("body"),l&&t.width(t.width()),t.wrapInner('<span class="child"></span>'),a.current.margin[2]+=Math.abs(g(t.css("margin-bottom")))}t["top"===e.position?"prependTo":"appendTo"](n)}}},i.fn.fancybox=function(e){var t,n=i(this),s=this.selector||"",o=function(o){var r,l,c=i(this).blur(),u=t;o.ctrlKey||o.altKey||o.shiftKey||o.metaKey||c.is(".fancybox-wrap")||(r=e.groupAttr||"data-fancybox-group",l=c.attr(r),l||(r="rel",l=c.get(0)[r]),l&&""!==l&&"nofollow"!==l&&(c=s.length?i(s):n,c=c.filter("["+r+'="'+l+'"]'),u=c.index(this)),e.index=u,a.open(c,e)!==!1&&o.preventDefault())};return e=e||{},t=e.index||0,s&&e.live!==!1?r.undelegate(s,"click.fb-start").delegate(s+":not('.fancybox-item, .fancybox-nav')","click.fb-start",o):n.unbind("click.fb-start").bind("click.fb-start",o),this.filter("[data-fancybox-start=1]").trigger("click"),this},r.ready(function(){var t,o;i.scrollbarWidth===n&&(i.scrollbarWidth=function(){var e=i('<div style="width:50px;height:50px;overflow:auto"><div/></div>').appendTo("body"),t=e.children(),n=t.innerWidth()-t.height(99).innerWidth();return e.remove(),n}),i.support.fixedPosition===n&&(i.support.fixedPosition=function(){var e=i('<div style="position:fixed;top:20px;"></div>').appendTo("body"),t=20===e[0].offsetTop||15===e[0].offsetTop;return e.remove(),t}()),i.extend(a.defaults,{scrollbarWidth:i.scrollbarWidth(),fixed:i.support.fixedPosition,parent:i("body")}),t=i(e).width(),s.addClass("fancybox-lock-test"),o=i(e).width(),s.removeClass("fancybox-lock-test"),i("<style type='text/css'>.fancybox-margin{margin-right:"+(o-t)+"px;}</style>").appendTo("head")})}(window,document,jQuery),!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.jwplayer=t():e.jwplayer=t()}(this,function(){return function(e){function t(i){if(n[i])return n[i].exports;var s=n[i]={exports:{},id:i,loaded:!1};return e[i].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var i=window.webpackJsonpjwplayer;window.webpackJsonpjwplayer=function(n,o){for(var r,a,l=0,c=[];l<n.length;l++)a=n[l],s[a]&&c.push.apply(c,s[a]),s[a]=0;for(r in o)e[r]=o[r];for(i&&i(n,o);c.length;)c.shift().call(null,t)};var n={},s={2:0};return t.e=function(e,i){if(0===s[e])return i.call(null,t);if(void 0!==s[e])s[e].push(i);else{s[e]=[i];var n=document.getElementsByTagName("head")[0],o=document.createElement("script");o.type="text/javascript",o.charset="utf-8",o.async=!0,o.src=t.p+""+({0:"provider.youtube",1:"provider.caterpillar",3:"provider.shaka",4:"provider.cast",5:"polyfills.promise",6:"polyfills.base64"}[e]||e)+".js",n.appendChild(o)}},t.m=e,t.c=n,t.p="",t(0)}([function(e,t,i){e.exports=i(313)},function(e,t,i){var n,s;n=[],s=function(){var e={},t=Array.prototype,i=Object.prototype,n=Function.prototype,s=t.slice,o=t.concat,r=i.toString,a=i.hasOwnProperty,l=t.map,c=t.reduce,u=t.forEach,h=t.filter,d=t.every,p=t.some,f=t.indexOf,g=Array.isArray,m=Object.keys,v=n.bind,y=function(e){return e instanceof y?e:this instanceof y?void 0:new y(e)},w=y.each=y.forEach=function(t,i,n){if(null==t)return t;if(u&&t.forEach===u)t.forEach(i,n);else if(t.length===+t.length){for(var s=0,o=t.length;o>s;s++)if(i.call(n,t[s],s,t)===e)return}else for(var r=y.keys(t),s=0,o=r.length;o>s;s++)if(i.call(n,t[r[s]],r[s],t)===e)return;return t};y.map=y.collect=function(e,t,i){var n=[];return null==e?n:l&&e.map===l?e.map(t,i):(w(e,function(e,s,o){n.push(t.call(i,e,s,o))}),n)};var b="Reduce of empty array with no initial value";y.reduce=y.foldl=y.inject=function(e,t,i,n){var s=arguments.length>2;if(null==e&&(e=[]),c&&e.reduce===c)return n&&(t=y.bind(t,n)),s?e.reduce(t,i):e.reduce(t);if(w(e,function(e,o,r){s?i=t.call(n,i,e,o,r):(i=e,s=!0)}),!s)throw new TypeError(b);return i},y.find=y.detect=function(e,t,i){var n;return _(e,function(e,s,o){return t.call(i,e,s,o)?(n=e,!0):void 0}),n},y.filter=y.select=function(e,t,i){var n=[];return null==e?n:h&&e.filter===h?e.filter(t,i):(w(e,function(e,s,o){t.call(i,e,s,o)&&n.push(e)}),n)},y.reject=function(e,t,i){return y.filter(e,function(e,n,s){return!t.call(i,e,n,s)},i)},y.compact=function(e){return y.filter(e,y.identity)},y.every=y.all=function(t,i,n){i||(i=y.identity);var s=!0;return null==t?s:d&&t.every===d?t.every(i,n):(w(t,function(t,o,r){return(s=s&&i.call(n,t,o,r))?void 0:e}),!!s)};var _=y.some=y.any=function(t,i,n){i||(i=y.identity);var s=!1;return null==t?s:p&&t.some===p?t.some(i,n):(w(t,function(t,o,r){return s||(s=i.call(n,t,o,r))?e:void 0}),!!s)};y.size=function(e){return null==e?0:e.length===+e.length?e.length:y.keys(e).length},y.last=function(e,t,i){return null!=e?null==t||i?e[e.length-1]:s.call(e,Math.max(e.length-t,0)):void 0},y.after=function(e,t){return function(){return--e<1?t.apply(this,arguments):void 0}},y.before=function(e,t){var i;return function(){return--e>0&&(i=t.apply(this,arguments)),1>=e&&(t=null),i}};var x=function(e){return null==e?y.identity:y.isFunction(e)?e:y.property(e)},k=function(e){return function(t,i,n){var s={};return i=x(i),w(t,function(o,r){var a=i.call(n,o,r,t);e(s,a,o)}),s}};y.groupBy=k(function(e,t,i){y.has(e,t)?e[t].push(i):e[t]=[i]}),y.indexBy=k(function(e,t,i){e[t]=i}),y.sortedIndex=function(e,t,i,n){i=x(i);for(var s=i.call(n,t),o=0,r=e.length;r>o;){var a=o+r>>>1;i.call(n,e[a])<s?o=a+1:r=a}return o};var _=y.some=y.any=function(t,i,n){i||(i=y.identity);var s=!1;return null==t?s:p&&t.some===p?t.some(i,n):(w(t,function(t,o,r){return s||(s=i.call(n,t,o,r))?e:void 0}),!!s)};y.contains=y.include=function(e,t){return null==e?!1:(e.length!==+e.length&&(e=y.values(e)),y.indexOf(e,t)>=0)},y.pluck=function(e,t){return y.map(e,y.property(t))},y.where=function(e,t){return y.filter(e,y.matches(t))},y.findWhere=function(e,t){return y.find(e,y.matches(t))},y.max=function(e,t,i){if(!t&&y.isArray(e)&&e[0]===+e[0]&&e.length<65535)return Math.max.apply(Math,e);var n=-(1/0),s=-(1/0);return w(e,function(e,o,r){var a=t?t.call(i,e,o,r):e;a>s&&(n=e,s=a)}),n},y.difference=function(e){var i=o.apply(t,s.call(arguments,1));return y.filter(e,function(e){return!y.contains(i,e)})},y.without=function(e){return y.difference(e,s.call(arguments,1))},y.indexOf=function(e,t,i){if(null==e)return-1;var n=0,s=e.length;if(i){if("number"!=typeof i)return n=y.sortedIndex(e,t),e[n]===t?n:-1;n=0>i?Math.max(0,s+i):i}if(f&&e.indexOf===f)return e.indexOf(t,i);for(;s>n;n++)if(e[n]===t)return n;return-1};var C=function(){};y.bind=function(e,t){var i,n;if(v&&e.bind===v)return v.apply(e,s.call(arguments,1));if(!y.isFunction(e))throw new TypeError;return i=s.call(arguments,2),n=function(){if(!(this instanceof n))return e.apply(t,i.concat(s.call(arguments)));C.prototype=e.prototype;var o=new C;C.prototype=null;var r=e.apply(o,i.concat(s.call(arguments)));return Object(r)===r?r:o}},y.partial=function(e){var t=s.call(arguments,1);return function(){for(var i=0,n=t.slice(),s=0,o=n.length;o>s;s++)n[s]===y&&(n[s]=arguments[i++]);for(;i<arguments.length;)n.push(arguments[i++]);return e.apply(this,n)}},y.once=y.partial(y.before,2),y.memoize=function(e,t){var i={};return t||(t=y.identity),function(){var n=t.apply(this,arguments);return y.has(i,n)?i[n]:i[n]=e.apply(this,arguments)}},y.delay=function(e,t){var i=s.call(arguments,2);return setTimeout(function(){return e.apply(null,i)},t)},y.defer=function(e){return y.delay.apply(y,[e,1].concat(s.call(arguments,1)))},y.throttle=function(e,t,i){var n,s,o,r=null,a=0;i||(i={});var l=function(){a=i.leading===!1?0:y.now(),r=null,o=e.apply(n,s),n=s=null};return function(){var c=y.now();a||i.leading!==!1||(a=c);var u=t-(c-a);return n=this,s=arguments,0>=u?(clearTimeout(r),r=null,a=c,o=e.apply(n,s),n=s=null):r||i.trailing===!1||(r=setTimeout(l,u)),o}},y.keys=function(e){if(!y.isObject(e))return[];if(m)return m(e);var t=[];for(var i in e)y.has(e,i)&&t.push(i);return t},y.invert=function(e){for(var t={},i=y.keys(e),n=0,s=i.length;s>n;n++)t[e[i[n]]]=i[n];return t},y.defaults=function(e){return w(s.call(arguments,1),function(t){if(t)for(var i in t)void 0===e[i]&&(e[i]=t[i])}),e},y.extend=function(e){return w(s.call(arguments,1),function(t){if(t)for(var i in t)e[i]=t[i]}),e},y.pick=function(e){var i={},n=o.apply(t,s.call(arguments,1));return w(n,function(t){t in e&&(i[t]=e[t])}),i},y.omit=function(e){var i={},n=o.apply(t,s.call(arguments,1));for(var r in e)y.contains(n,r)||(i[r]=e[r]);return i},y.clone=function(e){return y.isObject(e)?y.isArray(e)?e.slice():y.extend({},e):e},y.isArray=g||function(e){return"[object Array]"==r.call(e)},y.isObject=function(e){return e===Object(e)},w(["Arguments","Function","String","Number","Date","RegExp"],function(e){y["is"+e]=function(t){return r.call(t)=="[object "+e+"]"}}),y.isArguments(arguments)||(y.isArguments=function(e){return!(!e||!y.has(e,"callee"))}),y.isFunction=function(e){return"function"==typeof e},y.isFinite=function(e){return isFinite(e)&&!isNaN(parseFloat(e))},y.isNaN=function(e){return y.isNumber(e)&&e!=+e},y.isBoolean=function(e){return e===!0||e===!1||"[object Boolean]"==r.call(e)},y.isNull=function(e){return null===e},y.isUndefined=function(e){return void 0===e},y.has=function(e,t){return a.call(e,t)},y.identity=function(e){return e},y.constant=function(e){return function(){return e}},y.property=function(e){return function(t){return t[e]}},y.propertyOf=function(e){return null==e?function(){}:function(t){return e[t]}},y.matches=function(e){return function(t){if(t===e)return!0;for(var i in e)if(e[i]!==t[i])return!1;return!0}},y.now=Date.now||function(){return(new Date).getTime()},y.result=function(e,t){if(null!=e){var i=e[t];return y.isFunction(i)?i.call(e):i}};var j=0;return y.uniqueId=function(e){var t=++j+"";return e?e+t:t},y}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(14),i(1),i(123),i(124),i(45),i(85),i(58),i(277),i(86),i(126),i(128)],s=function(e,t,i,n,s,o,r,a,l,c,u){var h={};return h.log=function(){window.console&&("object"==typeof console.log?console.log(Array.prototype.slice.call(arguments,0)):console.log.apply(console,arguments))},h.between=function(e,t,i){return Math.max(Math.min(e,i),t)},h.foreach=function(e,t){var i,n;for(i in e)"function"===h.typeOf(e.hasOwnProperty)?e.hasOwnProperty(i)&&(n=e[i],t(i,n)):(n=e[i],t(i,n))},h.indexOf=t.indexOf,h.noop=function(){},h.seconds=e.seconds,h.prefix=e.prefix,h.suffix=e.suffix,t.extend(h,o,r,l,i,a,n,s,c,u),h}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1)],s=function(e){var t=[],i=t.slice,n={on:function(e,t,i){if(!o(this,"on",e,[t,i])||!t)return this;this._events||(this._events={});var n=this._events[e]||(this._events[e]=[]);return n.push({callback:t,context:i}),this},once:function(t,i,n){if(!o(this,"once",t,[i,n])||!i)return this;var s=this,r=e.once(function(){s.off(t,r),i.apply(this,arguments)});return r._callback=i,this.on(t,r,n)},off:function(t,i,n){var s,r,a,l,c,u,h,d;if(!this._events||!o(this,"off",t,[i,n]))return this;if(!t&&!i&&!n)return this._events=void 0,this;for(l=t?[t]:e.keys(this._events),c=0,u=l.length;u>c;c++)if(t=l[c],a=this._events[t]){if(this._events[t]=s=[],i||n)for(h=0,d=a.length;d>h;h++)r=a[h],(i&&i!==r.callback&&i!==r.callback._callback||n&&n!==r.context)&&s.push(r);s.length||delete this._events[t]}return this},trigger:function(e){if(!this._events)return this;var t=i.call(arguments,1);if(!o(this,"trigger",e,t))return this;var n=this._events[e],s=this._events.all;return n&&r(n,t,this),s&&r(s,arguments,this),this},triggerSafe:function(e){if(!this._events)return this;var t=i.call(arguments,1);if(!o(this,"trigger",e,t))return this;var n=this._events[e],s=this._events.all;return n&&a(n,t,this),s&&a(s,arguments,this),this}},s=/\s+/,o=function(e,t,i,n){if(!i)return!0;if("object"==typeof i){for(var o in i)e[t].apply(e,[o,i[o]].concat(n));return!1}if(s.test(i)){for(var r=i.split(s),a=0,l=r.length;l>a;a++)e[t].apply(e,[r[a]].concat(n));return!1}return!0},r=function(e,t,i){var n,s=-1,o=e.length,r=t[0],a=t[1],l=t[2];switch(t.length){case 0:for(;++s<o;)(n=e[s]).callback.call(n.context||i);return;case 1:for(;++s<o;)(n=e[s]).callback.call(n.context||i,r);return;case 2:for(;++s<o;)(n=e[s]).callback.call(n.context||i,r,a);return;case 3:for(;++s<o;)(n=e[s]).callback.call(n.context||i,r,a,l);return;default:for(;++s<o;)(n=e[s]).callback.apply(n.context||i,t);return}},a=function(e,t,i){for(var n,s=-1,o=e.length;++s<o;)try{(n=e[s]).callback.apply(n.context||i,t)}catch(r){}};return n}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){var e={DRAG:"drag",DRAG_START:"dragStart",DRAG_END:"dragEnd",CLICK:"click",DOUBLE_CLICK:"doubleClick",TAP:"tap",DOUBLE_TAP:"doubleTap",OVER:"over",MOVE:"move",OUT:"out"},t={COMPLETE:"complete",ERROR:"error",JWPLAYER_AD_CLICK:"adClick",JWPLAYER_AD_COMPANIONS:"adCompanions",JWPLAYER_AD_COMPLETE:"adComplete",JWPLAYER_AD_ERROR:"adError",JWPLAYER_AD_IMPRESSION:"adImpression",JWPLAYER_AD_META:"adMeta",JWPLAYER_AD_PAUSE:"adPause",JWPLAYER_AD_PLAY:"adPlay",JWPLAYER_AD_SKIPPED:"adSkipped",JWPLAYER_AD_TIME:"adTime",JWPLAYER_CAST_AD_CHANGED:"castAdChanged",JWPLAYER_MEDIA_COMPLETE:"complete",JWPLAYER_READY:"ready",JWPLAYER_MEDIA_SEEK:"seek",JWPLAYER_MEDIA_BEFOREPLAY:"beforePlay",JWPLAYER_MEDIA_BEFORECOMPLETE:"beforeComplete",JWPLAYER_MEDIA_BUFFER_FULL:"bufferFull",JWPLAYER_DISPLAY_CLICK:"displayClick",JWPLAYER_PLAYLIST_COMPLETE:"playlistComplete",JWPLAYER_CAST_SESSION:"cast",JWPLAYER_MEDIA_ERROR:"mediaError",JWPLAYER_MEDIA_FIRST_FRAME:"firstFrame",JWPLAYER_MEDIA_PLAY_ATTEMPT:"playAttempt",JWPLAYER_MEDIA_LOADED:"loaded",JWPLAYER_MEDIA_SEEKED:"seeked",JWPLAYER_SETUP_ERROR:"setupError",JWPLAYER_ERROR:"error",JWPLAYER_PLAYER_STATE:"state",JWPLAYER_CAST_AVAILABLE:"castAvailable",JWPLAYER_MEDIA_BUFFER:"bufferChange",JWPLAYER_MEDIA_TIME:"time",JWPLAYER_MEDIA_TYPE:"mediaType",JWPLAYER_MEDIA_VOLUME:"volume",JWPLAYER_MEDIA_MUTE:"mute",JWPLAYER_MEDIA_META:"meta",JWPLAYER_MEDIA_LEVELS:"levels",JWPLAYER_MEDIA_LEVEL_CHANGED:"levelsChanged",JWPLAYER_CONTROLS:"controls",JWPLAYER_FULLSCREEN:"fullscreen",JWPLAYER_RESIZE:"resize",JWPLAYER_PLAYLIST_ITEM:"playlistItem",JWPLAYER_PLAYLIST_LOADED:"playlist",JWPLAYER_AUDIO_TRACKS:"audioTracks",JWPLAYER_AUDIO_TRACK_CHANGED:"audioTrackChanged",JWPLAYER_LOGO_CLICK:"logoClick",JWPLAYER_CAPTIONS_LIST:"captionsList",JWPLAYER_CAPTIONS_CHANGED:"captionsChanged",JWPLAYER_PROVIDER_CHANGED:"providerChanged",JWPLAYER_PROVIDER_FIRST_FRAME:"providerFirstFrame",JWPLAYER_USER_ACTION:"userAction",JWPLAYER_PROVIDER_CLICK:"providerClick",JWPLAYER_VIEW_TAB_FOCUS:"tabFocus",JWPLAYER_CONTROLBAR_DRAGGING:"scrubbing",JWPLAYER_INSTREAM_CLICK:"instreamClick"};return t.touchEvents=e,t}.apply(t,n),!(void 0!==s&&(e.exports=s))},,function(e,t,i){var n,s;n=[],s=function(){return{BUFFERING:"buffering",IDLE:"idle",COMPLETE:"complete",PAUSED:"paused",PLAYING:"playing",ERROR:"error",LOADING:"loading",STALLED:"stalled"}}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,,function(e,t,i){var n,s;n=[i(3),i(4),i(1),i(2)],s=function(e,t,i,n){function s(e,t){return/touch/.test(e.type)?(e.originalEvent||e).changedTouches[0]["page"+t]:e["page"+t]}function o(e){var t=e||window.event;return e instanceof MouseEvent?"which"in t?3===t.which:"button"in t?2===t.button:!1:!1}function r(e,t,i){var n;return n=t instanceof MouseEvent||!t.touches&&!t.changedTouches?t:t.touches&&t.touches.length?t.touches[0]:t.changedTouches[0],{type:e,target:t.target,currentTarget:i,pageX:n.pageX,pageY:n.pageY}}function a(e){(e instanceof MouseEvent||e instanceof window.TouchEvent)&&(e.preventManipulation&&e.preventManipulation(),e.cancelable&&e.preventDefault&&e.preventDefault())}var l=!i.isUndefined(window.PointerEvent),c=!l&&n.isMobile(),u=!l&&!c,h=n.isFF()&&n.isOSX(),d=function(e,n){function c(e){(u||l&&"touch"!==e.pointerType)&&v(t.touchEvents.OVER,e)}function d(e){(u||l&&"touch"!==e.pointerType)&&v(t.touchEvents.MOVE,e)}function p(i){(u||l&&"touch"!==i.pointerType&&!e.contains(document.elementFromPoint(i.x,i.y)))&&v(t.touchEvents.OUT,i)}function f(t){y=t.target,x=s(t,"X"),k=s(t,"Y"),o(t)||(l?t.isPrimary&&(n.preventScrolling&&(w=t.pointerId,e.setPointerCapture(w)),e.addEventListener("pointermove",g),e.addEventListener("pointercancel",m),e.addEventListener("pointerup",m)):u&&(document.addEventListener("mousemove",g),h&&"object"===t.target.nodeName.toLowerCase()?e.addEventListener("click",m):document.addEventListener("mouseup",m)),y.addEventListener("touchmove",g),y.addEventListener("touchcancel",m),y.addEventListener("touchend",m))}function g(e){var i=t.touchEvents,o=6;if(_)v(i.DRAG,e);else{var r=s(e,"X"),l=s(e,"Y"),c=r-x,u=l-k;c*c+u*u>o*o&&(v(i.DRAG_START,e),_=!0,v(i.DRAG,e))}n.preventScrolling&&a(e)}function m(i){var s=t.touchEvents;l?(n.preventScrolling&&e.releasePointerCapture(w),e.removeEventListener("pointermove",g),e.removeEventListener("pointercancel",m),e.removeEventListener("pointerup",m)):u&&(document.removeEventListener("mousemove",g),document.removeEventListener("mouseup",m)),y.removeEventListener("touchmove",g),y.removeEventListener("touchcancel",m),y.removeEventListener("touchend",m),_?v(s.DRAG_END,i):n.directSelect&&i.target!==e||-1!==i.type.indexOf("cancel")||(l&&i instanceof window.PointerEvent?"touch"===i.pointerType?v(s.TAP,i):v(s.CLICK,i):u?v(s.CLICK,i):(v(s.TAP,i),a(i))),y=null,_=!1}function v(e,s){var o;if(n.enableDoubleTap&&(e===t.touchEvents.CLICK||e===t.touchEvents.TAP))if(i.now()-C<j){var a=e===t.touchEvents.CLICK?t.touchEvents.DOUBLE_CLICK:t.touchEvents.DOUBLE_TAP;o=r(a,s,b),E.trigger(a,o),C=0}else C=i.now();o=r(e,s,b),E.trigger(e,o)}var y,w,b=e,_=!1,x=0,k=0,C=0,j=300;n=n||{},l?(e.addEventListener("pointerdown",f),n.useHover&&(e.addEventListener("pointerover",c),e.addEventListener("pointerout",p)),n.useMove&&e.addEventListener("pointermove",d)):u&&(e.addEventListener("mousedown",f),n.useHover&&(e.addEventListener("mouseover",c),e.addEventListener("mouseout",p)),n.useMove&&e.addEventListener("mousemove",d)),e.addEventListener("touchstart",f);var E=this;return this.triggerEvent=v,this.destroy=function(){e.removeEventListener("touchstart",f),e.removeEventListener("mousedown",f),y&&(y.removeEventListener("touchmove",g),y.removeEventListener("touchcancel",m),y.removeEventListener("touchend",m)),l&&(n.preventScrolling&&e.releasePointerCapture(w),e.removeEventListener("pointerover",c),e.removeEventListener("pointerdown",f),e.removeEventListener("pointermove",g),e.removeEventListener("pointermove",d),e.removeEventListener("pointercancel",m),e.removeEventListener("pointerout",p),e.removeEventListener("pointerup",m)),e.removeEventListener("click",m),e.removeEventListener("mouseover",c),e.removeEventListener("mousemove",d),e.removeEventListener("mouseout",p),document.removeEventListener("mousemove",g),document.removeEventListener("mouseup",m)},this};return i.extend(d.prototype,e),d}.apply(t,n),!(void 0!==s&&(e.exports=s))},,function(e,t,i){var n,s;n=[i(1)],s=function(e){function t(e){return/[\(,]format=m3u8-/i.test(e)?"m3u8":!1}var i=function(e){return e.replace(/^\s+|\s+$/g,"")},n=function(e,t,i){for(e=""+e,i=i||"0";e.length<t;)e=i+e;return e},s=function(e,t){for(var i=0;i<e.attributes.length;i++)if(e.attributes[i].name&&e.attributes[i].name.toLowerCase()===t.toLowerCase())return e.attributes[i].value.toString();return""},o=function(e){if(!e||"rtmp"===e.substr(0,4))return"";var i=t(e);return i?i:(e=e.split("?")[0].split("#")[0],e.lastIndexOf(".")>-1?e.substr(e.lastIndexOf(".")+1,e.length).toLowerCase():void 0)},r=function(e){var t=parseInt(e/3600),i=parseInt(e/60)%60,s=e%60;return n(t,2)+":"+n(i,2)+":"+n(s.toFixed(3),6)},a=function(t){if(e.isNumber(t))return t;t=t.replace(",",".");var i=t.split(":"),n=0;return"s"===t.slice(-1)?n=parseFloat(t):"m"===t.slice(-1)?n=60*parseFloat(t):"h"===t.slice(-1)?n=3600*parseFloat(t):i.length>1?(n=parseFloat(i[i.length-1]),n+=60*parseFloat(i[i.length-2]),3===i.length&&(n+=3600*parseFloat(i[i.length-3]))):n=parseFloat(t),n},l=function(t,i){return e.map(t,function(e){return i+e})},c=function(t,i){return e.map(t,function(e){return e+i})};return{trim:i,pad:n,xmlAttribute:s,extension:o,hms:r,seconds:a,suffix:c,prefix:l}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){e.exports=i(238)["default"]},,,,,function(e,t){"use strict";function i(e){return u[e]}function n(e){for(var t=1;t<arguments.length;t++)for(var i in arguments[t])Object.prototype.hasOwnProperty.call(arguments[t],i)&&(e[i]=arguments[t][i]);return e}function s(e,t){for(var i=0,n=e.length;n>i;i++)if(e[i]===t)return i;return-1}function o(e){if("string"!=typeof e){if(e&&e.toHTML)return e.toHTML();if(null==e)return"";if(!e)return e+"";e=""+e}return d.test(e)?e.replace(h,i):e}function r(e){return e||0===e?!(!g(e)||0!==e.length):!0}function a(e){var t=n({},e);return t._parent=e,t}function l(e,t){return e.path=t,e}function c(e,t){return(e?e+".":"")+t}t.__esModule=!0,t.extend=n,t.indexOf=s,t.escapeExpression=o,t.isEmpty=r,t.createFrame=a,t.blockParams=l,t.appendContextPath=c;var u={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},h=/[&<>"'`=]/g,d=/[&<>"'`=]/,p=Object.prototype.toString;t.toString=p;var f=function(e){return"function"==typeof e};f(/x/)&&(t.isFunction=f=function(e){return"function"==typeof e&&"[object Function]"===p.call(e)}),t.isFunction=f;var g=Array.isArray||function(e){return e&&"object"==typeof e?"[object Array]"===p.call(e):!1};t.isArray=g},,,,,,,,,,,function(e,t,i){var n,s;n=[i(2),i(4),i(6),i(1)],s=function(e,t,i,n){var s=e.noop,o=n.constant(!1),r={supports:o,play:s,load:s,stop:s,volume:s,mute:s,seek:s,resize:s,remove:s,destroy:s,setVisibility:s,setFullscreen:o,getFullscreen:s,getContainer:s,setContainer:o,getName:s,getQualityLevels:s,getCurrentQuality:s,setCurrentQuality:s,getAudioTracks:s,getCurrentAudioTrack:s,setCurrentAudioTrack:s,checkComplete:s,setControls:s,attachMedia:s,detachMedia:s,setState:function(e){var n=this.state||i.IDLE;this.state=e,e!==n&&this.trigger(t.JWPLAYER_PLAYER_STATE,{newstate:e})},sendMediaType:function(e){var i=e[0].type,n="oga"===i||"aac"===i||"mp3"===i||"mpeg"===i||"vorbis"===i;this.trigger(t.JWPLAYER_MEDIA_TYPE,{mediaType:n?"audio":"video"})}};return r}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(4),i(3),i(1)],s=function(e,t,i){var n={},s={NEW:0,LOADING:1,ERROR:2,COMPLETE:3},o=function(o,r){function a(t){u=s.ERROR,c.trigger(e.ERROR,t)}function l(t){u=s.COMPLETE,c.trigger(e.COMPLETE,t)}var c=i.extend(this,t),u=s.NEW;this.addEventListener=this.on,this.removeEventListener=this.off,this.makeStyleLink=function(e){var t=document.createElement("link");return t.type="text/css",t.rel="stylesheet",t.href=e,t},this.makeScriptTag=function(e){
var t=document.createElement("script");return t.src=e,t},this.makeTag=r?this.makeStyleLink:this.makeScriptTag,this.load=function(){if(u===s.NEW){var t=n[o];if(t&&(u=t.getStatus(),2>u))return t.on(e.ERROR,a),void t.on(e.COMPLETE,l);var i=document.getElementsByTagName("head")[0]||document.documentElement,c=this.makeTag(o),h=!1;c.onload=c.onreadystatechange=function(e){h||this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||(h=!0,l(e),c.onload=c.onreadystatechange=null,i&&c.parentNode&&!r&&i.removeChild(c))},c.onerror=a,i.insertBefore(c,i.firstChild),u=s.LOADING,n[o]=this}},this.getStatus=function(){return u}};return o.loaderstatus=s,o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(276),i(1)],s=function(e,t){var n=e.prototype.reorderProviders;return e.prototype.reorderProviders=function(){if(n.apply(this),"flash"!==this.config.primary&&this.config.hlshtml===!0){var e=t.indexOf(this.providers,t.findWhere(this.providers,{name:"caterpillar"})),i=this.providers.splice(e,1)[0],s=t.indexOf(this.providers,t.findWhere(this.providers,{name:"flash"}));this.providers.splice(s,0,i)}},e.prototype.providerSupports=function(e,t){return e.supports(t,this.config.edition)},e.load=function(n,s){return Promise.all(t.map(n,function(t){return new Promise(function(e){switch(t.name){case"caterpillar":i.e(1,function(t){e(i(133))});break;case"html5":!function(t){e(i(43))}(i);break;case"flash":!function(t){e(i(42))}(i);break;case"shaka":i.e(3,function(t){e(i(134))});break;case"youtube":i.e(0,function(t){e(i(57))});break;default:e()}}).then(function(t){t&&(t.setEdition&&t.setEdition(s),e.registerProvider(t))})}))},e}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,,function(e,t){"use strict";function i(e,t){var s=t&&t.loc,o=void 0,r=void 0;s&&(o=s.start.line,r=s.start.column,e+=" - "+o+":"+r);for(var a=Error.prototype.constructor.call(this,e),l=0;l<n.length;l++)this[n[l]]=a[n[l]];Error.captureStackTrace&&Error.captureStackTrace(this,i),s&&(this.lineNumber=o,this.column=r)}t.__esModule=!0;var n=["description","fileName","lineNumber","message","name","number","stack"];i.prototype=new Error,t["default"]=i,e.exports=t["default"]},function(e,t,i){var n,s;n=[i(14)],s=function(e){return{localName:function(e){return e?e.localName?e.localName:e.baseName?e.baseName:"":""},textContent:function(t){return t?t.textContent?e.trim(t.textContent):t.text?e.trim(t.text):"":""},getChildNode:function(e,t){return e.childNodes[t]},numChildren:function(e){return e.childNodes?e.childNodes.length:0}}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(272),i(273),i(120),i(56)],s=function(e,t,i,n){var s={},o={},r=function(i,n){return o[i]=new e(new t(s),n),o[i]},a=function(e,t,o,r){var a=n.getPluginName(e);s[a]||(s[a]=new i(e)),s[a].registerPlugin(e,t,o,r)};return{loadPlugins:r,registerPlugin:a}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(1),i(4),i(6),i(278),i(31),i(3)],s=function(e,t,i,n,s,o,r){function a(e){return e+"_swf_"+u++}function l(t){var i=document.createElement("a");i.href=t.flashplayer;var n=i.hostname===window.location.host;return e.isChrome()&&!n}function c(c,u){function h(e){if(L)for(var t=0;t<e.length;t++){var i=e[t];if(i.bitrate){var n=Math.round(i.bitrate/1e3);i.label=d(n)}}}function d(e){var t=L[e];if(!t){for(var i=1/0,n=L.bitrates.length;n--;){var s=Math.abs(L.bitrates[n]-e);if(s>i)break;i=s}t=L.labels[L.bitrates[n+1]],L[e]=t}return t}function p(){var e=u.hlslabels;if(!e)return null;var t={},i=[];for(var n in e){var s=parseFloat(n);if(!isNaN(s)){var o=Math.round(s);t[o]=e[n],i.push(o)}}return 0===i.length?null:(i.sort(function(e,t){return e-t}),{labels:t,bitrates:i})}function f(){_=setTimeout(function(){r.trigger.call(P,"flashBlocked")},4e3),y.once("embedded",function(){m(),r.trigger.call(P,"flashUnblocked")},P)}function g(){m(),f()}function m(){clearTimeout(_),window.removeEventListener("focus",g)}var v,y,w,b=null,_=-1,x=!1,k=-1,C=null,j=-1,E=null,T=!0,A=!1,P=this,I=function(){return y&&y.__ready},D=function(){y&&y.triggerFlash.apply(y,arguments)},L=p();t.extend(this,r,{init:function(e){e.preload&&"none"!==e.preload&&!u.autostart&&(b=e)},load:function(e){b=e,x=!1,this.setState(n.LOADING),D("load",e),e.sources.length&&"hls"!==e.sources[0].type&&this.sendMediaType(e.sources)},play:function(){D("play")},pause:function(){D("pause"),this.setState(n.PAUSED)},stop:function(){D("stop"),k=-1,b=null,this.setState(n.IDLE)},seek:function(e){D("seek",e)},volume:function(e){if(t.isNumber(e)){var i=Math.min(Math.max(0,e),100);I()&&D("volume",i)}},mute:function(e){I()&&D("mute",e)},setState:function(){return o.setState.apply(this,arguments)},checkComplete:function(){return x},attachMedia:function(){T=!0,x&&(this.setState(n.COMPLETE),this.trigger(i.JWPLAYER_MEDIA_COMPLETE),x=!1)},detachMedia:function(){return T=!1,null},getSwfObject:function(e){var t=e.getElementsByTagName("object")[0];return t?(t.off(null,null,this),t):s.embed(u.flashplayer,e,a(c),u.wmode)},getContainer:function(){return v},setContainer:function(s){if(v!==s){v=s,y=this.getSwfObject(s),document.hasFocus()?f():window.addEventListener("focus",g),y.once("ready",function(){m(),y.once("pluginsLoaded",function(){y.queueCommands=!1,D("setupCommandQueue",y.__commandQueue),y.__commandQueue=[]});var e=t.extend({},u),n=y.triggerFlash("setup",e);n===y?y.__ready=!0:this.trigger(i.JWPLAYER_MEDIA_ERROR,n),b&&D("init",b)},this);var o=[i.JWPLAYER_MEDIA_META,i.JWPLAYER_MEDIA_ERROR,i.JWPLAYER_MEDIA_SEEK,i.JWPLAYER_MEDIA_SEEKED,"subtitlesTracks","subtitlesTrackChanged","subtitlesTrackData","mediaType"],a=[i.JWPLAYER_MEDIA_BUFFER,i.JWPLAYER_MEDIA_TIME],c=[i.JWPLAYER_MEDIA_BUFFER_FULL];y.on(i.JWPLAYER_MEDIA_LEVELS,function(e){h(e.levels),k=e.currentQuality,C=e.levels,this.trigger(e.type,e)},this),y.on(i.JWPLAYER_MEDIA_LEVEL_CHANGED,function(e){h(e.levels),k=e.currentQuality,C=e.levels,this.trigger(e.type,e)},this),y.on(i.JWPLAYER_AUDIO_TRACKS,function(e){j=e.currentTrack,E=e.tracks,this.trigger(e.type,e)},this),y.on(i.JWPLAYER_AUDIO_TRACK_CHANGED,function(e){j=e.currentTrack,E=e.tracks,this.trigger(e.type,e)},this),y.on(i.JWPLAYER_PLAYER_STATE,function(e){var t=e.newstate;t!==n.IDLE&&this.setState(t)},this),y.on(a.join(" "),function(e){"Infinity"===e.duration&&(e.duration=1/0),this.trigger(e.type,e)},this),y.on(o.join(" "),function(e){this.trigger(e.type,e)},this),y.on(c.join(" "),function(e){this.trigger(e.type)},this),y.on(i.JWPLAYER_MEDIA_BEFORECOMPLETE,function(e){x=!0,this.trigger(e.type),T===!0&&(x=!1)},this),y.on(i.JWPLAYER_MEDIA_COMPLETE,function(e){x||(this.setState(n.COMPLETE),this.trigger(e.type))},this),y.on("visualQuality",function(e){e.reason=e.reason||"api",this.trigger("visualQuality",e),this.trigger(i.JWPLAYER_PROVIDER_FIRST_FRAME,{})},this),y.on(i.JWPLAYER_PROVIDER_CHANGED,function(e){w=e.message,this.trigger(i.JWPLAYER_PROVIDER_CHANGED,e)},this),y.on(i.JWPLAYER_ERROR,function(t){e.log("Error playing media: %o %s",t.code,t.message,t),this.trigger(i.JWPLAYER_MEDIA_ERROR,t)},this),l(u)&&y.on("throttle",function(e){m(),"resume"===e.state?r.trigger.call(P,"flashThrottle",e):_=setTimeout(function(){r.trigger.call(P,"flashThrottle",e)},250)},this)}},remove:function(){k=-1,C=null,s.remove(y)},setVisibility:function(e){e=!!e,v.style.opacity=e?1:0},resize:function(e,t,i){i&&D("stretch",i)},setControls:function(e){D("setControls",e)},setFullscreen:function(e){A=e,D("fullscreen",e)},getFullScreen:function(){return A},setCurrentQuality:function(e){D("setCurrentQuality",e)},getCurrentQuality:function(){return k},setSubtitlesTrack:function(e){D("setSubtitlesTrack",e)},getName:function(){return w?{name:"flash_"+w}:{name:"flash"}},getQualityLevels:function(){return C||b.sources},getAudioTracks:function(){return E},getCurrentAudioTrack:function(){return j},setCurrentAudioTrack:function(e){D("setCurrentAudioTrack",e)},destroy:function(){m(),this.remove(),y&&(y.off(),y=null),v=null,b=null,this.off()}}),this.trigger=function(e,t){return T?r.trigger.call(this,e,t):void 0}}var u=0,h=function(){};return h.prototype=o,c.prototype=new h,c.getName=function(){return{name:"flash"}},c}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(45),i(2),i(124),i(1),i(4),i(6),i(31),i(3)],s=function(e,t,i,n,s,o,r,a){function l(e,i){t.foreach(e,function(e,t){i.addEventListener(e,t,!1)})}function c(e,i){t.foreach(e,function(e,t){i.removeEventListener(e,t,!1)})}function u(e,t,i){"addEventListener"in e?e.addEventListener(t,i):e["on"+t]=i}function h(e,t,i){e&&("removeEventListener"in e?e.removeEventListener(t,i):e["on"+t]=null)}function d(e){if("hls"===e.type)if(e.androidhls!==!1){var i=t.isAndroidNative;if(i(2)||i(3)||i("4.0"))return!1;if(t.isAndroid())return!0}else if(t.isAndroid())return!1;return null}function p(p,C){function j(){Me&&(pe(Je.audioTracks),ve(Je.textTracks),Je.setAttribute("jw-loaded","data"))}function E(){Me&&Je.setAttribute("jw-loaded","started")}function T(e){Te.trigger("click",e)}function A(){Me&&!Re&&(R(S()),L(ne(),Ce,ke))}function P(){Me&&L(ne(),Ce,ke)}function I(){f(De),Pe=!0,Me&&(Te.state===o.STALLED?Te.setState(o.PLAYING):Te.state===o.PLAYING&&(De=setTimeout(ie,g)),Re&&Je.duration===1/0&&0===Je.currentTime||(R(S()),M(Je.currentTime),L(ne(),Ce,ke),Te.state===o.PLAYING&&(Te.trigger(s.JWPLAYER_MEDIA_TIME,{position:Ce,duration:ke}),D())))}function D(){var e=qe.level;if(e.width!==Je.videoWidth||e.height!==Je.videoHeight){if(e.width=Je.videoWidth,e.height=Je.videoHeight,be(),!e.width||!e.height)return;qe.reason=qe.reason||"auto",qe.mode="hls"===Ee[Se].type?"auto":"manual",qe.bitrate=0,e.index=Se,e.label=Ee[Se].label,Te.trigger("visualQuality",qe),qe.reason=""}}function L(e,t,i){e===Le&&i===ke||(Le=e,Te.trigger(s.JWPLAYER_MEDIA_BUFFER,{bufferPercent:100*e,position:t,duration:i}))}function M(e){0>ke&&(e=-(Z()-e)),Ce=e}function S(){var e=Je.duration,t=Z();if(e===1/0&&t){var i=t-Je.seekable.start(0);i!==1/0&&i>120&&(e=-i)}return e}function R(e){ke=e,Ie&&e&&e!==1/0&&Te.seek(Ie)}function O(){var e=S();Re&&e===1/0&&(e=0),Te.trigger(s.JWPLAYER_MEDIA_META,{duration:e,height:Je.videoHeight,width:Je.videoWidth}),R(e)}function N(){Me&&(Pe=!0,Re||be(),F())}function W(){Me&&(Je.muted&&(Je.muted=!1,Je.muted=!0),Je.setAttribute("jw-loaded","meta"),O())}function F(){je||(je=!0,Te.trigger(s.JWPLAYER_MEDIA_BUFFER_FULL))}function H(){Te.setState(o.PLAYING),Je.hasAttribute("jw-played")||Je.setAttribute("jw-played",""),Te.trigger(s.JWPLAYER_PROVIDER_FIRST_FRAME,{})}function z(){Te.state!==o.COMPLETE&&Je.currentTime!==Je.duration&&Te.setState(o.PAUSED)}function Y(){Re||Je.paused||Je.ended||Te.state!==o.LOADING&&Te.state!==o.ERROR&&(Te.seeking||Te.setState(o.STALLED))}function B(){Me&&(t.log("Error playing media: %o %s",Je.error,Je.src),Te.trigger(s.JWPLAYER_MEDIA_ERROR,{message:"Error loading media: File could not be played"}))}function $(e){var i;return"array"===t.typeOf(e)&&e.length>0&&(i=n.map(e,function(e,t){return{label:e.label||t}})),i}function q(e){Ee=e,Se=V(e);var t=$(e);t&&Te.trigger(s.JWPLAYER_MEDIA_LEVELS,{levels:t,currentQuality:Se})}function V(e){var t=Math.max(0,Se),i=C.qualityLabel;if(e)for(var n=0;n<e.length;n++)if(e[n]["default"]&&(t=n),i&&e[n].label===i)return n;return qe.reason="initial choice",qe.level={},t}function J(e,i){Ie=0,f(De);var n=document.createElement("source");n.src=Ee[Se].file;var s=Je.src!==n.src,r=Je.getAttribute("jw-loaded"),a=Je.hasAttribute("jw-played");s||"none"===r||"started"===r?(ke=i,U(Ee[Se]),G($e),Je.load()):(0===e&&Je.currentTime>0&&(Ie=-1,Te.seek(e)),Je.play()),Ce=Je.currentTime,y&&!a&&(F(),Je.paused||Te.state===o.PLAYING||Te.setState(o.LOADING)),t.isIOS()&&Te.getFullScreen()&&(Je.controls=!0),e>0&&Te.seek(e)}function U(e){Fe=null,He=null,Ye=-1,ze=-1,Be=-1,qe.reason||(qe.reason="initial choice",qe.level={}),Pe=!1,je=!1,Re=d(e),e.preload&&e.preload!==Je.getAttribute("preload")&&Je.setAttribute("preload",e.preload);var t=document.createElement("source");t.src=e.file;var i=Je.src!==t.src;i&&(Je.setAttribute("jw-loaded","none"),Je.src=e.file)}function K(){Je&&(_e(),Je.removeAttribute("crossorigin"),Je.removeAttribute("preload"),Je.removeAttribute("src"),Je.removeAttribute("jw-loaded"),Je.removeAttribute("jw-played"),i.emptyElement(Je),Se=-1,$e=null,!v&&"load"in Je&&Je.load())}function G(e){var n=t.isChrome()||t.isIOS()||t.isSafari();!Oe&&n&&(e!==$e||e&&e.length&&!Je.textTracks.length)&&(_e(),i.emptyElement(Je),$e=e,X(e))}function X(e){if(e)for(var i=!1,n=0;n<e.length;n++){var s=e[n];if(/\.(?:web)?vtt(?:\?.*)?$/i.test(s.file)&&/subtitles|captions|descriptions|chapters|metadata/i.test(s.kind)){i||!Je.hasAttribute("crossorigin")&&t.crossdomain(s.file)&&(Je.setAttribute("crossorigin","anonymous"),i=!0);var o=document.createElement("track");o.src=s.file,o.kind=s.kind,o.srclang=s.language||"",o.label=s.label,o.mode="disabled",o.id=s["default"]||s.defaulttrack?"default":"",Je.appendChild(o)}}}function Q(){for(var e=Je.seekable?Je.seekable.length:0,t=1/0;e--;)t=Math.min(t,Je.seekable.start(e));return t}function Z(){for(var e=Je.seekable?Je.seekable.length:0,t=0;e--;)t=Math.max(t,Je.seekable.end(e));return t}function ee(){Te.seeking=!1,Te.trigger(s.JWPLAYER_MEDIA_SEEKED)}function te(){Te.trigger("volume",{volume:Math.round(100*Je.volume)}),Te.trigger("mute",{mute:Je.muted})}function ie(){Je.currentTime===Ce&&Y()}function ne(){var e=Je.buffered,i=Je.duration;return!e||0===e.length||0>=i||i===1/0?0:t.between(e.end(e.length-1)/i,0,1)}function se(){if(Me&&Te.state!==o.IDLE&&Te.state!==o.COMPLETE){if(f(De),Se=-1,Ne=!0,Te.trigger(s.JWPLAYER_MEDIA_BEFORECOMPLETE),!Me)return;oe()}}function oe(){f(De),Te.setState(o.COMPLETE),Ne=!1,Te.trigger(s.JWPLAYER_MEDIA_COMPLETE)}function re(e){We=!0,de(e),t.isIOS()&&(Je.controls=!1)}function ae(){var e=-1,t=0;if(Fe)for(t;t<Fe.length;t++)if("showing"===Fe[t].mode){e=t;break}ye(e+1)}function le(){for(var e=-1,t=0;t<Je.audioTracks.length;t++)if(Je.audioTracks[t].enabled){e=t;break}fe(e)}function ce(e){ue(e.currentTarget.activeCues)}function ue(e){if(e&&e.length&&Be!==e[0].startTime){var i=t.parseID3(e);Be=e[0].startTime,Te.trigger("meta",{metadataTime:Be,metadata:i})}}function he(e){We=!1,de(e),t.isIOS()&&(Je.controls=!1)}function de(e){Te.trigger("fullscreenchange",{target:e.target,jwstate:We})}function pe(e){if(He=null,e){if(e.length){for(var t=0;t<e.length;t++)if(e[t].enabled){Ye=t;break}-1===Ye&&(Ye=0,e[Ye].enabled=!0),He=n.map(e,function(e){var t={name:e.label||e.language,language:e.language};return t})}u(e,"change",le),He&&Te.trigger("audioTracks",{currentTrack:Ye,tracks:He})}}function fe(e){Je&&Je.audioTracks&&He&&e>-1&&e<Je.audioTracks.length&&e!==Ye&&(Je.audioTracks[Ye].enabled=!1,Ye=e,Je.audioTracks[Ye].enabled=!0,Te.trigger("audioTrackChanged",{currentTrack:Ye,tracks:He}))}function ge(){return He||[]}function me(){return Ye}function ve(e){if(Fe=null,e){if(e.length){var t=0,i=e.length;for(t;i>t;t++)"metadata"===e[t].kind?(e[t].oncuechange=ce,e[t].mode="showing"):"subtitles"!==e[t].kind&&"captions"!==e[t].kind||(e[t].mode="disabled",Fe||(Fe=[]),Fe.push(e[t]))}u(e,"change",ae),Fe&&Fe.length&&Te.trigger("subtitlesTracks",{tracks:Fe})}}function ye(e){Fe&&ze!==e-1&&(ze>-1&&ze<Fe.length?Fe[ze].mode="disabled":n.each(Fe,function(e){e.mode="disabled"}),e>0&&e<=Fe.length?(ze=e-1,Fe[ze].mode="showing"):ze=-1,Te.trigger("subtitlesTrackChanged",{currentTrack:ze+1,tracks:Fe}))}function we(){return ze}function be(){if("hls"===Ee[0].type){var e="video";0===Je.videoHeight&&(e="audio"),Te.trigger("mediaType",{mediaType:e})}}function _e(){Fe&&Fe[ze]&&(Fe[ze].mode="disabled")}this.state=o.IDLE,this.seeking=!1,n.extend(this,a),this.trigger=function(e,t){return Me?a.trigger.call(this,e,t):void 0},this.setState=function(e){return Me?r.setState.call(this,e):void 0};var xe,ke,Ce,je,Ee,Te=this,Ae={click:T,durationchange:A,ended:se,error:B,loadstart:E,loadeddata:j,loadedmetadata:W,canplay:N,playing:H,progress:P,pause:z,seeked:ee,timeupdate:I,volumechange:te,webkitbeginfullscreen:re,webkitendfullscreen:he},Pe=!1,Ie=0,De=-1,Le=-1,Me=!0,Se=-1,Re=null,Oe=!!C.sdkplatform,Ne=!1,We=!1,Fe=null,He=null,ze=-1,Ye=-1,Be=-1,$e=null,qe={level:{}},Ve=document.getElementById(p),Je=Ve?Ve.querySelector("video"):void 0;Je=Je||document.createElement("video"),Je.className="jw-video jw-reset",n.isObject(C.cast)&&C.cast.appid&&Je.setAttribute("disableRemotePlayback",""),l(Ae,Je),_||(Je.controls=!0,Je.controls=!1),Je.setAttribute("x-webkit-airplay","allow"),Je.setAttribute("webkit-playsinline",""),this.stop=function(){f(De),Me&&(K(),t.isIETrident()&&Je.pause(),this.setState(o.IDLE))},this.destroy=function(){c(Ae,Je),h(Je.audioTracks,"change",le),h(Je.textTracks,"change",ae),this.remove(),this.off()},this.init=function(e){Me&&($e=null,Ee=e.sources,Se=V(e.sources),e.sources.length&&"hls"!==e.sources[0].type&&this.sendMediaType(e.sources),Ce=e.starttime||0,ke=e.duration||0,qe.reason="",U(Ee[Se]),G(e.tracks))},this.load=function(e){Me&&(q(e.sources),e.sources.length&&"hls"!==e.sources[0].type&&this.sendMediaType(e.sources),y&&!Je.hasAttribute("jw-played")||Te.setState(o.LOADING),J(e.starttime||0,e.duration||0))},this.play=function(){return Te.seeking?(Te.setState(o.LOADING),void Te.once(s.JWPLAYER_MEDIA_SEEKED,Te.play)):void Je.play()},this.pause=function(){f(De),Je.pause(),this.setState(o.PAUSED)},this.seek=function(e){if(Me)if(0>e&&(e+=Q()+Z()),0===Ie&&this.trigger(s.JWPLAYER_MEDIA_SEEK,{position:Je.currentTime,offset:e}),Pe||(Pe=!!Z()),Pe){Ie=0;try{Te.seeking=!0,Je.currentTime=e}catch(t){Te.seeking=!1,Ie=e}}else Ie=e,w&&Je.paused&&Je.play()},this.volume=function(e){e=t.between(e/100,0,1),Je.volume=e},this.mute=function(e){Je.muted=!!e},this.checkComplete=function(){return Ne},this.detachMedia=function(){return f(De),_e(),Me=!1,Je},this.attachMedia=function(){Me=!0,Pe=!1,this.seeking=!1,Je.loop=!1,Ne&&oe()},this.setContainer=function(e){xe=e,e.appendChild(Je)},this.getContainer=function(){return xe},this.remove=function(){K(),f(De),xe===Je.parentNode&&xe.removeChild(Je)},this.setVisibility=function(t){t=!!t,t||b?e.style(xe,{visibility:"visible",opacity:1}):e.style(xe,{visibility:"",opacity:0})},this.resize=function(t,i,n){if(!(t&&i&&Je.videoWidth&&Je.videoHeight))return!1;var s={objectFit:""};if("uniform"===n){var o=t/i,r=Je.videoWidth/Je.videoHeight;Math.abs(o-r)<.09&&(s.objectFit="fill",n="exactfit")}var a=m||b||_||x;if(a){var l=-Math.floor(Je.videoWidth/2+1),c=-Math.floor(Je.videoHeight/2+1),u=Math.ceil(100*t/Je.videoWidth)/100,h=Math.ceil(100*i/Je.videoHeight)/100;"none"===n?u=h=1:"fill"===n?u=h=Math.max(u,h):"uniform"===n&&(u=h=Math.min(u,h)),s.width=Je.videoWidth,s.height=Je.videoHeight,s.top=s.left="50%",s.margin=0,e.transform(Je,"translate("+l+"px, "+c+"px) scale("+u.toFixed(2)+", "+h.toFixed(2)+")")}return e.style(Je,s),!1},this.setFullscreen=function(e){if(e=!!e){var i=t.tryCatch(function(){var e=Je.webkitEnterFullscreen||Je.webkitEnterFullScreen;e&&e.apply(Je)});return i instanceof t.Error?!1:Te.getFullScreen()}var n=Je.webkitExitFullscreen||Je.webkitExitFullScreen;return n&&n.apply(Je),e},Te.getFullScreen=function(){return We||!!Je.webkitDisplayingFullscreen},this.setCurrentQuality=function(e){if(Se!==e&&e>=0&&Ee&&Ee.length>e){Se=e,qe.reason="api",qe.level={},this.trigger(s.JWPLAYER_MEDIA_LEVEL_CHANGED,{currentQuality:e,levels:$(Ee)}),C.qualityLabel=Ee[e].label;var t=Je.currentTime||0,i=Je.duration||0;0>=i&&(i=ke),Te.setState(o.LOADING),J(t,i)}},this.getCurrentQuality=function(){return Se},this.getQualityLevels=function(){return $(Ee)},this.getName=function(){return{name:k}},this.setCurrentAudioTrack=fe,this.getAudioTracks=ge,this.getCurrentAudioTrack=me,this.setSubtitlesTrack=ye,this.getSubtitlesTrack=we}var f=window.clearTimeout,g=256,m=t.isIE(),v=t.isMSIE(),y=t.isMobile(),w=t.isFF(),b=t.isAndroidNative(),_=t.isIOS(7),x=t.isIOS(8),k="html5",C=function(){};return C.prototype=r,p.prototype=new C,p.getName=function(){return{name:"html5"}},p}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){return{repo:"http://ssl.p.jwpcdn.com/player/v/",SkinsIncluded:["seven"],SkinsLoadable:["beelden","bekle","five","glow","roundster","six","stormtrooper","vapor"],dvrSeekLimit:-25}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(14)],s=function(e){function t(e){e=e.split("-");for(var t=1;t<e.length;t++)e[t]=e[t].charAt(0).toUpperCase()+e[t].slice(1);return e.join("")}function i(t,i,n){if(""===i||void 0===i||null===i)return"";var s=n?" !important":"";return"string"==typeof i&&isNaN(i)?/png|gif|jpe?g/i.test(i)&&i.indexOf("url")<0?"url("+i+")":i+s:0===i||"z-index"===t||"opacity"===t?""+i+s:/color/i.test(t)?"#"+e.pad(i.toString(16).replace(/^0x/i,""),6)+s:Math.ceil(i)+"px"+s}var n,s={},o=function(e,t){n||(n=document.createElement("style"),n.type="text/css",document.getElementsByTagName("head")[0].appendChild(n));var i="";if("object"==typeof t){var o=document.createElement("div");r(o,t),i="{"+o.style.cssText+"}"}else"string"==typeof t&&(i=t);var a=document.createTextNode(e+i);s[e]&&n.removeChild(s[e]),s[e]=a,n.appendChild(a)},r=function(e,n){if(void 0!==e&&null!==e){void 0===e.length&&(e=[e]);var s,o={};for(s in n)o[s]=i(s,n[s]);for(var r=0;r<e.length;r++){var a,l=e[r];if(void 0!==l&&null!==l)for(s in o)a=t(s),l.style[a]!==o[s]&&(l.style[a]=o[s])}}},a=function(e){for(var t in s)t.indexOf(e)>=0&&(n.removeChild(s[t]),delete s[t])},l=function(e,t){r(e,{transform:t,webkitTransform:t,msTransform:t,mozTransform:t,oTransform:t})},c=function(e,t){var i="rgb";e?(e=String(e).replace("#",""),3===e.length&&(e=e[0]+e[0]+e[1]+e[1]+e[2]+e[2])):e="000000";var n=[parseInt(e.substr(0,2),16),parseInt(e.substr(2,2),16),parseInt(e.substr(4,2),16)];return void 0!==t&&100!==t&&(i+="a",n.push(t/100)),i+"("+n.join(",")+")"};return{css:o,style:r,clearCss:a,transform:l,hexToRgba:c}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){return"7.4.4+commercial_v7-4-4.100.commercial.171f7c.jwplayer.3385ed.googima.897709.vast.c134ec.analytics.264631.plugin-gapro.4c6bfd.plugin-related.d1f496.plugin-sharing.7c1c68"}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(125),i(2)],s=function(e,t){var i=e.extend({constructor:function(e){this.el=document.createElement("div"),this.el.className="jw-icon jw-icon-tooltip "+e+" jw-button-color jw-reset jw-hidden",this.container=document.createElement("div"),this.container.className="jw-overlay jw-reset",this.openClass="jw-open",this.componentType="tooltip",this.el.appendChild(this.container)},addContent:function(e){this.content&&this.removeContent(),this.content=e,this.container.appendChild(e)},removeContent:function(){this.content&&(this.container.removeChild(this.content),this.content=null)},hasContent:function(){return!!this.content},element:function(){return this.el},openTooltip:function(e){this.trigger("open-"+this.componentType,e,{isOpen:!0}),this.isOpen=!0,t.toggleClass(this.el,this.openClass,this.isOpen)},closeTooltip:function(e){this.trigger("close-"+this.componentType,e,{isOpen:!1}),this.isOpen=!1,t.toggleClass(this.el,this.openClass,this.isOpen)},toggleOpenState:function(e){this.isOpen?this.closeTooltip(e):this.openTooltip(e)}});return i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1)],s=function(e){var t="free",i="premium",n="enterprise",s="platinum",o="ads",r="unlimited",a="trial",l={setup:[t,i,n,o,r,a,s],dash:[i,n,o,r,a,s],drm:[n,o,r,a],hls:[i,o,n,r,a,s],ads:[o,r,a,s,n],casting:[i,n,o,r,a,s],jwpsrv:[t,i,n,o,a,s]},c=function(t){return function(i){return e.contains(l[i],t)}};return c}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,,,function(e,t,i){var n,s;n=[i(2),i(33),i(264),i(1),i(3),i(280),i(4),i(6)],s=function(e,t,i,n,s,o,r,a){var l=function(){function o(e,t){var i=n.extend({},t,{type:e});switch(e){case"flashThrottle":var s="resume"!==t.state;this.set("flashThrottle",s),this.set("flashBlocked",s);break;case"flashBlocked":return void this.set("flashBlocked",!0);case"flashUnblocked":return void this.set("flashBlocked",!1);case"volume":case"mute":return void this.set(e,t[e]);case r.JWPLAYER_MEDIA_TYPE:return void(this.mediaModel.get("mediaType")!==t.mediaType&&(this.mediaModel.set("mediaType",t.mediaType),this.mediaController.trigger(e,i)));case r.JWPLAYER_PLAYER_STATE:return void this.mediaModel.set("state",t.newstate);case r.JWPLAYER_MEDIA_BUFFER:this.set("buffer",t.bufferPercent);case r.JWPLAYER_MEDIA_META:var o=t.duration;n.isNumber(o)&&(this.mediaModel.set("duration",o),this.set("duration",o));break;case r.JWPLAYER_MEDIA_BUFFER_FULL:this.mediaModel.get("playAttempt")?this.playVideo():this.mediaModel.on("change:playAttempt",function(){this.playVideo()},this);break;case r.JWPLAYER_MEDIA_TIME:this.mediaModel.set("position",t.position),this.set("position",t.position),n.isNumber(t.duration)&&(this.mediaModel.set("duration",t.duration),this.set("duration",t.duration));break;case r.JWPLAYER_PROVIDER_CHANGED:this.set("provider",u.getName());break;case r.JWPLAYER_MEDIA_LEVELS:this.setQualityLevel(t.currentQuality,t.levels),this.mediaModel.set("levels",t.levels);break;case r.JWPLAYER_MEDIA_LEVEL_CHANGED:this.setQualityLevel(t.currentQuality,t.levels),this.persistQualityLevel(t.currentQuality,t.levels);break;case r.JWPLAYER_AUDIO_TRACKS:this.setCurrentAudioTrack(t.currentTrack,t.tracks),this.mediaModel.set("audioTracks",t.tracks);break;case r.JWPLAYER_AUDIO_TRACK_CHANGED:this.setCurrentAudioTrack(t.currentTrack,t.tracks);break;case"subtitlesTrackChanged":this.setVideoSubtitleTrack(t.currentTrack,t.tracks);break;case"visualQuality":var a=n.extend({},t);this.mediaModel.set("visualQuality",a)}this.mediaController.trigger(e,i)}var l,u,h=this,d=e.noop;this.mediaController=n.extend({},s),this.mediaModel=new c,i.model(this),this.set("mediaModel",this.mediaModel),this.setup=function(t){return n.extend(this.attributes,t,{item:0,state:a.IDLE,flashBlocked:!1,fullscreen:!1,compactUI:!1,scrubbing:!1,duration:0,position:0,buffer:0}),e.isMobile()&&!t.mobileSdk&&this.set("autostart",!1),this.updateProviders(),this},this.getConfiguration=function(){return n.omit(this.clone(),["mediaModel"])},this.updateProviders=function(){l=new t(this.getConfiguration())},this.setQualityLevel=function(e,t){e>-1&&t.length>1&&"youtube"!==u.getName().name&&this.mediaModel.set("currentLevel",parseInt(e))},this.persistQualityLevel=function(e,t){var i=t[e]||{},n=i.label;this.set("qualityLabel",n)},this.setCurrentAudioTrack=function(e,t){e>-1&&t.length>0&&e<t.length&&this.mediaModel.set("currentAudioTrack",parseInt(e))},this.onMediaContainer=function(){var e=this.get("mediaContainer");d.setContainer(e)},this.changeVideoProvider=function(e){if(this.off("change:mediaContainer",this.onMediaContainer),u&&(u.off(null,null,this),u.getContainer()&&u.remove()),!e)return u=d=e,void this.set("provider",void 0);d=new e(h.get("id"),h.getConfiguration());var t=this.get("mediaContainer");t?d.setContainer(t):this.once("change:mediaContainer",this.onMediaContainer),this.set("provider",d.getName()),-1===d.getName().name.indexOf("flash")&&(this.set("flashThrottle",void 0),this.set("flashBlocked",!1)),u=d,u.volume(h.get("volume")),u.mute(h.get("mute")),u.on("all",o,this)},this.destroy=function(){this.off(),u&&(u.off(null,null,this),u.destroy())},this.getVideo=function(){return u},this.setFullscreen=function(e){e=!!e,e!==h.get("fullscreen")&&h.set("fullscreen",e)},this.chooseProvider=function(e){return l.choose(e).provider},this.setActiveItem=function(e){this.mediaModel.off(),this.mediaModel=new c,this.set("mediaModel",this.mediaModel),this.set("position",e.starttime||0),this.set("duration",e.duration||0),this.setProvider(e)},this.setProvider=function(e){var t=e&&e.sources&&e.sources[0];if(void 0!==t){var i=this.chooseProvider(t);i&&d instanceof i||h.changeVideoProvider(i),d&&(d.init&&d.init(e),this.trigger("itemReady",e))}},this.getProviders=function(){return l},this.resetProvider=function(){d=null},this.setVolume=function(e){e=Math.round(e),h.set("volume",e),u&&u.volume(e);var t=0===e;t!==h.get("mute")&&h.setMute(t)},this.setMute=function(t){if(e.exists(t)||(t=!h.get("mute")),h.set("mute",t),u&&u.mute(t),!t){var i=Math.max(10,h.get("volume"));this.setVolume(i)}},this.loadVideo=function(e){if(!e){var t=this.get("item");e=this.get("playlist")[t]}this.set("position",e.starttime||0),this.set("duration",e.duration||0),this.mediaModel.set("playAttempt",!0),this.mediaController.trigger(r.JWPLAYER_MEDIA_PLAY_ATTEMPT,{playReason:this.get("playReason")}),u.load(e)},this.stopVideo=function(){u&&u.stop()},this.playVideo=function(){u.play()},this.persistCaptionsTrack=function(){var e=this.get("captionsTrack");e?this.set("captionLabel",e.label):this.set("captionLabel","Off")},this.setVideoSubtitleTrack=function(e,t){this.set("captionsIndex",e),e&&t&&e<=t.length&&t[e-1].data&&this.set("captionsTrack",t[e-1]),u&&u.setSubtitlesTrack&&u.setSubtitlesTrack(e)},this.persistVideoSubtitleTrack=function(e){this.setVideoSubtitleTrack(e),this.persistCaptionsTrack()}},c=l.MediaModel=function(){this.set("state",a.IDLE)};return n.extend(l.prototype,o),n.extend(c.prototype,o),l}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(14)],s=function(e){var t={},i=t.pluginPathType={ABSOLUTE:0,RELATIVE:1,CDN:2};return t.getPluginPathType=function(t){if("string"==typeof t){t=t.split("?")[0];var n=t.indexOf("://");if(n>0)return i.ABSOLUTE;var s=t.indexOf("/"),o=e.extension(t);return!(0>n&&0>s)||o&&isNaN(o)?i.RELATIVE:i.CDN}},t.getPluginName=function(e){return e.replace(/^(.*\/)?([^-]*)-?.*\.(swf|js)$/,"$2")},t.getPluginVersion=function(e){return e.replace(/[^-]*-?([^\.]*).*$/,"$1")},t}.apply(t,n),!(void 0!==s&&(e.exports=s))},,function(e,t,i){var n,s;n=[i(1)],s=function(e){var t={},i={TIT2:"title",TT2:"title",WXXX:"url",TPE1:"artist",TP1:"artist",TALB:"album",TAL:"album"};return t.utf8ArrayToStr=function(e,t){var i,n,s,o,r,a;for(i="",s=e.length,n=t||0;s>n;)if(o=e[n++],0!==o&&3!==o)switch(o>>4){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:i+=String.fromCharCode(o);break;case 12:case 13:r=e[n++],i+=String.fromCharCode((31&o)<<6|63&r);break;case 14:r=e[n++],a=e[n++],i+=String.fromCharCode((15&o)<<12|(63&r)<<6|(63&a)<<0)}return i},t.utf16BigEndianArrayToStr=function(e,t){var i,n,s;for(i="",s=e.length-1,n=t||0;s>n;)254===e[n]&&255===e[n+1]||(i+=String.fromCharCode((e[n]<<8)+e[n+1])),n+=2;return i},t.syncSafeInt=function(e){var i=t.arrayToInt(e);return 127&i|(32512&i)>>1|(8323072&i)>>2|(2130706432&i)>>3},t.arrayToInt=function(e){for(var t="0x",i=0;i<e.length;i++)t+=e[i].toString(16);return parseInt(t)},t.parseID3=function(n){return e.reduce(n,function(n,s){if(!("value"in s)&&"data"in s&&s.data instanceof ArrayBuffer){var o=s,r=new Uint8Array(o.data),a=r.length;s={value:{key:"",data:""}};for(var l=10;14>l&&l<r.length&&0!==r[l];)s.value.key+=String.fromCharCode(r[l]),l++;var c=19,u=r[c];3!==u&&0!==u||(u=r[++c],a--);var h=0;if(1!==u&&2!==u)for(var d=c+1;a>d;d++)if(0===r[d]){h=d-c;break}if(h>0){var p=t.utf8ArrayToStr(r.subarray(c,c+=h),0);if("PRIV"===s.value.key){if("com.apple.streaming.transportStreamTimestamp"===p){var f=1&t.syncSafeInt(r.subarray(c,c+=4)),g=t.syncSafeInt(r.subarray(c,c+=4));f&&(g+=4294967296),s.value.data=g}else s.value.data=t.utf8ArrayToStr(r,c+1);s.value.info=p}else s.value.info=p,s.value.data=t.utf8ArrayToStr(r,c+1)}else{var m=r[c];1===m||2===m?s.value.data=t.utf16BigEndianArrayToStr(r,c+1):s.value.data=t.utf8ArrayToStr(r,c+1)}}if(i.hasOwnProperty(s.value.key)&&(n[i[s.value.key]]=s.value.data),s.value.info){var v=n[s.value.key];e.isObject(v)||(v={},n[s.value.key]=v),v[s.value.info]=s.value.data}else n[s.value.key]=s.value.data;return n},{})},t}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){var e=window.chrome,t={};return t.NS="urn:x-cast:com.longtailvideo.jwplayer",t.debug=!1,t.availability=null,t.available=function(i){i=i||t.availability;var n="available";return e&&e.cast&&e.cast.ReceiverAvailability&&(n=e.cast.ReceiverAvailability.AVAILABLE),i===n},t.log=function(){if(t.debug){var e=Array.prototype.slice.call(arguments,0);console.log.apply(console,e)}},t.error=function(){
var e=Array.prototype.slice.call(arguments,0);console.error.apply(console,e)},t}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,,,,,,,,,,,,,,,,,,,function(e,t,i){var n,s;n=[i(6)],s=function(e){function t(t){return t===e.COMPLETE||t===e.ERROR?e.IDLE:t}return function(e,i,n){if(i=t(i),n=t(n),i!==n){var s=i.replace(/(?:ing|d)$/,""),o={type:s,newstate:i,oldstate:n,reason:e.mediaModel.get("state")};"play"===s&&(o.playReason=e.get("playReason")),this.trigger(s,o)}}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(14)],s=function(e,t){function i(e){var t={},i=e.split("\r\n");1===i.length&&(i=e.split("\n"));var s=1;if(i[0].indexOf(" --> ")>0&&(s=0),i.length>s+1&&i[s+1]){var o=i[s],r=o.indexOf(" --> ");r>0&&(t.begin=n(o.substr(0,r)),t.end=n(o.substr(r+5)),t.text=i.slice(s+1).join("<br/>"))}return t}var n=e.seconds;return function(e){var n=[];e=t.trim(e);var s=e.split("\r\n\r\n");1===s.length&&(s=e.split("\n\n"));for(var o=0;o<s.length;o++)if("WEBVTT"!==s[o]){var r=i(s[o]);r.text&&n.push(r)}if(!n.length)throw new Error("Invalid SRT file");return n}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(119),i(271)],s=function(e,t,i){var n={sources:[],tracks:[]},s=function(s){s=s||{},e.isArray(s.tracks)||delete s.tracks;var o=e.extend({},n,s);e.isObject(o.sources)&&!e.isArray(o.sources)&&(o.sources=[t(o.sources)]),e.isArray(o.sources)&&0!==o.sources.length||(s.levels?o.sources=s.levels:o.sources=[t(s)]);for(var r=0;r<o.sources.length;r++){var a=o.sources[r];if(a){var l=a["default"];l?a["default"]="true"===l.toString():a["default"]=!1,o.sources[r].label||(o.sources[r].label=r.toString()),o.sources[r]=t(o.sources[r])}}return o.sources=e.compact(o.sources),e.isArray(o.tracks)||(o.tracks=[]),e.isArray(o.captions)&&(o.tracks=o.tracks.concat(o.captions),delete o.captions),o.tracks=e.compact(e.map(o.tracks,i)),o};return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(86)],s=function(e,t){function i(e){return/^(?:(?:https?|file)\:)?\/\//.test(e)}function n(t){return e.some(t,function(e){return"parsererror"===e.nodeName})}var s={};return s.getAbsolutePath=function(e,n){if(t.exists(n)||(n=document.location.href),t.exists(e)){if(i(e))return e;var s,o=n.substring(0,n.indexOf("://")+3),r=n.substring(o.length,n.indexOf("/",o.length+1));if(0===e.indexOf("/"))s=e.split("/");else{var a=n.split("?")[0];a=a.substring(o.length+r.length+1,a.lastIndexOf("/")),s=a.split("/").concat(e.split("/"))}for(var l=[],c=0;c<s.length;c++)s[c]&&t.exists(s[c])&&"."!==s[c]&&(".."===s[c]?l.pop():l.push(s[c]));return o+r+"/"+l.join("/")}},s.getScriptPath=e.memoize(function(e){for(var t=document.getElementsByTagName("script"),i=0;i<t.length;i++){var n=t[i].src;if(n&&n.indexOf(e)>=0)return n.substr(0,n.indexOf(e))}return""}),s.parseXML=function(e){var t=null;try{"DOMParser"in window?(t=(new window.DOMParser).parseFromString(e,"text/xml"),(n(t.childNodes)||t.childNodes&&n(t.childNodes[0].childNodes))&&(t=null)):(t=new window.ActiveXObject("Microsoft.XMLDOM"),t.async="false",t.loadXML(e))}catch(i){}return t},s.serialize=function(e){if(void 0===e)return null;if("string"==typeof e&&e.length<6){var t=e.toLowerCase();if("true"===t)return!0;if("false"===t)return!1;if(!isNaN(Number(e))&&!isNaN(parseFloat(e)))return Number(e)}return e},s.parseDimension=function(e){return"string"==typeof e?""===e?0:e.lastIndexOf("%")>-1?e:parseInt(e.replace("px",""),10):e},s.timeFormat=function(e,t){if(0>=e&&!t)return"00:00";var i=0>e?"-":"";e=Math.abs(e);var n=Math.floor(e/3600),s=Math.floor((e-3600*n)/60),o=Math.floor(e%60);return i+(n?n+":":"")+(10>s?"0":"")+s+":"+(10>o?"0":"")+o},s.adaptiveType=function(e){if(0!==e){var t=-120;if(t>=e)return"DVR";if(0>e||e===1/0)return"LIVE"}return"VOD"},s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1)],s=function(e){var t={};return t.exists=function(e){switch(typeof e){case"string":return e.length>0;case"object":return null!==e;case"undefined":return!1}return!0},t.isHTTPS=function(){return 0===window.location.href.indexOf("https")},t.isRtmp=function(e,t){return 0===e.indexOf("rtmp")||"rtmp"===t},t.isYouTube=function(e,t){return"youtube"===t||/^(http|\/\/).*(youtube\.com|youtu\.be)\/.+/.test(e)},t.youTubeID=function(e){var t=/v[=\/]([^?&]*)|youtu\.be\/([^?]*)|^([\w-]*)$/i.exec(e);return t?t.slice(1).join("").replace("?",""):""},t.typeOf=function(t){if(null===t)return"null";var i=typeof t;return"object"===i&&e.isArray(t)?"array":i},t}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(125),i(12),i(236),i(2)],s=function(e,t,i,n){var s=e.extend({constructor:function(e,t){this.className=e+" jw-background-color jw-reset",this.orientation=t,this.dragStartListener=this.dragStart.bind(this),this.dragMoveListener=this.dragMove.bind(this),this.dragEndListener=this.dragEnd.bind(this),this.tapListener=this.tap.bind(this),this.setup()},setup:function(){var e={"default":this["default"],className:this.className,orientation:"jw-slider-"+this.orientation};this.el=n.createElement(i(e)),this.elementRail=this.el.getElementsByClassName("jw-slider-container")[0],this.elementBuffer=this.el.getElementsByClassName("jw-buffer")[0],this.elementProgress=this.el.getElementsByClassName("jw-progress")[0],this.elementThumb=this.el.getElementsByClassName("jw-knob")[0],this.userInteract=new t(this.element(),{preventScrolling:!0}),this.userInteract.on("dragStart",this.dragStartListener),this.userInteract.on("drag",this.dragMoveListener),this.userInteract.on("dragEnd",this.dragEndListener),this.userInteract.on("tap click",this.tapListener)},dragStart:function(){this.trigger("dragStart"),this.railBounds=n.bounds(this.elementRail)},dragEnd:function(e){this.dragMove(e),this.trigger("dragEnd")},dragMove:function(e){var t,i,s=this.railBounds=this.railBounds?this.railBounds:n.bounds(this.elementRail);"horizontal"===this.orientation?(t=e.pageX,i=t<s.left?0:t>s.right?100:100*n.between((t-s.left)/s.width,0,1)):(t=e.pageY,i=t>=s.bottom?0:t<=s.top?100:100*n.between((s.height-(t-s.top))/s.height,0,1));var o=this.limit(i);return this.render(o),this.update(o),!1},tap:function(e){this.railBounds=n.bounds(this.elementRail),this.dragMove(e)},limit:function(e){return e},update:function(e){this.trigger("update",{percentage:e})},render:function(e){e=Math.max(0,Math.min(e,100)),"horizontal"===this.orientation?(this.elementThumb.style.left=e+"%",this.elementProgress.style.width=e+"%"):(this.elementThumb.style.bottom=e+"%",this.elementProgress.style.height=e+"%")},updateBuffer:function(e){this.elementBuffer.style.width=e+"%"},element:function(){return this.el}});return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(123),i(48),i(1),i(275)],s=function(e,t,i,n){function s(){return!!navigator.requestMediaKeySystemAccess&&!!MediaKeySystemAccess.prototype.getConfiguration||!!HTMLMediaElement.prototype.webkitGenerateKeyRequest||!!window.MSMediaKeys}function o(t){return!!t.clearkey||!!t.widevine&&e.isChrome()||!!t.playready&&e.isIE()}function r(n,r){var a=t(r);if(!e.isChrome()&&!e.isIETrident(11)&&!e.isFF())return!1;if(!a("dash"))return!1;if(n.drm&&(!a("drm")||!o(n.drm)||!s()))return!1;var l=window.MediaSource;if(!window.HTMLVideoElement||!l)return!1;var c=!0;return n.mediaTypes&&(c=i.all(n.mediaTypes,function(e){return l.isTypeSupported(e)})),c&&("dash"===n.type||"mpd"===n.type||(n.file||"").indexOf("mpd-time-csf")>-1)}var a=i.find(n,i.matches({name:"flash"})),l=a.supports;return a.supports=function(i,n){if(!e.isFlashSupported())return!1;var s=i&&i.type;if("hls"===s||"m3u8"===s){var o=t(n);return o("hls")}return l.apply(this,arguments)},n.push({name:"shaka",supports:r}),n.push({name:"caterpillar",supports:function(i,n){if(e.isChrome()&&!e.isMobile()){var s=i&&i.type,o=i&&i.file;if(o.indexOf(".m3u8")>-1||"hls"===s||"m3u8"===s){var r=t(n);return r("hls")}}}}),n}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,i){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function s(e,t,i){this.helpers=e||{},this.partials=t||{},this.decorators=i||{},l.registerDefaultHelpers(this),c.registerDefaultDecorators(this)}t.__esModule=!0,t.HandlebarsEnvironment=s;var o=i(20),r=i(39),a=n(r),l=i(241),c=i(239),u=i(249),h=n(u),d="4.0.5";t.VERSION=d;var p=7;t.COMPILER_REVISION=p;var f={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0"};t.REVISION_CHANGES=f;var g="[object Object]";s.prototype={constructor:s,logger:h["default"],log:h["default"].log,registerHelper:function(e,t){if(o.toString.call(e)===g){if(t)throw new a["default"]("Arg not supported with multiple helpers");o.extend(this.helpers,e)}else this.helpers[e]=t},unregisterHelper:function(e){delete this.helpers[e]},registerPartial:function(e,t){if(o.toString.call(e)===g)o.extend(this.partials,e);else{if("undefined"==typeof t)throw new a["default"]('Attempting to register a partial called "'+e+'" as undefined');this.partials[e]=t}},unregisterPartial:function(e){delete this.partials[e]},registerDecorator:function(e,t){if(o.toString.call(e)===g){if(t)throw new a["default"]("Arg not supported with multiple decorators");o.extend(this.decorators,e)}else this.decorators[e]=t},unregisterDecorator:function(e){delete this.decorators[e]}};var m=h["default"].log;t.log=m,t.createFrame=o.createFrame,t.logger=h["default"]},function(e,t,i){var n,s;n=[i(2),i(1)],s=function(e,t){function n(i){t.each(i,function(t,n){i[n]=e.serialize(t)})}function s(e){return e.slice&&"px"===e.slice(-2)&&(e=e.slice(0,-2)),e}function o(t,i){if(-1===i.toString().indexOf("%"))return 0;if("string"!=typeof t||!e.exists(t))return 0;if(/^\d*\.?\d+%$/.test(t))return t;var n=t.indexOf(":");if(-1===n)return 0;var s=parseFloat(t.substr(0,n)),o=parseFloat(t.substr(n+1));return 0>=s||0>=o?0:o/s*100+"%"}var r={autostart:!1,controls:!0,displaytitle:!0,displaydescription:!0,mobilecontrols:!1,repeat:!1,castAvailable:!1,skin:"seven",stretching:"uniform",mute:!1,volume:90,width:480,height:270},a=function(a,l){var c=l&&l.getAllItems(),u=t.extend({},(window.jwplayer||{}).defaults,c,a);n(u);var h=t.extend({},r,u);if("."===h.base&&(h.base=e.getScriptPath("jwplayer.js")),h.base=(h.base||e.loadFrom()).replace(/\/?$/,"/"),i.p=h.base,h.width=s(h.width),h.height=s(h.height),h.flashplayer=h.flashplayer||e.getScriptPath("jwplayer.js")+"jwplayer.flash.swf","http:"===window.location.protocol&&(h.flashplayer=h.flashplayer.replace("https","http")),h.aspectratio=o(h.aspectratio,h.width),t.isObject(h.skin)&&(h.skinUrl=h.skin.url,h.skinColorInactive=h.skin.inactive,h.skinColorActive=h.skin.active,h.skinColorBackground=h.skin.background,h.skin=t.isString(h.skin.name)?h.skin.name:r.skin),t.isString(h.skin)&&h.skin.indexOf(".xml")>0&&(console.log("JW Player does not support XML skins, please update your config"),h.skin=h.skin.replace(".xml","")),h.aspectratio||delete h.aspectratio,!h.playlist){var d=t.pick(h,["title","description","type","mediaid","image","file","sources","tracks","preload"]);h.playlist=[d]}return h};return a}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(14),i(40),i(269),i(270),i(84)],s=function(e,t,i,n,s){function o(t){for(var o={},a=0;a<t.childNodes.length;a++){var l=t.childNodes[a],u=c(l);if(u)switch(u.toLowerCase()){case"enclosure":o.file=e.xmlAttribute(l,"url");break;case"title":o.title=r(l);break;case"guid":o.mediaid=r(l);break;case"pubdate":o.date=r(l);break;case"description":o.description=r(l);break;case"link":o.link=r(l);break;case"category":o.tags?o.tags+=r(l):o.tags=r(l)}}return o=n(t,o),o=i(t,o),new s(o)}var r=t.textContent,a=t.getChildNode,l=t.numChildren,c=t.localName,u={};return u.parse=function(e){for(var t=[],i=0;i<l(e);i++){var n=a(e,i),s=c(n).toLowerCase();if("channel"===s)for(var r=0;r<l(n);r++){var u=a(n,r);"item"===c(u).toLowerCase()&&t.push(o(u))}}return t},u}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(40),i(116),i(2),i(4),i(3),i(1)],s=function(e,t,i,n,s,o){var r=function(){function r(s){var r=i.tryCatch(function(){var i,r=s.responseXML?s.responseXML.childNodes:null,a="";if(r){for(var u=0;u<r.length&&(a=r[u],8===a.nodeType);u++);"xml"===e.localName(a)&&(a=a.nextSibling),"rss"===e.localName(a)&&(i={playlist:t.parse(a)})}if(!i)try{var h=JSON.parse(s.responseText);if(o.isArray(h))i={playlist:h};else{if(!o.isArray(h.playlist))throw null;i=h}}catch(d){return void l("Not a valid RSS/JSON feed")}c.trigger(n.JWPLAYER_PLAYLIST_LOADED,i)});r instanceof i.Error&&l()}function a(e){l("Playlist load error: "+e)}function l(e){c.trigger(n.JWPLAYER_ERROR,{message:e?e:"Error loading file"})}var c=o.extend(this,s);this.load=function(e){i.ajax(e,r,a)},this.destroy=function(){this.off()}};return r}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(84),i(119),i(1),i(33)],s=function(e,t,i,n){function s(e,t){for(var i=0;i<e.length;i++){var n=e[i],s=t.choose(n);if(s)return n.type}return null}var o=function(t){return t=i.isArray(t)?t:[t],i.compact(i.map(t,e))};o.filterPlaylist=function(e,t,n,s,o,l){var c=[];return i.each(e,function(e){e=i.extend({},e),e.allSources=r(e.sources,n,e.drm||s,e.preload||o),e.sources=a(e.allSources,t),e.sources.length&&(e.file=e.sources[0].file,(e.preload||o)&&(e.preload=e.preload||o),(e.feedid||l)&&(e.feedid=e.feedid||l),c.push(e))}),c};var r=function(e,n,s,o){return i.compact(i.map(e,function(e){return i.isObject(e)?(void 0!==n&&null!==n&&(e.androidhls=n),(e.drm||s)&&(e.drm=e.drm||s),(e.preload||o)&&(e.preload=e.preload||o),t(e)):void 0}))},a=function(e,t){t&&t.choose||(t=new n({primary:t?"flash":null}));var o=s(e,t);return i.where(e,{type:o})};return o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(14),i(1)],s=function(e,t,i){var n={"default":!1},s=function(s){if(s&&s.file){var o=i.extend({},n,s);o.file=t.trim(""+o.file);var r=/^[^\/]+\/(?:x-)?([^\/]+)$/;if(e.isYouTube(o.file)?o.type="youtube":e.isRtmp(o.file)?o.type="rtmp":r.test(o.type)?o.type=o.type.replace(r,"$1"):o.type||(o.type=t.extension(o.file)),o.type){switch(o.type){case"m3u8":case"vnd.apple.mpegurl":o.type="hls";break;case"dash+xml":o.type="dash";break;case"smil":o.type="rtmp";break;case"m4a":o.type="aac"}return i.each(o,function(e,t){""===e&&delete o[t]}),o}}};return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(56),i(4),i(3),i(32),i(1)],s=function(e,t,i,n,s,o){var r={FLASH:0,JAVASCRIPT:1,HYBRID:2},a=function(a){function l(){switch(t.getPluginPathType(a)){case t.pluginPathType.ABSOLUTE:return a;case t.pluginPathType.RELATIVE:return e.getAbsolutePath(a,window.location.href)}}function c(){o.defer(function(){m=s.loaderstatus.COMPLETE,g.trigger(i.COMPLETE)})}function u(){m=s.loaderstatus.ERROR,g.trigger(i.ERROR,{url:a})}var h,d,p,f,g=o.extend(this,n),m=s.loaderstatus.NEW;this.load=function(){if(m===s.loaderstatus.NEW){if(a.lastIndexOf(".swf")>0)return h=a,m=s.loaderstatus.COMPLETE,void g.trigger(i.COMPLETE);if(t.getPluginPathType(a)===t.pluginPathType.CDN)return m=s.loaderstatus.COMPLETE,void g.trigger(i.COMPLETE);m=s.loaderstatus.LOADING;var e=new s(l());e.on(i.COMPLETE,c),e.on(i.ERROR,u),e.load()}},this.registerPlugin=function(e,t,n,o){f&&(clearTimeout(f),f=void 0),p=t,n&&o?(h=o,d=n):"string"==typeof n?h=n:"function"==typeof n?d=n:n||o||(h=e),m=s.loaderstatus.COMPLETE,g.trigger(i.COMPLETE)},this.getStatus=function(){return m},this.getPluginName=function(){return t.getPluginName(a)},this.getFlashPath=function(){if(h)switch(t.getPluginPathType(h)){case t.pluginPathType.ABSOLUTE:return h;case t.pluginPathType.RELATIVE:return a.lastIndexOf(".swf")>0?e.getAbsolutePath(h,window.location.href):e.getAbsolutePath(h,l())}return null},this.getJS=function(){return d},this.getTarget=function(){return p},this.getPluginmode=function(){return void 0!==typeof h&&void 0!==typeof d?r.HYBRID:void 0!==typeof h?r.FLASH:void 0!==typeof d?r.JAVASCRIPT:void 0},this.getNewInstance=function(e,t,i){return new d(e,t,i)},this.getURL=function(){return a}};return a}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,function(e,t,i){var n,s;n=[i(1)],s=function(e){function t(e){return function(){return n(e)}}var i={},n=e.memoize(function(e){var t=navigator.userAgent.toLowerCase();return null!==t.match(e)}),s=i.isInt=function(e){return parseFloat(e)%1===0};i.isFlashSupported=function(){var e=i.flashVersion();return e&&e>=11.2},i.isFF=t(/firefox/i),i.isIPod=t(/iP(hone|od)/i),i.isIPad=t(/iPad/i),i.isSafari602=t(/Macintosh.*Mac OS X 10_8.*6\.0\.\d* Safari/i),i.isOSX=t(/Mac OS X/i),i.isEdge=t(/\sedge\/\d+/i);var o=i.isIETrident=function(e){return i.isEdge()?!0:e?(e=parseFloat(e).toFixed(1),n(new RegExp("trident/.+rv:\\s*"+e,"i"))):n(/trident/i)},r=i.isMSIE=function(e){return e?(e=parseFloat(e).toFixed(1),n(new RegExp("msie\\s*"+e,"i"))):n(/msie/i)},a=t(/chrome/i);i.isChrome=function(){return a()&&!i.isEdge()},i.isIE=function(e){return e?(e=parseFloat(e).toFixed(1),e>=11?o(e):r(e)):r()||o()},i.isSafari=function(){return n(/safari/i)&&!n(/chrome/i)&&!n(/chromium/i)&&!n(/android/i)};var l=i.isIOS=function(e){return n(e?new RegExp("iP(hone|ad|od).+\\s(OS\\s"+e+"|.*\\sVersion/"+e+")","i"):/iP(hone|ad|od)/i)};i.isAndroidNative=function(e){return c(e,!0)};var c=i.isAndroid=function(e,t){return t&&n(/chrome\/[123456789]/i)&&!n(/chrome\/18/)?!1:e?(s(e)&&!/\./.test(e)&&(e=""+e+"."),n(new RegExp("Android\\s*"+e,"i"))):n(/Android/i)};return i.isMobile=function(){return l()||c()},i.isIframe=function(){return window.frameElement&&"IFRAME"===window.frameElement.nodeName},i.flashVersion=function(){if(i.isAndroid())return 0;var e,t=navigator.plugins;if(t&&(e=t["Shockwave Flash"],e&&e.description))return parseFloat(e.description.replace(/\D+(\d+\.?\d*).*/,"$1"));if("undefined"!=typeof window.ActiveXObject){try{if(e=new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash"))return parseFloat(e.GetVariable("$version").split(" ")[1].replace(/\s*,\s*/,"."))}catch(n){return 0}return e}return 0},i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(14),i(1),i(279)],s=function(e,t,i){var n={};n.createElement=function(e){var t=document.createElement("div");return t.innerHTML=e,t.firstChild},n.styleDimension=function(e){return e+(e.toString().indexOf("%")>0?"":"px")};var s=function(e){return t.isString(e.className)?e.className.split(" "):[]},o=function(t,i){i=e.trim(i),t.className!==i&&(t.className=i)};return n.classList=function(e){return e.classList?e.classList:s(e)},n.hasClass=i.hasClass,n.addClass=function(e,i){var n=s(e),r=t.isArray(i)?i:i.split(" ");t.each(r,function(e){t.contains(n,e)||n.push(e)}),o(e,n.join(" "))},n.removeClass=function(e,i){var n=s(e),r=t.isArray(i)?i:i.split(" ");o(e,t.difference(n,r).join(" "))},n.replaceClass=function(e,t,i){var n=e.className||"";t.test(n)?n=n.replace(t,i):i&&(n+=" "+i),o(e,n)},n.toggleClass=function(e,i,s){var o=n.hasClass(e,i);s=t.isBoolean(s)?s:!o,s!==o&&(s?n.addClass(e,i):n.removeClass(e,i))},n.emptyElement=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},n.addStyleSheet=function(e){var t=document.createElement("link");t.rel="stylesheet",t.href=e,document.getElementsByTagName("head")[0].appendChild(t)},n.empty=function(e){if(e)for(;e.childElementCount>0;)e.removeChild(e.children[0])},n.bounds=function(e){var t={left:0,right:0,width:0,height:0,top:0,bottom:0};if(!e||!document.body.contains(e))return t;var i=e.getBoundingClientRect(e),n=window.pageYOffset,s=window.pageXOffset;return i.width||i.height||i.left||i.top?(t.left=i.left+s,t.right=i.right+s,t.top=i.top+n,t.bottom=i.bottom+n,t.width=i.right-i.left,t.height=i.bottom-i.top,t):t},n}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(3),i(1)],s=function(e,t){function i(){}var n=function(e,i){var n,s=this;n=e&&t.has(e,"constructor")?e.constructor:function(){return s.apply(this,arguments)},t.extend(n,s,i);var o=function(){this.constructor=n};return o.prototype=s.prototype,n.prototype=new o,e&&t.extend(n.prototype,e),n.__super__=s.prototype,n};return i.extend=n,t.extend(i.prototype,e),i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(44),i(1),i(86),i(85),i(46)],s=function(e,t,i,n,s){var o={};return o.repo=t.memoize(function(){var t=s.split("+")[0],n=e.repo+t+"/";return i.isHTTPS()?n.replace(/^http:/,"https:"):n}),o.versionCheck=function(e){var t=("0"+e).split(/\W/),i=s.split(/\W/),n=parseFloat(t[0]),o=parseFloat(i[0]);return n>o?!1:!(n===o&&parseFloat("0"+t[1])>parseFloat(i[1]))},o.loadFrom=function(){return o.repo()},o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1)],s=function(e){var t=function(){var t={},i={},n={},s={};return{start:function(i){t[i]=e.now(),n[i]=n[i]+1||1},end:function(n){if(t[n]){var s=e.now()-t[n];i[n]=i[n]+s||s}},dump:function(){return{counts:n,sums:i,events:s}},tick:function(t,i){s[t]=i||e.now()},between:function(e,t){return s[t]&&s[e]?s[t]-s[e]:-1}}};return t}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){var e=function(e,i,n){if(i=i||this,n=n||[],window.jwplayer&&window.jwplayer.debug)return e.apply(i,n);try{return e.apply(i,n)}catch(s){return new t(e.name,s)}},t=function(e,t){this.name=e,this.message=t.message||t.toString(),this.error=t};return{tryCatch:e,Error:t}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){return document.createElement("video")}.apply(t,n),!(void 0!==s&&(e.exports=s))},,function(e,t,i){var n,s;n=[i(257),i(41),i(1)],s=function(e,t,i){var n=e.selectPlayer,s=function(){var e=n.apply(this,arguments);return e?e:{registerPlugin:function(e,i,n){"jwpsrv"!==e&&t.registerPlugin(e,i,n)}}};return i.extend(e,{selectPlayer:s})}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,function(e,t,i){var n,s;n=[i(2),i(136),i(48)],s=function(e,t,i){var n="invalid",s="RnXcsftYjWRDA^Uy",o=function(o){function r(o){e.exists(o)||(o="");try{o=t.decrypt(o,s);var r=o.split("/");a=r[0],"pro"===a&&(a="premium");var u=i(a);if(r.length>2&&u("setup")){l=r[1];var h=parseInt(r[2]);h>0&&(c=new Date,c.setTime(h))}else a=n}catch(d){a=n}}var a,l,c;this.edition=function(){return c&&c.getTime()<(new Date).getTime()?n:a},this.token=function(){return l},this.expiration=function(){return c},r(o)};return o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){var e=function(e){return window.atob(e)},t=function(e){return unescape(encodeURIComponent(e))},i=function(e){try{return decodeURIComponent(escape(e))}catch(t){return e}},n=function(e){for(var t=new Array(Math.ceil(e.length/4)),i=0;i<t.length;i++)t[i]=e.charCodeAt(4*i)+(e.charCodeAt(4*i+1)<<8)+(e.charCodeAt(4*i+2)<<16)+(e.charCodeAt(4*i+3)<<24);return t},s=function(e){for(var t=new Array(e.length),i=0;i<e.length;i++)t[i]=String.fromCharCode(255&e[i],e[i]>>>8&255,e[i]>>>16&255,e[i]>>>24&255);return t.join("")};return{decrypt:function(o,r){if(o=String(o),r=String(r),0==o.length)return"";for(var a,l,c=n(e(o)),u=n(t(r).slice(0,16)),h=c.length,d=c[h-1],p=c[0],f=2654435769,g=Math.floor(6+52/h),m=g*f;0!=m;){l=m>>>2&3;for(var v=h-1;v>=0;v--)d=c[v>0?v-1:h-1],a=(d>>>5^p<<2)+(p>>>3^d<<4)^(m^p)+(u[3&v^l]^d),p=c[v]-=a;m-=f}var y=s(c);return y=y.replace(/\0+$/,""),i(y)}}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(298),i(4),i(315)],s=function(e,t,i){var n=function(n,s){var o=new e(n,s),r=o.setup;return o.setup=function(){if(r.call(this),"trial"===s.get("edition")){var e=document.createElement("div");e.className="jw-icon jw-watermark",this.element().appendChild(e)}s.on("change:skipButton",this.onSkipButton,this),s.on("change:castActive change:playlistItem",this.showDisplayIconImage,this)},o.showDisplayIconImage=function(e){var t=e.get("castActive"),i=e.get("playlistItem"),n=o.controlsContainer().getElementsByClassName("jw-display-icon-container")[0];t&&i&&i.image?(n.style.backgroundImage='url("'+i.image+'")',n.style.backgroundSize="contain"):(n.style.backgroundImage="",n.style.backgroundSize="")},o.onSkipButton=function(e,t){t?this.addSkipButton():this._skipButton&&(this._skipButton.destroy(),this._skipButton=null)},o.addSkipButton=function(){this._skipButton=new i(this.instreamModel),this._skipButton.on(t.JWPLAYER_AD_SKIPPED,function(){this.api.skipAd()},this),this.controlsContainer().appendChild(this._skipButton.element())},o};return n}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,i){t=e.exports=i(224)(),t.push([e.id,".jw-reset{color:inherit;background-color:transparent;padding:0;margin:0;float:none;font-family:Arial,Helvetica,sans-serif;font-size:1em;line-height:1em;list-style:none;text-align:left;text-transform:none;vertical-align:baseline;border:0;direction:ltr;font-variant:inherit;font-stretch:inherit;-webkit-tap-highlight-color:rgba(255,255,255,0)}@font-face{font-family:jw-icons;src:url("+i(226)+") format('woff'),url("+i(225)+') format(\'truetype\');font-weight:400;font-style:normal}.jw-controlbar .jw-menu .jw-option:before,.jw-icon-display,.jw-icon-inline,.jw-icon-tooltip{font-family:jw-icons;-webkit-font-smoothing:antialiased;font-style:normal;font-weight:400;text-transform:none;background-color:transparent;font-variant:normal;-webkit-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";-moz-osx-font-smoothing:grayscale}.jw-icon-audio-tracks:before{content:"\\E600"}.jw-icon-buffer:before{content:"\\E601"}.jw-icon-cast:before{content:"\\E603"}.jw-icon-cast.jw-off:before{content:"\\E602"}.jw-icon-cc:before{content:"\\E605"}.jw-icon-cue:before,.jw-icon-menu-bullet:before{content:"\\E606"}.jw-icon-error:before{content:"\\E607"}.jw-icon-fullscreen:before{content:"\\E608"}.jw-icon-fullscreen.jw-off:before{content:"\\E613"}.jw-icon-hd:before{content:"\\E60A"}.jw-rightclick-logo:before,.jw-watermark:before{content:"\\E60B"}.jw-icon-next:before{content:"\\E60C"}.jw-icon-pause:before{content:"\\E60D"}.jw-icon-play:before{content:"\\E60E"}.jw-icon-prev:before{content:"\\E60F"}.jw-icon-replay:before{content:"\\E610"}.jw-icon-volume:before{content:"\\E612"}.jw-icon-volume.jw-off:before{content:"\\E611"}.jw-icon-more:before{content:"\\E614"}.jw-icon-close:before{content:"\\E615"}.jw-icon-playlist:before{content:"\\E616"}.jwplayer{width:100%;font-size:16px;position:relative;display:block;min-height:0;overflow:hidden;box-sizing:border-box;font-family:Arial,Helvetica,sans-serif;background-color:#000;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.jwplayer *{box-sizing:inherit}.jwplayer.jw-flag-aspect-mode{height:auto!important}.jwplayer.jw-flag-aspect-mode .jw-aspect{display:block}.jwplayer .jw-aspect{display:none}.jwplayer.jw-no-focus:focus,.jwplayer .jw-swf{outline:none}.jwplayer.jw-ie:focus{outline:1px dotted #585858}.jwplayer:hover .jw-display-icon-container{background-color:#333;background:#333;background-size:#333}.jw-controls,.jw-media,.jw-overlays,.jw-preview{position:absolute;width:100%;height:100%;top:0;left:0;bottom:0;right:0}.jw-media{overflow:hidden;cursor:pointer}.jw-overlays{cursor:auto}.jw-media.jw-media-show{visibility:visible;opacity:1}.jw-controls.jw-controls-disabled{display:none}.jw-controls .jw-controls-right{position:absolute;top:0;right:0;left:0;bottom:2em}.jw-text{height:1em;font-family:Arial,Helvetica,sans-serif;font-size:.75em;font-style:normal;font-weight:400;color:#fff;text-align:center;font-variant:normal;font-stretch:normal}.jw-plugin{position:absolute;bottom:2.5em}.jw-plugin .jw-banner{max-width:100%;opacity:0;cursor:pointer;position:absolute;margin:auto auto 0;left:0;right:0;bottom:0;display:block}.jw-cast-screen{width:100%;height:100%}.jw-instream{position:absolute;top:0;right:0;bottom:0;left:0;display:none}.jw-icon-playback:before{content:"\\E60E"}.jw-captions,.jw-controls,.jw-overlays,.jw-preview,.jw-title{pointer-events:none}.jw-controlbar,.jw-display-icon-container,.jw-dock,.jw-logo,.jw-media,.jw-overlays>div,.jw-skip{pointer-events:all}.jwplayer video{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;margin:auto;background:transparent}.jwplayer video::-webkit-media-controls-start-playback-button{display:none}.jwplayer.jw-stretch-uniform video{-o-object-fit:contain;object-fit:contain}.jwplayer.jw-stretch-none video{-o-object-fit:none;object-fit:none}.jwplayer.jw-stretch-fill video{-o-object-fit:cover;object-fit:cover}.jwplayer.jw-stretch-exactfit video{-o-object-fit:fill;object-fit:fill}.jw-click,.jw-preview{position:absolute;width:100%;height:100%}.jw-preview{display:none;opacity:1;visibility:visible;background:#000 no-repeat 50% 50%}.jw-error .jw-preview,.jw-stretch-uniform .jw-preview,.jwplayer .jw-preview{background-size:contain}.jw-stretch-none .jw-preview{background-size:auto auto}.jw-stretch-fill .jw-preview{background-size:cover}.jw-stretch-exactfit .jw-preview{background-size:100% 100%}.jw-display-icon-container{position:relative;top:50%;display:table;height:3.5em;width:3.5em;margin:-1.75em auto 0;cursor:pointer}.jw-display-icon-container .jw-icon-display{position:relative;display:table-cell;text-align:center;vertical-align:middle!important;background-position:50% 50%;background-repeat:no-repeat;font-size:2em}.jw-flag-audio-player .jw-display-icon-container,.jw-flag-dragging .jw-display-icon-container{display:none}.jw-icon{font-family:jw-icons;-webkit-font-smoothing:antialiased;font-style:normal;font-weight:400;text-transform:none;background-color:transparent;font-variant:normal;-webkit-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";-moz-osx-font-smoothing:grayscale}.jw-controlbar{display:table;position:absolute;right:0;left:0;bottom:0;height:2em;padding:0 .25em}.jw-controlbar .jw-hidden{display:none}.jw-controlbar.jw-drawer-expanded .jw-controlbar-center-group,.jw-controlbar.jw-drawer-expanded .jw-controlbar-left-group{opacity:0}.jw-background-color{background-color:#414040}.jw-group{display:table-cell}.jw-controlbar-center-group{width:100%;padding:0 .25em}.jw-controlbar-center-group .jw-slider-time,.jw-controlbar-center-group .jw-text-alt{padding:0}.jw-controlbar-center-group .jw-text-alt{display:none}.jw-controlbar-left-group,.jw-controlbar-right-group{white-space:nowrap}.jw-icon-display:hover,.jw-icon-inline:hover,.jw-icon-tooltip:hover,.jw-knob:hover,.jw-option:before:hover{color:#eee}.jw-icon-inline,.jw-icon-tooltip,.jw-slider-horizontal,.jw-text-duration,.jw-text-elapsed{display:inline-block;height:2em;position:relative;line-height:2em;vertical-align:middle;cursor:pointer}.jw-icon-inline,.jw-icon-tooltip{min-width:1.25em;text-align:center}.jw-icon-playback{min-width:2.25em}.jw-icon-volume{min-width:1.75em;text-align:left}.jw-time-tip{line-height:1em;pointer-events:none}.jw-icon-inline:after,.jw-icon-tooltip:after{width:100%;height:100%;font-size:1em}.jw-icon-cast,.jw-icon-inline.jw-icon-volume,.jw-slider-volume.jw-slider-horizontal{display:none}.jw-dock{margin:.75em;display:block;opacity:1;clear:right}.jw-dock:after{content:\'\';clear:both;display:block}.jw-dock-button{cursor:pointer;float:right;position:relative;width:2.5em;height:2.5em;margin:.5em}.jw-dock-button .jw-arrow{display:none;position:absolute;bottom:-.2em;width:.5em;height:.2em;left:50%;margin-left:-.25em}.jw-dock-button .jw-overlay{display:none;position:absolute;top:2.5em;right:0;margin-top:.25em;padding:.5em;white-space:nowrap}.jw-dock-button:hover .jw-arrow,.jw-dock-button:hover .jw-overlay{display:block}.jw-dock-image{width:100%;height:100%;background-position:50% 50%;background-repeat:no-repeat;opacity:.75}.jw-title{display:none;position:absolute;top:0;width:100%;font-size:.875em;height:8em;background:-webkit-linear-gradient(top,#000,#000 18%,transparent);background:linear-gradient(180deg,#000 0,#000 18%,transparent)}.jw-title-primary,.jw-title-secondary{padding:.75em 1.5em;min-height:2.5em;width:100%;color:#fff;white-space:nowrap;text-overflow:ellipsis;overflow-x:hidden}.jw-title-primary{font-weight:700}.jw-title-secondary{margin-top:-.5em}.jw-slider-container{display:inline-block;height:1em;position:relative;touch-action:none}.jw-buffer,.jw-progress,.jw-rail{position:absolute;cursor:pointer}.jw-progress{background-color:#fff}.jw-rail{background-color:#aaa}.jw-buffer{background-color:#202020}.jw-cue,.jw-knob{position:absolute;cursor:pointer}.jw-cue{background-color:#fff;width:.1em;height:.4em}.jw-knob{background-color:#aaa;width:.4em;height:.4em}.jw-slider-horizontal{width:4em;height:1em}.jw-slider-horizontal.jw-slider-volume{margin-right:5px}.jw-slider-horizontal .jw-buffer,.jw-slider-horizontal .jw-progress,.jw-slider-horizontal .jw-rail{width:100%;height:.4em}.jw-slider-horizontal .jw-buffer,.jw-slider-horizontal .jw-progress{width:0}.jw-slider-horizontal .jw-progress,.jw-slider-horizontal .jw-rail,.jw-slider-horizontal .jw-slider-container{width:100%}.jw-slider-horizontal .jw-knob{left:0;margin-left:-.325em}.jw-slider-vertical{width:.75em;height:4em;bottom:0;position:absolute;padding:1em}.jw-slider-vertical .jw-buffer,.jw-slider-vertical .jw-progress,.jw-slider-vertical .jw-rail{bottom:0;height:100%}.jw-slider-vertical .jw-buffer,.jw-slider-vertical .jw-progress{height:0}.jw-slider-vertical .jw-progress,.jw-slider-vertical .jw-rail,.jw-slider-vertical .jw-slider-container{bottom:0;width:.75em;height:100%;left:0;right:0;margin:0 auto}.jw-slider-vertical .jw-slider-container{height:4em;position:relative}.jw-slider-vertical .jw-knob{bottom:0;left:0;right:0;margin:0 auto}.jw-slider-time{right:0;left:0;width:100%}.jw-tooltip-time{position:absolute}.jw-slider-volume .jw-buffer{display:none}.jw-captions{position:absolute;display:none;margin:0 auto;width:100%;left:0;bottom:3em;right:0;max-width:90%;text-align:center}.jw-captions.jw-captions-enabled{display:block}.jw-captions-window{display:none;padding:.25em;border-radius:.25em}.jw-captions-text,.jw-captions-window.jw-captions-window-active{display:inline-block}.jw-captions-text{color:#fff;background-color:#000;word-wrap:break-word;white-space:pre-line;font-style:normal;font-weight:400;text-align:center;text-decoration:none;line-height:1.3em;padding:.1em .8em}.jwplayer video::-webkit-media-controls{-webkit-box-pack:start;justify-content:flex-start}.jwplayer video::-webkit-media-text-track-container{max-height:84.5%;line-height:1.3em}.jwplayer.jw-flag-compact-player video::-webkit-media-text-track-container{max-height:82%}.jwplayer .jw-rightclick{display:none;position:absolute;white-space:nowrap}.jwplayer .jw-rightclick.jw-open{display:block}.jwplayer .jw-rightclick ul{list-style:none;font-weight:700;border-radius:.15em;margin:0;border:1px solid #444;padding:0}.jwplayer .jw-rightclick ul li{background-color:#000;border-bottom:1px solid #444;margin:0}.jwplayer .jw-rightclick ul li .jw-rightclick-logo{font-size:2em;color:#ff0147;vertical-align:middle;padding-right:.3em;margin-right:.3em;border-right:1px solid #444}.jwplayer .jw-rightclick ul li a{color:#fff;text-decoration:none;padding:1em;display:block;font-size:.6875em;line-height:1em}.jwplayer .jw-rightclick ul li:last-child{border-bottom:none}.jwplayer .jw-rightclick ul li:hover{background-color:#1a1a1a;cursor:pointer}.jwplayer .jw-rightclick ul .jw-featured{background-color:#252525;vertical-align:middle}.jwplayer .jw-rightclick ul .jw-featured a{color:#777}.jw-logo{position:absolute;margin:.75em;cursor:pointer;pointer-events:all;background-repeat:no-repeat;background-size:contain;top:auto;right:auto;left:auto;bottom:auto}.jw-logo .jw-flag-audio-player{display:none}.jw-logo-top-right{top:0;right:0}.jw-logo-top-left{top:0;left:0}.jw-logo-bottom-left{bottom:0;left:0}.jw-logo-bottom-right,.jw-watermark{bottom:0;right:0}.jw-watermark{position:absolute;top:50%;left:0;text-align:center;font-size:14em;color:#eee;opacity:.33;pointer-events:none}.jw-icon-tooltip.jw-open .jw-overlay{opacity:1;visibility:visible}.jw-icon-tooltip.jw-hidden,.jw-icon-tooltip.jw-open-drawer:before,.jw-overlay-horizontal{display:none}.jw-icon-tooltip.jw-open-drawer .jw-overlay-horizontal{opacity:1;display:inline-block;vertical-align:top}.jw-overlay:before{position:absolute;top:0;bottom:0;left:-50%;width:100%;background-color:transparent;content:" "}.jw-slider-time .jw-overlay:before{height:1em;top:auto}.jw-menu,.jw-time-tip,.jw-volume-tip{position:relative;left:-50%;border:1px solid #000;margin:0}.jw-volume-tip{width:100%;height:100%;display:block}.jw-time-tip{text-align:center;font-family:inherit;color:#aaa;bottom:1em;border:4px solid #000}.jw-time-tip .jw-text{line-height:1em}.jw-controlbar .jw-overlay{margin:0;position:absolute;bottom:2em;left:50%;opacity:0;visibility:hidden}.jw-controlbar .jw-overlay .jw-contents{position:relative}.jw-controlbar .jw-option{position:relative;white-space:nowrap;cursor:pointer;list-style:none;height:1.5em;font-family:inherit;line-height:1.5em;color:#aaa;padding:0 .5em;font-size:.8em}.jw-controlbar .jw-option:before:hover,.jw-controlbar .jw-option:hover{color:#eee}.jw-controlbar .jw-option:before{padding-right:.125em}.jw-playlist-container ::-webkit-scrollbar-track{background-color:#333;border-radius:10px}.jw-playlist-container ::-webkit-scrollbar{width:5px;border:10px solid #000;border-bottom:0;border-top:0}.jw-playlist-container ::-webkit-scrollbar-thumb{background-color:#fff;border-radius:5px}.jw-tooltip-title{border-bottom:1px solid #444;text-align:left;padding-left:.7em}.jw-playlist{max-height:11em;min-height:4.5em;overflow-x:hidden;overflow-y:scroll;width:calc(100% - 4px)}.jw-playlist .jw-option{height:3em;margin-right:5px;color:#fff;padding-left:1em;font-size:.8em}.jw-playlist .jw-label,.jw-playlist .jw-name{display:inline-block;line-height:3em;text-align:left;overflow:hidden;white-space:nowrap}.jw-playlist .jw-label{width:1em}.jw-playlist .jw-name{width:11em}.jw-skip{cursor:default;position:absolute;float:right;display:inline-block;right:.75em;bottom:3em}.jw-skip.jw-skippable{cursor:pointer}.jw-skip.jw-hidden{visibility:hidden}.jw-skip .jw-skip-icon{display:none;margin-left:-.75em}.jw-skip .jw-skip-icon:before{content:"\\E60C"}.jw-skip .jw-skip-icon,.jw-skip .jw-text{color:#aaa;vertical-align:middle;line-height:1.5em;font-size:.7em}.jw-skip.jw-skippable:hover{cursor:pointer}.jw-skip.jw-skippable:hover .jw-skip-icon,.jw-skip.jw-skippable:hover .jw-text{color:#eee}.jw-skip.jw-skippable .jw-skip-icon{display:inline;margin:0}.jwplayer.jw-state-paused.jw-flag-casting .jw-display-icon-container,.jwplayer.jw-state-playing.jw-flag-casting .jw-display-icon-container{display:table}.jwplayer.jw-flag-casting .jw-display-icon-container{border-radius:0;border:1px solid #fff;position:absolute;top:auto;left:.5em;right:.5em;bottom:50%;margin-bottom:-12.5%;height:50%;width:50%;padding:0;background-repeat:no-repeat;background-position:50%}.jwplayer.jw-flag-casting .jw-display-icon-container .jw-icon{font-size:3em}.jwplayer.jw-flag-casting.jw-state-complete .jw-preview{display:none}.jw-cast{position:absolute;width:100%;height:100%;background-repeat:no-repeat;background-size:auto;background-position:50% 50%}.jw-cast-label{position:absolute;left:.5em;right:.5em;bottom:75%;margin-bottom:1.5em;text-align:center}.jw-cast-name{color:#ccc}.jw-state-idle .jw-preview{display:block}.jw-state-idle .jw-icon-display:before{content:"\\E60E"}.jw-state-idle .jw-captions,.jw-state-idle .jw-controlbar{display:none}.jw-state-idle .jw-title{display:block}.jwplayer.jw-state-playing .jw-display-icon-container{display:none}.jwplayer.jw-state-playing .jw-display-icon-container .jw-icon-display:before,.jwplayer.jw-state-playing .jw-icon-playback:before{content:"\\E60D"}.jwplayer.jw-state-paused .jw-display-icon-container{display:none}.jwplayer.jw-state-paused .jw-display-icon-container .jw-icon-display:before,.jwplayer.jw-state-paused .jw-icon-playback:before{content:"\\E60E"}.jwplayer.jw-state-buffering .jw-display-icon-container .jw-icon-display{-webkit-animation:spin 2s linear infinite;animation:spin 2s linear infinite}.jwplayer.jw-state-buffering .jw-display-icon-container .jw-icon-display:before{content:"\\E601"}@-webkit-keyframes spin{to{-webkit-transform:rotate(1turn)}}@keyframes spin{to{-webkit-transform:rotate(1turn);transform:rotate(1turn)}}.jwplayer.jw-state-buffering .jw-display-icon-container .jw-text{display:none}.jwplayer.jw-state-buffering .jw-icon-playback:before{content:"\\E60D"}.jwplayer.jw-state-complete .jw-preview{display:block}.jwplayer.jw-state-complete .jw-display-icon-container .jw-icon-display:before{content:"\\E610"}.jwplayer.jw-state-complete .jw-display-icon-container .jw-text{display:none}.jwplayer.jw-state-complete .jw-icon-playback:before{content:"\\E60E"}.jwplayer.jw-state-complete .jw-captions{display:none}.jwplayer.jw-state-error .jw-title,body .jw-error .jw-title{display:block}.jwplayer.jw-state-error .jw-title .jw-title-primary,body .jw-error .jw-title .jw-title-primary{white-space:normal}.jwplayer.jw-state-error .jw-preview,body .jw-error .jw-preview{display:block}.jwplayer.jw-state-error .jw-captions,.jwplayer.jw-state-error .jw-controlbar,body .jw-error .jw-captions,body .jw-error .jw-controlbar{display:none}.jwplayer.jw-state-error:hover .jw-display-icon-container,body .jw-error:hover .jw-display-icon-container{cursor:default;color:#fff;background:#000}.jwplayer.jw-state-error .jw-icon-display,body .jw-error .jw-icon-display{cursor:default;font-family:jw-icons;-webkit-font-smoothing:antialiased;font-style:normal;font-weight:400;text-transform:none;background-color:transparent;font-variant:normal;-webkit-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";-moz-osx-font-smoothing:grayscale}.jwplayer.jw-state-error .jw-icon-display:before,body .jw-error .jw-icon-display:before{content:"\\E607"}.jwplayer.jw-state-error .jw-icon-display:hover,body .jw-error .jw-icon-display:hover{color:#fff}body .jw-error{font-size:16px;background-color:#000;color:#eee;width:100%;height:100%;display:table;opacity:1;position:relative}body .jw-error .jw-icon-container{position:absolute;width:100%;height:100%;top:0;left:0;bottom:0;right:0}.jwplayer.jw-flag-cast-available .jw-controlbar{display:table}.jwplayer.jw-flag-cast-available .jw-icon-cast{display:inline-block}.jwplayer.jw-flag-skin-loading .jw-captions,.jwplayer.jw-flag-skin-loading .jw-controls,.jwplayer.jw-flag-skin-loading .jw-title{display:none}.jwplayer.jw-flag-fullscreen{width:100%!important;height:100%!important;top:0;right:0;bottom:0;left:0;z-index:1000;margin:0;position:fixed}.jwplayer.jw-flag-live .jw-controlbar .jw-slider-time,.jwplayer.jw-flag-live .jw-controlbar .jw-text-duration,.jwplayer.jw-flag-live .jw-controlbar .jw-text-elapsed{display:none}.jwplayer.jw-flag-live .jw-controlbar .jw-text-alt{display:inline}.jwplayer.jw-flag-user-inactive.jw-state-playing .jw-controlbar,.jwplayer.jw-flag-user-inactive.jw-state-playing .jw-dock,.jwplayer.jw-flag-user-inactive.jw-state-playing .jw-logo.jw-hide{display:none}.jwplayer.jw-flag-user-inactive.jw-state-playing .jw-captions,.jwplayer.jw-flag-user-inactive.jw-state-playing .jw-plugin{bottom:.5em}.jwplayer.jw-flag-user-inactive.jw-state-playing .jw-media{cursor:none;-webkit-cursor-visibility:auto-hide}.jwplayer.jw-flag-user-inactive.jw-state-playing video::-webkit-media-text-track-container{max-height:none}.jwplayer.jw-flag-user-inactive.jw-state-buffering .jw-controlbar{display:none}.jwplayer.jw-flag-media-audio .jw-controlbar,.jwplayer.jw-flag-media-audio.jw-flag-user-inactive .jw-controlbar{display:table}.jwplayer.jw-flag-media-audio.jw-flag-user-inactive.jw-state-playing .jw-captions,.jwplayer.jw-flag-media-audio.jw-flag-user-inactive.jw-state-playing .jw-plugin{bottom:3em}.jwplayer.jw-flag-media-audio.jw-flag-user-inactive.jw-state-playing video::-webkit-media-text-track-container{max-height:84.5%}.jw-flag-media-audio .jw-preview{display:block}.jwplayer.jw-flag-ads .jw-captions.jw-captions-enabled,.jwplayer.jw-flag-ads .jw-dock,.jwplayer.jw-flag-ads .jw-logo,.jwplayer.jw-flag-ads .jw-preview{display:none}.jwplayer.jw-flag-ads video::-webkit-media-text-track-container{display:none}.jwplayer.jw-flag-ads .jw-controlbar .jw-icon-inline,.jwplayer.jw-flag-ads .jw-controlbar .jw-icon-tooltip,.jwplayer.jw-flag-ads .jw-controlbar .jw-slider-horizontal,.jwplayer.jw-flag-ads .jw-controlbar .jw-text{display:none}.jwplayer.jw-flag-ads .jw-controlbar .jw-icon-fullscreen,.jwplayer.jw-flag-ads .jw-controlbar .jw-icon-playback,.jwplayer.jw-flag-ads .jw-controlbar .jw-icon-volume,.jwplayer.jw-flag-ads .jw-controlbar .jw-slider-volume{display:inline-block}.jwplayer.jw-flag-ads .jw-controlbar .jw-text-alt{display:inline}.jwplayer.jw-flag-ads .jw-controlbar .jw-icon-inline.jw-icon-volume,.jwplayer.jw-flag-ads .jw-controlbar .jw-slider-volume.jw-slider-horizontal{display:inline-block}.jwplayer.jw-flag-ads .jw-controlbar .jw-icon-tooltip.jw-icon-volume{display:none}.jwplayer.jw-flag-ads-googleima .jw-controlbar{display:table;bottom:0}.jwplayer.jw-flag-ads-googleima.jw-flag-touch .jw-controlbar{font-size:1em}.jwplayer.jw-flag-ads-googleima.jw-flag-touch.jw-state-paused .jw-display-icon-container{display:none}.jwplayer.jw-flag-ads-googleima.jw-skin-seven .jw-controlbar{font-size:.9em}.jwplayer.jw-flag-ads-vpaid .jw-controlbar{display:none}.jwplayer.jw-flag-ads-hide-controls .jw-controls{display:none!important}.jwplayer.jw-flag-ads.jw-flag-touch .jw-controlbar{display:table}.jwplayer.jw-flag-overlay-open-related .jw-controls,.jwplayer.jw-flag-overlay-open-related .jw-title,.jwplayer.jw-flag-overlay-open-sharing .jw-controls,.jwplayer.jw-flag-overlay-open-sharing .jw-title,.jwplayer.jw-flag-overlay-open .jw-controls-right .jw-logo,.jwplayer.jw-flag-overlay-open .jw-title{display:none}.jwplayer.jw-flag-rightclick-open{overflow:visible}.jwplayer.jw-flag-rightclick-open .jw-rightclick{z-index:16777215}.jw-flag-controls-disabled .jw-controls{visibility:hidden}.jw-flag-controls-disabled .jw-logo{visibility:visible}.jw-flag-controls-disabled .jw-media{cursor:auto}body .jwplayer.jw-flag-flash-blocked .jw-title{display:block}body .jwplayer.jw-flag-flash-blocked .jw-controls,body .jwplayer.jw-flag-flash-blocked .jw-overlays,body .jwplayer.jw-flag-flash-blocked .jw-preview{display:none}.jw-flag-touch .jw-controlbar,.jw-flag-touch .jw-plugin,.jw-flag-touch .jw-skip{font-size:1.5em}.jw-flag-touch .jw-captions{bottom:4.25em}.jw-flag-touch video::-webkit-media-text-track-container{max-height:70%}.jw-flag-touch .jw-icon-tooltip.jw-open-drawer:before{display:inline;content:"\\E615"}.jw-flag-touch .jw-display-icon-container{pointer-events:none}.jw-flag-touch.jw-state-paused .jw-display-icon-container{display:table}.jw-flag-compact-player .jw-icon-playlist,.jw-flag-compact-player .jw-text-duration,.jw-flag-compact-player .jw-text-elapsed,.jw-flag-touch.jw-state-paused.jw-flag-dragging .jw-display-icon-container{display:none}.jwplayer.jw-flag-audio-player{background-color:transparent}.jwplayer.jw-flag-audio-player .jw-media{visibility:hidden}.jwplayer.jw-flag-audio-player .jw-media object{width:1px;height:1px}.jwplayer.jw-flag-audio-player .jw-display-icon-container,.jwplayer.jw-flag-audio-player .jw-preview{display:none}.jwplayer.jw-flag-audio-player .jw-controlbar{display:table;height:auto;left:0;bottom:0;margin:0;width:100%;min-width:100%;opacity:1}.jwplayer.jw-flag-audio-player .jw-controlbar .jw-icon-fullscreen,.jwplayer.jw-flag-audio-player .jw-controlbar .jw-icon-tooltip{display:none}.jwplayer.jw-flag-audio-player .jw-controlbar .jw-icon-inline.jw-icon-volume,.jwplayer.jw-flag-audio-player .jw-controlbar .jw-slider-volume.jw-slider-horizontal{display:inline-block}.jwplayer.jw-flag-audio-player .jw-controlbar .jw-icon-tooltip.jw-icon-volume{display:none}.jwplayer.jw-flag-audio-player.jw-flag-user-inactive .jw-controlbar{display:table}.jw-skin-seven .jw-background-color{background:#000}.jw-skin-seven .jw-controlbar{border-top:1px solid #333;height:2.5em}.jw-skin-seven .jw-group{vertical-align:middle}.jw-skin-seven .jw-playlist{background-color:rgba(0,0,0,.5)}.jw-skin-seven .jw-playlist-container{left:-43%;background-color:rgba(0,0,0,.5)}.jw-skin-seven .jw-playlist-container .jw-option{border-bottom:1px solid #444}.jw-skin-seven .jw-playlist-container .jw-option.jw-active-option,.jw-skin-seven .jw-playlist-container .jw-option:hover{background-color:#000}.jw-skin-seven .jw-playlist-container .jw-option:hover .jw-label{color:#ff0046}.jw-skin-seven .jw-playlist-container .jw-icon-playlist{margin-left:0}.jw-skin-seven .jw-playlist-container .jw-label .jw-icon-play{color:#ff0046}.jw-skin-seven .jw-playlist-container .jw-label .jw-icon-play:before{padding-left:0}.jw-skin-seven .jw-tooltip-title{background-color:#000;color:#fff}.jw-skin-seven .jw-button-color,.jw-skin-seven .jw-text{color:#fff}.jw-skin-seven .jw-button-color:hover,.jw-skin-seven .jw-toggle{color:#ff0046}.jw-skin-seven .jw-toggle.jw-off{color:#fff}.jw-skin-seven .jw-controlbar .jw-icon:before,.jw-skin-seven .jw-text-duration,.jw-skin-seven .jw-text-elapsed{padding:0 .7em}.jw-skin-seven .jw-controlbar .jw-icon-prev:before{padding-right:.25em}.jw-skin-seven .jw-controlbar .jw-icon-playlist:before{padding:0 .45em}.jw-skin-seven .jw-controlbar .jw-icon-next:before{padding-left:.25em}.jw-skin-seven .jw-icon-next,.jw-skin-seven .jw-icon-prev{font-size:.7em}.jw-skin-seven .jw-icon-prev:before{border-left:1px solid #666}.jw-skin-seven .jw-icon-next:before{border-right:1px solid #666}.jw-skin-seven .jw-icon-display{color:#fff}.jw-skin-seven .jw-icon-display:before{padding-left:0}.jw-skin-seven .jw-display-icon-container{border-radius:50%;border:1px solid #333}.jw-skin-seven .jw-rail{background-color:#384154;box-shadow:none}.jw-skin-seven .jw-buffer{background-color:#666f82}.jw-skin-seven .jw-progress{background:#ff0046}.jw-skin-seven .jw-knob{width:.6em;height:.6em;background-color:#fff;box-shadow:0 0 0 1px #000;border-radius:1em}.jw-skin-seven .jw-slider-horizontal .jw-slider-container{height:.95em}.jw-skin-seven .jw-slider-horizontal .jw-buffer,.jw-skin-seven .jw-slider-horizontal .jw-progress,.jw-skin-seven .jw-slider-horizontal .jw-rail{height:.2em;border-radius:0}.jw-skin-seven .jw-slider-horizontal .jw-knob{top:-.2em}.jw-skin-seven .jw-slider-horizontal .jw-cue{top:-.05em;width:.3em;height:.3em;background-color:#fff;border-radius:50%}.jw-skin-seven .jw-slider-vertical .jw-buffer,.jw-skin-seven .jw-slider-vertical .jw-progress,.jw-skin-seven .jw-slider-vertical .jw-rail{width:.2em}.jw-skin-seven .jw-slider-vertical .jw-knob{margin-bottom:-.3em}.jw-skin-seven .jw-volume-tip{width:100%;left:-45%;padding-bottom:.7em}.jw-skin-seven .jw-text-duration{color:#666f82}.jw-skin-seven .jw-controlbar-right-group .jw-icon-inline:before,.jw-skin-seven .jw-controlbar-right-group .jw-icon-tooltip:before{border-left:1px solid #666}.jw-skin-seven .jw-controlbar-right-group .jw-icon-inline:first-child:before{border:none}.jw-skin-seven .jw-dock .jw-dock-button{border-radius:50%;border:1px solid #333}.jw-skin-seven .jw-dock .jw-overlay{border-radius:2.5em}.jw-skin-seven .jw-icon-tooltip .jw-active-option{background-color:#ff0046;color:#fff}.jw-skin-seven .jw-icon-volume{min-width:2.6em}.jw-skin-seven .jw-menu,.jw-skin-seven .jw-skip,.jw-skin-seven .jw-time-tip,.jw-skin-seven .jw-volume-tip{border:1px solid #333}.jw-skin-seven .jw-time-tip{padding:.2em;bottom:1.3em}.jw-skin-seven .jw-menu,.jw-skin-seven .jw-volume-tip{bottom:.24em}.jw-skin-seven .jw-skip{padding:.4em;border-radius:1.75em}.jw-skin-seven .jw-skip .jw-icon-inline,.jw-skin-seven .jw-skip .jw-text{color:#fff;line-height:1.75em}.jw-skin-seven .jw-skip.jw-skippable:hover .jw-icon-inline,.jw-skin-seven .jw-skip.jw-skippable:hover .jw-text{color:#ff0046}.jw-skin-seven.jw-flag-touch .jw-controlbar .jw-icon:before,.jw-skin-seven.jw-flag-touch .jw-text-duration,.jw-skin-seven.jw-flag-touch .jw-text-elapsed{padding:0 .35em}.jw-skin-seven.jw-flag-touch .jw-controlbar .jw-icon-prev:before{padding:0 .125em 0 .7em}.jw-skin-seven.jw-flag-touch .jw-controlbar .jw-icon-next:before{padding:0 .7em 0 .125em}.jw-skin-seven.jw-flag-touch .jw-controlbar .jw-icon-playlist:before{padding:0 .225em}',""]);
},function(e,t){e.exports=function(){var e=[];return e.toString=function(){for(var e=[],t=0;t<this.length;t++){var i=this[t];i[2]?e.push("@media "+i[2]+"{"+i[1]+"}"):e.push(i[1])}return e.join("")},e.i=function(t,i){"string"==typeof t&&(t=[[null,t,""]]);for(var n={},s=0;s<this.length;s++){var o=this[s][0];"number"==typeof o&&(n[o]=!0)}for(s=0;s<t.length;s++){var r=t[s];"number"==typeof r[0]&&n[r[0]]||(i&&!r[2]?r[2]=i:i&&(r[2]="("+r[2]+") and ("+i+")"),e.push(r))}},e}},function(e,t,i){e.exports=i.p+"jw-icons.ttf"},function(e,t,i){e.exports=i.p+"jw-icons.woff"},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){return'<div class="jw-skip jw-background-color jw-hidden jw-reset">\n    <span class="jw-text jw-skiptext jw-reset"></span>\n    <span class="jw-icon-inline jw-skip-icon jw-reset"></span>\n</div>'},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){return'<div class="jw-display-icon-container jw-background-color jw-reset">\n    <div class="jw-icon jw-icon-display jw-button-color jw-reset"></div>\n</div>\n'},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({1:function(e,t,i,n,s){var o,r,a=null!=t?t:{};return'    <div class="jw-dock-button jw-background-color jw-reset'+(null!=(o=i["if"].call(a,null!=t?t.btnClass:t,{name:"if",hash:{},fn:e.program(2,s,0),inverse:e.noop,data:s}))?o:"")+'" button="'+e.escapeExpression((r=null!=(r=i.id||(null!=t?t.id:t))?r:i.helperMissing,"function"==typeof r?r.call(a,{name:"id",hash:{},data:s}):r))+'">\n        <div class="jw-icon jw-dock-image jw-reset" '+(null!=(o=i["if"].call(a,null!=t?t.img:t,{name:"if",hash:{},fn:e.program(4,s,0),inverse:e.noop,data:s}))?o:"")+'></div>\n        <div class="jw-arrow jw-reset"></div>\n'+(null!=(o=i["if"].call(a,null!=t?t.tooltip:t,{name:"if",hash:{},fn:e.program(6,s,0),inverse:e.noop,data:s}))?o:"")+"    </div>\n"},2:function(e,t,i,n,s){var o;return" "+e.escapeExpression((o=null!=(o=i.btnClass||(null!=t?t.btnClass:t))?o:i.helperMissing,"function"==typeof o?o.call(null!=t?t:{},{name:"btnClass",hash:{},data:s}):o))},4:function(e,t,i,n,s){var o;return"style='background-image: url(\""+e.escapeExpression((o=null!=(o=i.img||(null!=t?t.img:t))?o:i.helperMissing,"function"==typeof o?o.call(null!=t?t:{},{name:"img",hash:{},data:s}):o))+"\")'"},6:function(e,t,i,n,s){var o;return'        <div class="jw-overlay jw-background-color jw-reset">\n            <span class="jw-text jw-dock-text jw-reset">'+e.escapeExpression((o=null!=(o=i.tooltip||(null!=t?t.tooltip:t))?o:i.helperMissing,"function"==typeof o?o.call(null!=t?t:{},{name:"tooltip",hash:{},data:s}):o))+"</span>\n        </div>\n"},compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){var o;return'<div class="jw-dock jw-reset">\n'+(null!=(o=i.each.call(null!=t?t:{},t,{name:"each",hash:{},fn:e.program(1,s,0),inverse:e.noop,data:s}))?o:"")+"</div>"},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){var o,r=null!=t?t:{},a=i.helperMissing,l="function",c=e.escapeExpression;return'<div id="'+c((o=null!=(o=i.id||(null!=t?t.id:t))?o:a,typeof o===l?o.call(r,{name:"id",hash:{},data:s}):o))+'"class="jw-skin-'+c((o=null!=(o=i.skin||(null!=t?t.skin:t))?o:a,typeof o===l?o.call(r,{name:"skin",hash:{},data:s}):o))+' jw-error jw-reset">\n    <div class="jw-title jw-reset">\n        <div class="jw-title-primary jw-reset">'+c((o=null!=(o=i.title||(null!=t?t.title:t))?o:a,typeof o===l?o.call(r,{name:"title",hash:{},data:s}):o))+'</div>\n        <div class="jw-title-secondary jw-reset">'+c((o=null!=(o=i.body||(null!=t?t.body:t))?o:a,typeof o===l?o.call(r,{name:"body",hash:{},data:s}):o))+'</div>\n    </div>\n\n    <div class="jw-icon-container jw-reset">\n        <div class="jw-display-icon-container jw-background-color jw-reset">\n            <div class="jw-icon jw-icon-display jw-reset"></div>\n        </div>\n    </div>\n</div>\n'},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){return'<div class="jw-logo jw-reset"></div>'},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({1:function(e,t,i,n,s){var o,r=e.escapeExpression;return"        <li class='jw-text jw-option jw-item-"+r((o=null!=(o=i.index||s&&s.index)?o:i.helperMissing,"function"==typeof o?o.call(null!=t?t:{},{name:"index",hash:{},data:s}):o))+" jw-reset'>"+r(e.lambda(null!=t?t.label:t,t))+"</li>\n"},compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){var o;return'<ul class="jw-menu jw-background-color jw-reset">\n'+(null!=(o=i.each.call(null!=t?t:{},t,{name:"each",hash:{},fn:e.program(1,s,0),inverse:e.noop,data:s}))?o:"")+"</ul>"},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){var o;return'<div id="'+e.escapeExpression((o=null!=(o=i.id||(null!=t?t.id:t))?o:i.helperMissing,"function"==typeof o?o.call(null!=t?t:{},{name:"id",hash:{},data:s}):o))+'" class="jwplayer jw-reset" tabindex="0">\n    <div class="jw-aspect jw-reset"></div>\n    <div class="jw-media jw-reset"></div>\n    <div class="jw-preview jw-reset"></div>\n    <div class="jw-title jw-reset">\n        <div class="jw-title-primary jw-reset"></div>\n        <div class="jw-title-secondary jw-reset"></div>\n    </div>\n    <div class="jw-overlays jw-reset"></div>\n    <div class="jw-controls jw-reset"></div>\n</div>'},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({1:function(e,t,i,n,s){var o;return null!=(o=i["if"].call(null!=t?t:{},null!=t?t.active:t,{name:"if",hash:{},fn:e.program(2,s,0),inverse:e.program(4,s,0),data:s}))?o:""},2:function(e,t,i,n,s){var o,r=e.escapeExpression;return"                <li class='jw-option jw-text jw-active-option jw-item-"+r((o=null!=(o=i.index||s&&s.index)?o:i.helperMissing,"function"==typeof o?o.call(null!=t?t:{},{name:"index",hash:{},data:s}):o))+' jw-reset\'>\n                    <span class="jw-label jw-reset"><span class="jw-icon jw-icon-play jw-reset"></span></span>\n                    <span class="jw-name jw-reset">'+r(e.lambda(null!=t?t.title:t,t))+"</span>\n                </li>\n"},4:function(e,t,i,n,s){var o,r=e.escapeExpression,a=e.lambda;return"                <li class='jw-option jw-text jw-item-"+r((o=null!=(o=i.index||s&&s.index)?o:i.helperMissing,"function"==typeof o?o.call(null!=t?t:{},{name:"index",hash:{},data:s}):o))+' jw-reset\'>\n                    <span class="jw-label jw-reset">'+r(a(null!=t?t.label:t,t))+'</span>\n                    <span class="jw-name jw-reset">'+r(a(null!=t?t.title:t,t))+"</span>\n                </li>\n"},compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){var o;return'<div class="jw-menu jw-playlist-container jw-background-color jw-reset">\n\n    <div class="jw-tooltip-title jw-reset">\n        <span class="jw-icon jw-icon-inline jw-icon-playlist jw-reset"></span>\n        <span class="jw-text jw-reset">PLAYLIST</span>\n    </div>\n\n    <ul class="jw-playlist jw-reset">\n'+(null!=(o=i.each.call(null!=t?t:{},t,{name:"each",hash:{},fn:e.program(1,s,0),inverse:e.noop,data:s}))?o:"")+"    </ul>\n</div>"},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({1:function(e,t,i,n,s){var o,r,a=null!=t?t:{},l=i.helperMissing,c="function",u=e.escapeExpression;return'        <li class="jw-reset'+(null!=(o=i["if"].call(a,null!=t?t.featured:t,{name:"if",hash:{},fn:e.program(2,s,0),inverse:e.noop,data:s}))?o:"")+'">\n            <a href="'+u((r=null!=(r=i.link||(null!=t?t.link:t))?r:l,typeof r===c?r.call(a,{name:"link",hash:{},data:s}):r))+'" class="jw-reset" target="_top">\n'+(null!=(o=i["if"].call(a,null!=t?t.showLogo:t,{name:"if",hash:{},fn:e.program(4,s,0),inverse:e.noop,data:s}))?o:"")+"                "+u((r=null!=(r=i.title||(null!=t?t.title:t))?r:l,typeof r===c?r.call(a,{name:"title",hash:{},data:s}):r))+"\n            </a>\n        </li>\n"},2:function(e,t,i,n,s){return" jw-featured"},4:function(e,t,i,n,s){return'                <span class="jw-icon jw-rightclick-logo jw-reset"></span>\n'},compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){var o;return'<div class="jw-rightclick jw-reset">\n    <ul class="jw-reset">\n'+(null!=(o=i.each.call(null!=t?t:{},null!=t?t.items:t,{name:"each",hash:{},fn:e.program(1,s,0),inverse:e.noop,data:s}))?o:"")+"    </ul>\n</div>"},useData:!0})},function(e,t,i){var n=i(15);e.exports=(n["default"]||n).template({compiler:[7,">= 4.0.0"],main:function(e,t,i,n,s){var o,r=null!=t?t:{},a=i.helperMissing,l="function",c=e.escapeExpression;return'<div class="'+c((o=null!=(o=i.className||(null!=t?t.className:t))?o:a,typeof o===l?o.call(r,{name:"className",hash:{},data:s}):o))+" "+c((o=null!=(o=i.orientation||(null!=t?t.orientation:t))?o:a,typeof o===l?o.call(r,{name:"orientation",hash:{},data:s}):o))+' jw-reset">\n    <div class="jw-slider-container jw-reset">\n        <div class="jw-rail jw-reset"></div>\n        <div class="jw-buffer jw-reset"></div>\n        <div class="jw-progress jw-reset"></div>\n        <div class="jw-knob jw-reset"></div>\n    </div>\n</div>'},useData:!0})},,function(e,t,i){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function s(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t["default"]=e,t}function o(){var e=new a.HandlebarsEnvironment;return p.extend(e,a),e.SafeString=c["default"],e.Exception=h["default"],e.Utils=p,e.escapeExpression=p.escapeExpression,e.VM=g,e.template=function(t){return g.template(t,e)},e}t.__esModule=!0;var r=i(114),a=s(r),l=i(252),c=n(l),u=i(39),h=n(u),d=i(20),p=s(d),f=i(251),g=s(f),m=i(250),v=n(m),y=o();y.create=o,v["default"](y),y["default"]=y,t["default"]=y,e.exports=t["default"]},function(e,t,i){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function s(e){r["default"](e)}t.__esModule=!0,t.registerDefaultDecorators=s;var o=i(240),r=n(o)},function(e,t,i){"use strict";t.__esModule=!0;var n=i(20);t["default"]=function(e){e.registerDecorator("inline",function(e,t,i,s){var o=e;return t.partials||(t.partials={},o=function(s,o){var r=i.partials;i.partials=n.extend({},r,t.partials);var a=e(s,o);return i.partials=r,a}),t.partials[s.args[0]]=s.fn,o})},e.exports=t["default"]},function(e,t,i){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function s(e){r["default"](e),l["default"](e),u["default"](e),d["default"](e),f["default"](e),m["default"](e),y["default"](e)}t.__esModule=!0,t.registerDefaultHelpers=s;var o=i(242),r=n(o),a=i(243),l=n(a),c=i(244),u=n(c),h=i(245),d=n(h),p=i(246),f=n(p),g=i(247),m=n(g),v=i(248),y=n(v)},function(e,t,i){"use strict";t.__esModule=!0;var n=i(20);t["default"]=function(e){e.registerHelper("blockHelperMissing",function(t,i){var s=i.inverse,o=i.fn;if(t===!0)return o(this);if(t===!1||null==t)return s(this);if(n.isArray(t))return t.length>0?(i.ids&&(i.ids=[i.name]),e.helpers.each(t,i)):s(this);if(i.data&&i.ids){var r=n.createFrame(i.data);r.contextPath=n.appendContextPath(i.data.contextPath,i.name),i={data:r}}return o(t,i)})},e.exports=t["default"]},function(e,t,i){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}t.__esModule=!0;var s=i(20),o=i(39),r=n(o);t["default"]=function(e){e.registerHelper("each",function(e,t){function i(t,i,o){c&&(c.key=t,c.index=i,c.first=0===i,c.last=!!o,u&&(c.contextPath=u+t)),l+=n(e[t],{data:c,blockParams:s.blockParams([e[t],t],[u+t,null])})}if(!t)throw new r["default"]("Must pass iterator to #each");var n=t.fn,o=t.inverse,a=0,l="",c=void 0,u=void 0;if(t.data&&t.ids&&(u=s.appendContextPath(t.data.contextPath,t.ids[0])+"."),s.isFunction(e)&&(e=e.call(this)),t.data&&(c=s.createFrame(t.data)),e&&"object"==typeof e)if(s.isArray(e))for(var h=e.length;h>a;a++)a in e&&i(a,a,a===e.length-1);else{var d=void 0;for(var p in e)e.hasOwnProperty(p)&&(void 0!==d&&i(d,a-1),d=p,a++);void 0!==d&&i(d,a-1,!0)}return 0===a&&(l=o(this)),l})},e.exports=t["default"]},function(e,t,i){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}t.__esModule=!0;var s=i(39),o=n(s);t["default"]=function(e){e.registerHelper("helperMissing",function(){if(1!==arguments.length)throw new o["default"]('Missing helper: "'+arguments[arguments.length-1].name+'"')})},e.exports=t["default"]},function(e,t,i){"use strict";t.__esModule=!0;var n=i(20);t["default"]=function(e){e.registerHelper("if",function(e,t){return n.isFunction(e)&&(e=e.call(this)),!t.hash.includeZero&&!e||n.isEmpty(e)?t.inverse(this):t.fn(this)}),e.registerHelper("unless",function(t,i){return e.helpers["if"].call(this,t,{fn:i.inverse,inverse:i.fn,hash:i.hash})})},e.exports=t["default"]},function(e,t){"use strict";t.__esModule=!0,t["default"]=function(e){e.registerHelper("log",function(){for(var t=[void 0],i=arguments[arguments.length-1],n=0;n<arguments.length-1;n++)t.push(arguments[n]);var s=1;null!=i.hash.level?s=i.hash.level:i.data&&null!=i.data.level&&(s=i.data.level),t[0]=s,e.log.apply(e,t)})},e.exports=t["default"]},function(e,t){"use strict";t.__esModule=!0,t["default"]=function(e){e.registerHelper("lookup",function(e,t){return e&&e[t]})},e.exports=t["default"]},function(e,t,i){"use strict";t.__esModule=!0;var n=i(20);t["default"]=function(e){e.registerHelper("with",function(e,t){n.isFunction(e)&&(e=e.call(this));var i=t.fn;if(n.isEmpty(e))return t.inverse(this);var s=t.data;return t.data&&t.ids&&(s=n.createFrame(t.data),s.contextPath=n.appendContextPath(t.data.contextPath,t.ids[0])),i(e,{data:s,blockParams:n.blockParams([e],[s&&s.contextPath])})})},e.exports=t["default"]},function(e,t,i){"use strict";t.__esModule=!0;var n=i(20),s={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(e){if("string"==typeof e){var t=n.indexOf(s.methodMap,e.toLowerCase());e=t>=0?t:parseInt(e,10)}return e},log:function(e){if(e=s.lookupLevel(e),"undefined"!=typeof console&&s.lookupLevel(s.level)<=e){var t=s.methodMap[e];console[t]||(t="log");for(var i=arguments.length,n=Array(i>1?i-1:0),o=1;i>o;o++)n[o-1]=arguments[o];console[t].apply(console,n)}}};t["default"]=s,e.exports=t["default"]},function(e,t){(function(i){"use strict";t.__esModule=!0,t["default"]=function(e){var t="undefined"!=typeof i?i:window,n=t.Handlebars;e.noConflict=function(){return t.Handlebars===e&&(t.Handlebars=n),e}},e.exports=t["default"]}).call(t,function(){return this}())},function(e,t,i){"use strict";function n(e){return e&&e.__esModule?e:{"default":e}}function s(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t["default"]=e,t}function o(e){var t=e&&e[0]||1,i=v.COMPILER_REVISION;if(t!==i){if(i>t){var n=v.REVISION_CHANGES[i],s=v.REVISION_CHANGES[t];throw new m["default"]("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+n+") or downgrade your runtime to an older version ("+s+").")}throw new m["default"]("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+e[1]+").")}}function r(e,t){function i(i,n,s){s.hash&&(n=f.extend({},n,s.hash),s.ids&&(s.ids[0]=!0)),i=t.VM.resolvePartial.call(this,i,n,s);var o=t.VM.invokePartial.call(this,i,n,s);if(null==o&&t.compile&&(s.partials[s.name]=t.compile(i,e.compilerOptions,t),o=s.partials[s.name](n,s)),null!=o){if(s.indent){for(var r=o.split("\n"),a=0,l=r.length;l>a&&(r[a]||a+1!==l);a++)r[a]=s.indent+r[a];o=r.join("\n")}return o}throw new m["default"]("The partial "+s.name+" could not be compiled when running in runtime-only mode")}function n(t){function i(t){return""+e.main(s,t,s.helpers,s.partials,r,l,a)}var o=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],r=o.data;n._setup(o),!o.partial&&e.useData&&(r=h(t,r));var a=void 0,l=e.useBlockParams?[]:void 0;return e.useDepths&&(a=o.depths?t!==o.depths[0]?[t].concat(o.depths):o.depths:[t]),(i=d(e.main,i,s,o.depths||[],r,l))(t,o)}if(!t)throw new m["default"]("No environment passed to template");if(!e||!e.main)throw new m["default"]("Unknown template object: "+typeof e);e.main.decorator=e.main_d,t.VM.checkRevision(e.compiler);var s={strict:function(e,t){if(!(t in e))throw new m["default"]('"'+t+'" not defined in '+e);return e[t]},lookup:function(e,t){for(var i=e.length,n=0;i>n;n++)if(e[n]&&null!=e[n][t])return e[n][t]},lambda:function(e,t){return"function"==typeof e?e.call(t):e},escapeExpression:f.escapeExpression,invokePartial:i,fn:function(t){var i=e[t];return i.decorator=e[t+"_d"],i},programs:[],program:function(e,t,i,n,s){var o=this.programs[e],r=this.fn(e);return t||s||n||i?o=a(this,e,r,t,i,n,s):o||(o=this.programs[e]=a(this,e,r)),o},data:function(e,t){for(;e&&t--;)e=e._parent;return e},merge:function(e,t){var i=e||t;return e&&t&&e!==t&&(i=f.extend({},t,e)),i},noop:t.VM.noop,compilerInfo:e.compiler};return n.isTop=!0,n._setup=function(i){i.partial?(s.helpers=i.helpers,s.partials=i.partials,s.decorators=i.decorators):(s.helpers=s.merge(i.helpers,t.helpers),e.usePartial&&(s.partials=s.merge(i.partials,t.partials)),(e.usePartial||e.useDecorators)&&(s.decorators=s.merge(i.decorators,t.decorators)))},n._child=function(t,i,n,o){if(e.useBlockParams&&!n)throw new m["default"]("must pass block params");if(e.useDepths&&!o)throw new m["default"]("must pass parent depths");return a(s,t,e[t],i,0,n,o)},n}function a(e,t,i,n,s,o,r){function a(t){var s=arguments.length<=1||void 0===arguments[1]?{}:arguments[1],a=r;return r&&t!==r[0]&&(a=[t].concat(r)),i(e,t,e.helpers,e.partials,s.data||n,o&&[s.blockParams].concat(o),a)}return a=d(i,a,e,r,n,o),a.program=t,a.depth=r?r.length:0,a.blockParams=s||0,a}function l(e,t,i){return e?e.call||i.name||(i.name=e,e=i.partials[e]):e="@partial-block"===i.name?i.data["partial-block"]:i.partials[i.name],e}function c(e,t,i){i.partial=!0,i.ids&&(i.data.contextPath=i.ids[0]||i.data.contextPath);var n=void 0;if(i.fn&&i.fn!==u&&(i.data=v.createFrame(i.data),n=i.data["partial-block"]=i.fn,n.partials&&(i.partials=f.extend({},i.partials,n.partials))),void 0===e&&n&&(e=n),void 0===e)throw new m["default"]("The partial "+i.name+" could not be found");return e instanceof Function?e(t,i):void 0}function u(){return""}function h(e,t){return t&&"root"in t||(t=t?v.createFrame(t):{},t.root=e),t}function d(e,t,i,n,s,o){if(e.decorator){var r={};t=e.decorator(t,r,i,n&&n[0],s,o,n),f.extend(t,r)}return t}t.__esModule=!0,t.checkRevision=o,t.template=r,t.wrapProgram=a,t.resolvePartial=l,t.invokePartial=c,t.noop=u;var p=i(20),f=s(p),g=i(39),m=n(g),v=i(114)},function(e,t){"use strict";function i(e){this.string=e}t.__esModule=!0,i.prototype.toString=i.prototype.toHTML=function(){return""+this.string},t["default"]=i,e.exports=t["default"]},function(e,t,i){var n,s;n=[i(41),i(1)],s=function(e,t){return function(i,n){var s=["seek","skipAd","stop","playlistNext","playlistPrev","playlistItem","resize","addButton","removeButton","registerPlugin","attachMedia"];t.each(s,function(e){i[e]=function(){return n[e].apply(n,arguments),i}}),i.registerPlugin=e.registerPlugin}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1)],s=function(e){return function(t,i){var n=["buffer","controls","position","duration","fullscreen","volume","mute","item","stretching","playlist"];e.each(n,function(e){var n=e.slice(0,1).toUpperCase()+e.slice(1);t["get"+n]=function(){return i._model.get(e)}});var s=["getAudioTracks","getCaptionsList","getWidth","getHeight","getCurrentAudioTrack","setCurrentAudioTrack","getCurrentCaptions","setCurrentCaptions","getCurrentQuality","setCurrentQuality","getQualityLevels","getVisualQuality","getConfig","getState","getSafeRegion","isBeforeComplete","isBeforePlay","getProvider","detachMedia"],o=["setControls","setFullscreen","setVolume","setMute","setCues"];e.each(s,function(e){t[e]=function(){return i[e]?i[e].apply(i,arguments):null}}),e.each(o,function(e){t[e]=function(){return i[e].apply(i,arguments),t}}),t.getPlaylistIndex=t.getItem}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(4),i(6),i(3),i(2),i(127),i(128),i(1),i(311),i(253),i(254),i(256),i(46)],s=function(e,t,i,n,s,o,r,a,l,c,u,h){var d=function(o,d){var p,f=this,g=!1,m={};r.extend(this,i),this.utils=n,this._=r,this.Events=i,this.version=h,this.trigger=function(e,t){return t=r.isObject(t)?r.extend({},t):{},t.type=e,window.jwplayer&&window.jwplayer.debug?i.trigger.call(f,e,t):i.triggerSafe.call(f,e,t)},this.dispatchEvent=this.trigger,this.removeEventListener=this.off.bind(this);var v=function(){p=new a(o),l(f,p),c(f,p),p.on(e.JWPLAYER_PLAYLIST_ITEM,function(){m={}}),p.on(e.JWPLAYER_MEDIA_META,function(e){r.extend(m,e.metadata)}),p.on(e.JWPLAYER_READY,function(e){g=!0,y.tick("ready"),e.setupTime=y.between("setup","ready")}),p.on("all",f.trigger)};v(),u(this),this.id=o.id;var y=this._qoe=new s;y.tick("init");var w=function(){g=!1,m={},f.off(),p&&p.off(),p&&p.playerDestroy&&p.playerDestroy()};return this.getPlugin=function(e){return f.plugins&&f.plugins[e]},this.addPlugin=function(e,t){this.plugins=this.plugins||{},this.plugins[e]=t,this.onReady(t.addToPlayer),t.resize&&this.onResize(t.resizeHandler)},this.setup=function(e){return y.tick("setup"),w(),v(),n.foreach(e.events,function(e,t){var i=f[e];"function"==typeof i&&i.call(f,t)}),e.id=f.id,p.setup(e,this),f},this.qoe=function(){var t=p.getItemQoe(),i=y.between("setup","ready"),n=t.between(e.JWPLAYER_MEDIA_PLAY_ATTEMPT,e.JWPLAYER_MEDIA_FIRST_FRAME);return{setupTime:i,firstFrame:n,player:y.dump(),item:t.dump()}},this.getContainer=function(){return p.getContainer?p.getContainer():o},this.getMeta=this.getItemMeta=function(){return m},this.getPlaylistItem=function(e){if(!n.exists(e))return p._model.get("playlistItem");var t=f.getPlaylist();return t?t[e]:null},this.getRenderingMode=function(){return"html5"},this.load=function(e){var t=this.getPlugin("vast")||this.getPlugin("googima");return t&&t.destroy(),p.load(e),f},this.play=function(e,i){if(r.isBoolean(e)||(i=e),i||(i={reason:"external"}),e===!0)return p.play(i),f;if(e===!1)return p.pause(),f;switch(e=f.getState()){case t.PLAYING:case t.BUFFERING:p.pause();break;default:p.play(i)}return f},this.pause=function(e){return r.isBoolean(e)?this.play(!e):this.play()},this.createInstream=function(){return p.createInstream()},this.castToggle=function(){p&&p.castToggle&&p.castToggle()},this.playAd=this.pauseAd=n.noop,this.remove=function(){return d(f),f.trigger("remove"),w(),f},this};return d}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(4)],s=function(e,t){return function(i){var n={onBufferChange:t.JWPLAYER_MEDIA_BUFFER,onBufferFull:t.JWPLAYER_MEDIA_BUFFER_FULL,onError:t.JWPLAYER_ERROR,onSetupError:t.JWPLAYER_SETUP_ERROR,onFullscreen:t.JWPLAYER_FULLSCREEN,onMeta:t.JWPLAYER_MEDIA_META,onMute:t.JWPLAYER_MEDIA_MUTE,onPlaylist:t.JWPLAYER_PLAYLIST_LOADED,onPlaylistItem:t.JWPLAYER_PLAYLIST_ITEM,onPlaylistComplete:t.JWPLAYER_PLAYLIST_COMPLETE,onReady:t.JWPLAYER_READY,onResize:t.JWPLAYER_RESIZE,onComplete:t.JWPLAYER_MEDIA_COMPLETE,onSeek:t.JWPLAYER_MEDIA_SEEK,onTime:t.JWPLAYER_MEDIA_TIME,onVolume:t.JWPLAYER_MEDIA_VOLUME,onBeforePlay:t.JWPLAYER_MEDIA_BEFOREPLAY,onBeforeComplete:t.JWPLAYER_MEDIA_BEFORECOMPLETE,onDisplayClick:t.JWPLAYER_DISPLAY_CLICK,onControls:t.JWPLAYER_CONTROLS,onQualityLevels:t.JWPLAYER_MEDIA_LEVELS,onQualityChange:t.JWPLAYER_MEDIA_LEVEL_CHANGED,onCaptionsList:t.JWPLAYER_CAPTIONS_LIST,onCaptionsChange:t.JWPLAYER_CAPTIONS_CHANGED,onAdError:t.JWPLAYER_AD_ERROR,onAdClick:t.JWPLAYER_AD_CLICK,onAdImpression:t.JWPLAYER_AD_IMPRESSION,onAdTime:t.JWPLAYER_AD_TIME,onAdComplete:t.JWPLAYER_AD_COMPLETE,onAdCompanions:t.JWPLAYER_AD_COMPANIONS,onAdSkipped:t.JWPLAYER_AD_SKIPPED,onAdPlay:t.JWPLAYER_AD_PLAY,onAdPause:t.JWPLAYER_AD_PAUSE,onAdMeta:t.JWPLAYER_AD_META,onCast:t.JWPLAYER_CAST_SESSION,onAudioTrackChange:t.JWPLAYER_AUDIO_TRACK_CHANGED,onAudioTracks:t.JWPLAYER_AUDIO_TRACKS},s={onBuffer:"buffer",onPause:"pause",onPlay:"play",onIdle:"idle"};e.each(s,function(t,n){i[n]=e.partial(i.on,t,e)}),e.each(n,function(t,n){i[n]=e.partial(i.on,t,e)})}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(255),i(1),i(33),i(88),i(41)],s=function(e,t,i,n,s){var o=[],r=0,a=function(t){var i,n;return t?"string"==typeof t?(i=l(t),i||(n=document.getElementById(t))):"number"==typeof t?i=o[t]:t.nodeType&&(n=t,i=l(n.id)):i=o[0],i?i:n?c(new e(n,u)):{registerPlugin:s.registerPlugin}},l=function(e){for(var t=0;t<o.length;t++)if(o[t].id===e)return o[t];return null},c=function(e){return r++,e.uniqueId=r,o.push(e),e},u=function(e){for(var t=o.length;t--;)if(o[t].uniqueId===e.uniqueId){o.splice(t,1);break}},h={selectPlayer:a,registerProvider:i.registerProvider,availableProviders:n,registerPlugin:s.registerPlugin};return a.api=h,h}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(312),i(3),i(1),i(4)],s=function(e,t,i,n){var s=function(t,s,o,r){function a(){d("Setup Timeout Error","Setup took longer than "+m+" seconds to complete.")}function l(){i.each(g,function(e){e.complete!==!0&&e.running!==!0&&null!==t&&u(e.depends)&&(e.running=!0,c(e))})}function c(e){var i=function(t){t=t||{},h(e,t)};e.method(i,s,t,o,r)}function u(e){return i.all(e,function(e){return g[e].complete})}function h(e,t){"error"===t.type?d(t.msg,t.reason):"complete"===t.type?(clearTimeout(p),f.trigger(n.JWPLAYER_READY)):(e.complete=!0,l())}function d(e,t){clearTimeout(p),f.trigger(n.JWPLAYER_SETUP_ERROR,{message:e+": "+t}),f.destroy()}var p,f=this,g=e.getQueue(),m=30;this.start=function(){p=setTimeout(a,1e3*m),l()},this.destroy=function(){clearTimeout(p),this.off(),g.length=0,t=null,s=null,o=null}};return s.prototype=t,s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(40),i(83),i(268),i(2)],s=function(e,t,i,n){var s=function(s,o){function r(e){if(e.tracks.length){o.mediaController.off("meta",a),b=[],_={},x={},k=0;for(var t=e.tracks||[],i=0;i<t.length;i++){var n=t[i];n.id=n.name,n.label=n.name||n.language,d(n)}var s=g();this.setCaptionsList(s),m()}}function a(e){var t=e.metadata;if(t&&"textdata"===t.type){if(!t.text)return;var i=_[t.trackid];if(!i){i={kind:"captions",id:t.trackid,data:[]},d(i);var n=g();this.setCaptionsList(n)}var s,r;t.useDTS?(i.source||(i.source=t.source||"mpegts"),s=t.begin,r=t.begin+"_"+t.text):(s=e.position||o.get("position"),r=""+Math.round(10*s)+"_"+t.text);var a=x[r];a||(a={begin:s,text:t.text},t.end&&(a.end=t.end),x[r]=a,i.data.push(a))}}function l(e){n.log("CAPTIONS("+e+")")}function c(e,t){w=t,b=[],_={},x={},k=0}function u(e){c(o,e),o.mediaController.off("meta",a),o.mediaController.off("subtitlesTracks",r);var t,i,s,l,u=e.tracks,h="html5"===o.get("provider").name,f=n.isChrome()||n.isIOS()||n.isSafari();for(l=0;l<u.length;l++)t=u[l],s=t.file&&/\.(?:web)?vtt(?:\?.*)?$/i.test(t.file),h&&s&&!y&&f||(i=t.kind.toLowerCase(),"captions"!==i&&"subtitles"!==i||(t.file?(d(t),p(t)):t.data&&d(t)));b.length||(o.mediaController.on("meta",a,this),o.mediaController.on("subtitlesTracks",r,this));var v=g();this.setCaptionsList(v),m()}function h(e,t){var i=null;0!==t&&(i=b[t-1]),e.set("captionsTrack",i)}function d(e){"number"!=typeof e.id&&(e.id=e.name||e.file||"cc"+b.length),e.data=e.data||[],e.label||(e.label="Unknown CC",k++,k>1&&(e.label+=" ("+k+")")),b.push(e),_[e.id]=e}function p(e){n.ajax(e.file,function(t){f(t,e)},l)}function f(s,o){var r,a=s.responseXML?s.responseXML.firstChild:null;if(a)for("xml"===e.localName(a)&&(a=a.nextSibling);a.nodeType===a.COMMENT_NODE;)a=a.nextSibling;r=a&&"tt"===e.localName(a)?n.tryCatch(function(){o.data=i(s.responseXML)}):n.tryCatch(function(){o.data=t(s.responseText)}),r instanceof n.Error&&l(r.message+": "+o.file)}function g(){for(var e=[{id:"off",label:"Off"}],t=0;t<b.length;t++)e.push({id:b[t].id,label:b[t].label||"Unknown CC"});return e}function m(){var e=0,t=o.get("captionLabel");if("Off"===t)return void o.set("captionsIndex",0);for(var i=0;i<b.length;i++){var n=b[i];if(t&&t===n.label){e=i+1;break}n["default"]||n.defaulttrack||"default"===n.id?e=i+1:n.autoselect}v(e)}function v(e){b.length?o.setVideoSubtitleTrack(e,b):o.set("captionsIndex",e)}o.on("change:playlistItem",c,this),o.on("change:captionsIndex",h,this),o.on("itemReady",u,this),o.mediaController.on("subtitlesTracks",r,this),o.mediaController.on("subtitlesTrackData",function(e){var t=_[e.name];if(t){t.source=e.source;for(var i=e.captions||[],n=!1,s=0;s<i.length;s++){var o=i[s],r=e.name+"_"+o.begin+"_"+o.end;x[r]||(x[r]=o,t.data.push(o),n=!0)}n&&t.data.sort(function(e,t){return e.begin-t.begin})}},this),o.mediaController.on("meta",a,this);var y=!!o.get("sdkplatform"),w={},b=[],_={},x={},k=0;this.getCurrentIndex=function(){return o.get("captionsIndex")},this.getCaptionsList=function(){return o.get("captionsList")},this.setCaptionsList=function(e){o.set("captionsList",e)}};return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(115),i(261),i(1),i(258),i(259),i(55),i(266),i(118),i(117),i(2),i(137),i(33),i(3),i(82),i(6),i(4),i(293)],s=function(e,t,i,n,s,o,r,a,l,c,u,h,d,p,f,g,m){function v(e){return function(){var t=Array.prototype.slice.call(arguments,0);this._model.getVideo()?this["_"+e].apply(this,t):this.eventsQueue.push([e,t])}}function y(e){return e===f.LOADING||e===f.STALLED?f.BUFFERING:e}var w=function(e){this.originalContainer=this.currentContainer=e,this.eventsQueue=[],i.extend(this,d),this._model=new o};return w.prototype={play:v("play"),pause:v("pause"),seek:v("seek"),stop:v("stop"),load:v("load"),playlistNext:v("next"),playlistPrev:v("prev"),playlistItem:v("item"),setCurrentCaptions:v("setCurrentCaptions"),setCurrentQuality:v("setCurrentQuality"),setVolume:v("setVolume"),setMute:v("setMute"),setFullscreen:v("setFullscreen"),setup:function(o,d){function m(){ee.mediaModel.on("change:state",function(e,t){var i=y(t);ee.set("state",i)})}function v(){X=null,D(ee.get("item")),ee.on("change:state",p,this),ee.on("change:castState",function(e,t){ne.trigger(g.JWPLAYER_CAST_SESSION,t)}),ee.on("change:fullscreen",function(e,t){ne.trigger(g.JWPLAYER_FULLSCREEN,{fullscreen:t})}),ee.on("itemReady",function(){ne.trigger(g.JWPLAYER_PLAYLIST_ITEM,{index:ee.get("item"),item:ee.get("playlistItem")})}),ee.on("change:playlist",function(e,t){t.length&&ne.trigger(g.JWPLAYER_PLAYLIST_LOADED,{playlist:t})}),ee.on("change:volume",function(e,t){ne.trigger(g.JWPLAYER_MEDIA_VOLUME,{volume:t})}),ee.on("change:mute",function(e,t){ne.trigger(g.JWPLAYER_MEDIA_MUTE,{mute:t})}),ee.on("change:controls",function(e,t){ne.trigger(g.JWPLAYER_CONTROLS,{controls:t})}),ee.on("change:scrubbing",function(e,t){t?E():C()}),ee.on("change:captionsList",function(e,t){ne.trigger(g.JWPLAYER_CAPTIONS_LIST,{tracks:t,track:$()})}),ee.mediaModel.set("mediaType",null),ee.mediaController.on("all",ne.trigger.bind(ne)),K.on("all",ne.trigger.bind(ne)),this.showView(K.element()),window.addEventListener("beforeunload",function(){X&&X.destroy(),ee&&ee.destroy()}),i.defer(w)}function w(){ne.trigger(g.JWPLAYER_READY,{setupTime:0}),ne.trigger(g.JWPLAYER_PLAYLIST_LOADED,{playlist:ee.get("playlist")}),ne.trigger(g.JWPLAYER_PLAYLIST_ITEM,{index:ee.get("item"),item:ee.get("playlistItem")}),ne.trigger(g.JWPLAYER_CAPTIONS_LIST,{tracks:ee.get("captionsList"),track:ee.get("captionsIndex")}),ee.get("autostart")&&C({reason:"autostart"}),b()}function b(){for(;ne.eventsQueue.length>0;){var e=ne.eventsQueue.shift(),t=e[0],i=e[1]||[];ne["_"+t].apply(ne,i)}}function _(e){switch(ee.get("state")===f.ERROR&&ee.set("state",f.IDLE),j(!0),ee.get("autostart")&&ee.once("itemReady",C),typeof e){case"string":x(e);break;case"object":var t=a(e),i=ee.get("edition"),n=ee.getProviders(),s=n.required(t,i);h.load(s,i).then(function(){ne.getProvider()||(ee.setProvider(ee.get("playlistItem")),b())});var o=I(e);o&&D(0);break;case"number":D(e)}}function x(e){var t=new l;t.on(g.JWPLAYER_PLAYLIST_LOADED,function(e){_(e.playlist)}),t.on(g.JWPLAYER_ERROR,function(e){
e.message="Error loading playlist: "+e.message,this.triggerError(e)},this),t.load(e)}function k(){var e=ne._instreamAdapter&&ne._instreamAdapter.getState();return i.isString(e)?e:ee.get("state")}function C(e){var t;if(e&&ee.set("playReason",e.reason),ee.get("state")!==f.ERROR){var n=ne._instreamAdapter&&ne._instreamAdapter.getState();if(i.isString(n))return d.pauseAd(!1);if(ee.get("state")===f.COMPLETE&&(j(!0),D(0)),!te&&(te=!0,ne.trigger(g.JWPLAYER_MEDIA_BEFOREPLAY,{playReason:ee.get("playReason")}),te=!1,Z))return Z=!1,void(Q=null);if(T()){if(0===ee.get("playlist").length)return!1;t=c.tryCatch(function(){ee.loadVideo()})}else ee.get("state")===f.PAUSED&&(t=c.tryCatch(function(){ee.playVideo()}));return t instanceof c.Error?(ne.triggerError(t),Q=null,!1):!0}}function j(e){ee.off("itemReady",C);var t=!e;Q=null;var i=c.tryCatch(function(){ee.stopVideo()},ne);return i instanceof c.Error?(ne.triggerError(i),!1):(t&&(ie=!0),te&&(Z=!0),!0)}function E(){Q=null;var e=ne._instreamAdapter&&ne._instreamAdapter.getState();if(i.isString(e))return d.pauseAd(!0);switch(ee.get("state")){case f.ERROR:return!1;case f.PLAYING:case f.BUFFERING:var t=c.tryCatch(function(){se().pause()},this);if(t instanceof c.Error)return ne.triggerError(t),!1;break;default:te&&(Z=!0)}return!0}function T(){var e=ee.get("state");return e===f.IDLE||e===f.COMPLETE||e===f.ERROR}function A(e){ee.get("state")!==f.ERROR&&(ee.get("scrubbing")||ee.get("state")===f.PLAYING||C(!0),se().seek(e))}function P(e,t){j(!0),D(e),C(t)}function I(e){var t=a(e);return t=a.filterPlaylist(t,ee.getProviders(),ee.get("androidhls"),ee.get("drm"),ee.get("preload"),ee.get("feedid")),ee.set("playlist",t),i.isArray(t)&&0!==t.length?!0:(ne.triggerError({message:"Error loading playlist: No playable sources found"}),!1)}function D(e){var t=ee.get("playlist");e=parseInt(e,10)||0,e=(e+t.length)%t.length,ee.set("item",e),ee.set("playlistItem",t[e]),ee.setActiveItem(t[e])}function L(e){P(ee.get("item")-1,e||{reason:"external"})}function M(e){P(ee.get("item")+1,e||{reason:"external"})}function S(){if(T()){if(ie)return void(ie=!1);Q=S;var e=ee.get("item");return e===ee.get("playlist").length-1?void(ee.get("repeat")?M({reason:"repeat"}):(ee.set("state",f.COMPLETE),ne.trigger(g.JWPLAYER_PLAYLIST_COMPLETE,{}))):void M({reason:"playlist"})}}function R(e){se()&&(e=parseInt(e,10)||0,se().setCurrentQuality(e))}function O(){return se()?se().getCurrentQuality():-1}function N(){return this._model?this._model.getConfiguration():void 0}function W(){if(this._model.mediaModel)return this._model.mediaModel.get("visualQuality");var e=F();if(e){var t=O(),n=e[t];if(n)return{level:i.extend({index:t},n),mode:"",reason:""}}return null}function F(){return se()?se().getQualityLevels():null}function H(e){se()&&(e=parseInt(e,10)||0,se().setCurrentAudioTrack(e))}function z(){return se()?se().getCurrentAudioTrack():-1}function Y(){return se()?se().getAudioTracks():null}function B(e){e=parseInt(e,10)||0,ee.persistVideoSubtitleTrack(e),ne.trigger(g.JWPLAYER_CAPTIONS_CHANGED,{tracks:q(),track:e})}function $(){return G.getCurrentIndex()}function q(){return G.getCaptionsList()}function V(){var e=ee.getVideo();if(e){var t=e.detachMedia();if(t instanceof HTMLVideoElement)return t}return null}function J(){var e=c.tryCatch(function(){ee.getVideo().attachMedia()});return e instanceof c.Error?void c.log("Error calling _attachMedia",e):void("function"==typeof Q&&Q())}function U(e){i.isBoolean(e)||(e=!ee.get("fullscreen")),ee.set("fullscreen",e),this._instreamAdapter&&this._instreamAdapter._adModel&&this._instreamAdapter._adModel.set("fullscreen",e)}var K,G,X,Q,Z,ee=this._model,te=!1,ie=!1,ne=this,se=function(){return ee.getVideo()},oe=new r;oe.track(ee);var re=new e(o,oe);ee.setup(re,oe),K=this._view=new u(d,ee),G=new s(d,ee),X=new n(d,ee,K,I),X.on(g.JWPLAYER_READY,v,this),X.on(g.JWPLAYER_SETUP_ERROR,this.setupError,this),ee.mediaController.on(g.JWPLAYER_MEDIA_COMPLETE,function(){i.defer(S)}),ee.mediaController.on(g.JWPLAYER_MEDIA_ERROR,this.triggerError,this),ee.on("change:flashBlocked",function(e,t){if(!t)return void this._model.set("errorEvent",void 0);var i=!!e.get("flashThrottle"),n={message:i?"Click to run Flash":"Flash plugin failed to load"};i||this.trigger(g.JWPLAYER_ERROR,n),this._model.set("errorEvent",n)},this),m(),ee.on("change:mediaModel",m),this._play=C,this._pause=E,this._seek=A,this._stop=j,this._load=_,this._next=M,this._prev=L,this._item=P,this._setCurrentCaptions=B,this._setCurrentQuality=R,this.detachMedia=V,this.attachMedia=J,this.getCurrentQuality=O,this.getQualityLevels=F,this.setCurrentAudioTrack=H,this.getCurrentAudioTrack=z,this.getAudioTracks=Y,this.getCurrentCaptions=$,this.getCaptionsList=q,this.getVisualQuality=W,this.getConfig=N,this.getState=k,this._setVolume=ee.setVolume,this._setMute=ee.setMute,this.getProvider=function(){return ee.get("provider")},this.getWidth=function(){return ee.get("containerWidth")},this.getHeight=function(){return ee.get("containerHeight")},this.getContainer=function(){return this.currentContainer},this.resize=K.resize,this.getSafeRegion=K.getSafeRegion,this.setCues=K.addCues,this._setFullscreen=U,this.addButton=function(e,t,n,s,o){var r={img:e,tooltip:t,callback:n,id:s,btnClass:o},a=ee.get("dock");a=a?a.slice(0):[],a=i.reject(a,i.matches({id:r.id})),a.push(r),ee.set("dock",a)},this.removeButton=function(e){var t=ee.get("dock")||[];t=i.reject(t,i.matches({id:e})),ee.set("dock",t)},this.checkBeforePlay=function(){return te},this.getItemQoe=function(){return ee._qoeItem},this.setControls=function(e){i.isBoolean(e)||(e=!ee.get("controls")),ee.set("controls",e);var t=ee.getVideo();t&&t.setControls(e)},this.playerDestroy=function(){this.stop(),this.showView(this.originalContainer),K&&K.destroy(),ee&&ee.destroy(),X&&(X.destroy(),X=null)},this.isBeforePlay=this.checkBeforePlay,this.isBeforeComplete=function(){return ee.getVideo().checkComplete()},this.createInstream=function(){return this.instreamDestroy(),this._instreamAdapter=new t(this,ee,K),this._instreamAdapter},this.skipAd=function(){this._instreamAdapter&&this._instreamAdapter.skipAd()},this.instreamDestroy=function(){ne._instreamAdapter&&ne._instreamAdapter.destroy()},X.start()},showView:function(e){(document.documentElement.contains(this.currentContainer)||(this.currentContainer=document.getElementById(this._model.get("id")),this.currentContainer))&&(this.currentContainer.parentElement&&this.currentContainer.parentElement.replaceChild(e,this.currentContainer),this.currentContainer=e)},triggerError:function(e){this._model.set("errorEvent",e),this._model.set("state",f.ERROR),this._model.once("change:state",function(){this._model.set("errorEvent",void 0)},this),this.trigger(g.JWPLAYER_ERROR,e)},setupError:function(e){var t=e.message,n=c.createElement(m(this._model.get("id"),this._model.get("skin"),t)),s=this._model.get("width"),o=this._model.get("height");c.style(n,{width:s.toString().indexOf("%")>0?s:s+"px",height:o.toString().indexOf("%")>0?o:o+"px"}),this.showView(n);var r=this;i.defer(function(){r.trigger(g.JWPLAYER_SETUP_ERROR,{message:t})})}},w}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(263),i(262),i(4),i(6),i(2),i(3),i(1)],s=function(e,t,i,n,s,o,r){function a(i){var n=i.get("provider").name||"";return n.indexOf("flash")>=0?t:e}var l={skipoffset:null,tag:null},c=function(e,t,o){function c(e,t){t=t||{},b.tag&&!t.tag&&(t.tag=b.tag),this.trigger(e,t)}function u(e){y._adModel.set("duration",e.duration),y._adModel.set("position",e.position)}function h(e){if(d&&w+1<d.length){y._adModel.set("state","buffering"),t.set("skipButton",!1),w++;var n,s=d[w];p&&(n=p[w]),this.loadItem(s,n)}else e.type===i.JWPLAYER_MEDIA_COMPLETE&&(c.call(this,e.type,e),this.trigger(i.JWPLAYER_PLAYLIST_COMPLETE,{})),this.destroy()}var d,p,f,g,m,v=a(t),y=new v(e,t),w=0,b={},_=r.bind(function(e){e=e||{},e.hasControls=!!t.get("controls"),this.trigger(i.JWPLAYER_INSTREAM_CLICK,e),y&&y._adModel&&(y._adModel.get("state")===n.PAUSED?e.hasControls&&y.instreamPlay():y.instreamPause())},this),x=r.bind(function(){y&&y._adModel&&y._adModel.get("state")===n.PAUSED&&t.get("controls")&&(e.setFullscreen(),e.play())},this);this.type="instream",this.init=function(){f=t.getVideo(),g=t.get("position"),m=t.get("playlist")[t.get("item")],y.on("all",c,this),y.on(i.JWPLAYER_MEDIA_TIME,u,this),y.on(i.JWPLAYER_MEDIA_COMPLETE,h,this),y.init(),f.detachMedia(),t.mediaModel.set("state",n.BUFFERING),e.checkBeforePlay()||0===g&&!f.checkComplete()?(g=0,t.set("preInstreamState","instream-preroll")):f&&f.checkComplete()||t.get("state")===n.COMPLETE?t.set("preInstreamState","instream-postroll"):t.set("preInstreamState","instream-midroll");var r=t.get("state");return r!==n.PLAYING&&r!==n.BUFFERING||f.pause(),o.setupInstream(y._adModel),y._adModel.set("state",n.BUFFERING),o.clickHandler().setAlternateClickHandlers(s.noop,null),this.setText("Loading ad"),this},this.loadItem=function(e,n){if(s.isAndroid(2.3))return void this.trigger({type:i.JWPLAYER_ERROR,message:"Error loading instream: Cannot play instream on Android 2.3"});r.isArray(e)&&(d=e,p=n,e=d[w],p&&(n=p[w])),this.trigger(i.JWPLAYER_PLAYLIST_ITEM,{index:w,item:e}),b=r.extend({},l,n),y.load(e),this.addClickHandler();var o=e.skipoffset||b.skipoffset;o&&(y._adModel.set("skipMessage",b.skipMessage),y._adModel.set("skipText",b.skipText),y._adModel.set("skipOffset",o),t.set("skipButton",!0))},this.applyProviderListeners=function(e){y.applyProviderListeners(e),this.addClickHandler()},this.play=function(){y.instreamPlay()},this.pause=function(){y.instreamPause()},this.hide=function(){y.hide()},this.addClickHandler=function(){o.clickHandler().setAlternateClickHandlers(_,x),y.on(i.JWPLAYER_MEDIA_META,this.metaHandler,this)},this.skipAd=function(e){var t=i.JWPLAYER_AD_SKIPPED;this.trigger(t,e),h.call(this,{type:t})},this.metaHandler=function(e){e.width&&e.height&&o.resizeMedia()},this.destroy=function(){if(this.off(),t.set("skipButton",!1),y){o.clickHandler()&&o.clickHandler().revertAlternateClickHandlers(),y.instreamDestroy(),o.destroyInstream(),y=null,e.attachMedia();var i=t.get("preInstreamState");switch(i){case"instream-preroll":case"instream-midroll":var a=r.extend({},m);a.starttime=g,t.loadVideo(a),s.isMobile()&&t.mediaModel.get("state")===n.BUFFERING&&f.setState(n.BUFFERING),f.play();break;case"instream-postroll":case"instream-idle":f.stop()}}},this.getState=function(){return y&&y._adModel?y._adModel.get("state"):!1},this.setText=function(e){o.setAltText(e?e:"")},this.hide=function(){o.useExternalControls()}};return r.extend(c.prototype,o),c}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(3),i(55),i(82),i(4),i(6),i(2),i(1)],s=function(e,t,i,n,s,o,r){var a=function(e,n){this.model=n,this._adModel=(new t).setup({id:n.get("id"),volume:n.get("volume"),fullscreen:n.get("fullscreen"),mute:n.get("mute")}),this._adModel.on("change:state",i,this);var s=e.getContainer();this.swf=s.querySelector("object")};return a.prototype=r.extend({init:function(){if(o.isChrome()){var e=-1,t=!1;this.swf.on("throttle",function(i){if(clearTimeout(e),"resume"===i.state)t&&(t=!1,this.instreamPlay());else{var n=this;e=setTimeout(function(){n._adModel.get("state")===s.PLAYING&&(t=!0,n.instreamPause())},250)}},this)}this.swf.on("instream:state",function(e){switch(e.newstate){case s.PLAYING:this._adModel.set("state",e.newstate);break;case s.PAUSED:this._adModel.set("state",e.newstate)}},this).on("instream:time",function(e){this._adModel.set("position",e.position),this._adModel.set("duration",e.duration),this.trigger(n.JWPLAYER_MEDIA_TIME,e)},this).on("instream:complete",function(e){this.trigger(n.JWPLAYER_MEDIA_COMPLETE,e)},this).on("instream:error",function(e){this.trigger(n.JWPLAYER_MEDIA_ERROR,e)},this),this.swf.triggerFlash("instream:init"),this.applyProviderListeners=function(e){this.model.on("change:volume",function(t,i){e.volume(i)},this),this.model.on("change:mute",function(t,i){e.mute(i)},this)}},instreamDestroy:function(){this._adModel&&(this.off(),this.swf.off(null,null,this),this.swf.triggerFlash("instream:destroy"),this.swf=null,this._adModel.off(),this._adModel=null,this.model=null)},load:function(e){this.swf.triggerFlash("instream:load",e)},instreamPlay:function(){this.swf.triggerFlash("instream:play")},instreamPause:function(){this.swf.triggerFlash("instream:pause")}},e),a}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(3),i(82),i(4),i(6),i(55)],s=function(e,t,i,n,s,o){var r=function(r,a){function l(t){var s=t||d.getVideo();if(p!==s){if(p=s,!s)return;s.off(),s.on("all",function(t,i){i=e.extend({},i,{type:t}),this.trigger(t,i)},f),s.on(n.JWPLAYER_MEDIA_BUFFER_FULL,h),s.on(n.JWPLAYER_PLAYER_STATE,c),s.attachMedia(),s.volume(a.get("volume")),s.mute(a.get("mute")),d.on("change:state",i,f)}}function c(e){switch(e.newstate){case s.PLAYING:d.set("state",e.newstate);break;case s.PAUSED:d.set("state",e.newstate)}}function u(e){a.trigger(e.type,e),f.trigger(n.JWPLAYER_FULLSCREEN,{fullscreen:e.jwstate})}function h(){d.getVideo().play()}var d,p,f=e.extend(this,t);return r.on(n.JWPLAYER_FULLSCREEN,function(e){this.trigger(n.JWPLAYER_FULLSCREEN,e)},f),this.init=function(){d=(new o).setup({id:a.get("id"),volume:a.get("volume"),fullscreen:a.get("fullscreen"),mute:a.get("mute")}),d.on("fullscreenchange",u),this._adModel=d},f.load=function(e){d.set("item",0),d.set("playlistItem",e),d.setActiveItem(e),l(),d.off(n.JWPLAYER_ERROR),d.on(n.JWPLAYER_ERROR,function(e){this.trigger(n.JWPLAYER_ERROR,e)},f),d.loadVideo(e)},f.applyProviderListeners=function(e){l(e),e.off(n.JWPLAYER_ERROR),e.on(n.JWPLAYER_ERROR,function(e){this.trigger(n.JWPLAYER_ERROR,e)},f),a.on("change:volume",function(e,t){p.volume(t)},f),a.on("change:mute",function(e,t){p.mute(t)},f)},this.instreamDestroy=function(){d&&(d.off(),this.off(),p&&(p.detachMedia(),p.off(),d.getVideo()&&p.destroy()),d=null,r.off(null,null,this),r=null)},f.instreamPlay=function(){d.getVideo()&&d.getVideo().play(!0)},f.instreamPause=function(){d.getVideo()&&d.getVideo().pause(!0)},f};return r}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(127),i(4),i(1)],s=function(e,t,i){function n(e){e.mediaController.off(t.JWPLAYER_MEDIA_PLAY_ATTEMPT,e._onPlayAttempt),e.mediaController.off(t.JWPLAYER_PROVIDER_FIRST_FRAME,e._triggerFirstFrame),e.mediaController.off(t.JWPLAYER_MEDIA_TIME,e._onTime)}function s(e){n(e),e._triggerFirstFrame=i.once(function(){var i=e._qoeItem;i.tick(t.JWPLAYER_MEDIA_FIRST_FRAME);var s=i.between(t.JWPLAYER_MEDIA_PLAY_ATTEMPT,t.JWPLAYER_MEDIA_FIRST_FRAME);e.mediaController.trigger(t.JWPLAYER_MEDIA_FIRST_FRAME,{loadTime:s}),n(e)}),e._onTime=r(e._triggerFirstFrame),e._onPlayAttempt=function(){e._qoeItem.tick(t.JWPLAYER_MEDIA_PLAY_ATTEMPT)},e.mediaController.on(t.JWPLAYER_MEDIA_PLAY_ATTEMPT,e._onPlayAttempt),e.mediaController.once(t.JWPLAYER_PROVIDER_FIRST_FRAME,e._triggerFirstFrame),e.mediaController.on(t.JWPLAYER_MEDIA_TIME,e._onTime)}function o(i){function n(i,n,o){i._qoeItem&&o&&i._qoeItem.end(o.get("state")),i._qoeItem=new e,i._qoeItem.tick(t.JWPLAYER_PLAYLIST_ITEM),i._qoeItem.start(n.get("state")),s(i),n.on("change:state",function(e,t,n){i._qoeItem.end(n),i._qoeItem.start(t)})}i.on("change:mediaModel",n)}var r=function(e){var t=Number.MIN_VALUE;return function(i){i.position>t&&e(),t=i.position}};return{model:o}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(33),i(41),i(117),i(32),i(44),i(1),i(2),i(4)],s=function(e,t,n,s,o,r,a,l){function c(){var e={LOAD_PROMISE_POLYFILL:{method:u,depends:[]},LOAD_BASE64_POLYFILL:{method:h,depends:[]},LOADED_POLYFILLS:{method:d,depends:["LOAD_PROMISE_POLYFILL","LOAD_BASE64_POLYFILL"]},LOAD_PLUGINS:{method:p,depends:["LOADED_POLYFILLS"]},INIT_PLUGINS:{method:f,depends:["LOAD_PLUGINS","SETUP_VIEW"]},LOAD_PROVIDERS:{method:x,depends:["FILTER_PLAYLIST"]},LOAD_SKIN:{method:_,depends:["LOADED_POLYFILLS"]},LOAD_PLAYLIST:{method:m,depends:["LOADED_POLYFILLS"]},FILTER_PLAYLIST:{method:v,depends:["LOAD_PLAYLIST"]},SETUP_VIEW:{method:k,depends:["LOAD_SKIN"]},SEND_READY:{method:C,depends:["INIT_PLUGINS","LOAD_PROVIDERS","SETUP_VIEW"]}};return e}function u(e){window.Promise?e():i.e(5,function(t){i(122),e()})}function h(e){window.btoa&&window.atob?e():i.e(6,function(t){i(121),e()})}function d(e){e()}function p(e,i){E=t.loadPlugins(i.get("id"),i.get("plugins")),E.on(l.COMPLETE,e),E.on(l.ERROR,r.partial(g,e)),E.load()}function f(e,t,i){E.setupPlugins(i,t),e()}function g(e,t){j(e,"Could not load plugin",t.message)}function m(e,t){var i=t.get("playlist");r.isString(i)?(T=new n,T.on(l.JWPLAYER_PLAYLIST_LOADED,function(i){t.set("playlist",i.playlist),t.set("feedid",i.feedid),e()}),T.on(l.JWPLAYER_ERROR,r.partial(y,e)),T.load(i)):e()}function v(e,t,i,n,s){var o=t.get("playlist"),r=s(o);r?e():y(e)}function y(e,t){t&&t.message?j(e,"Error loading playlist",t.message):j(e,"Error loading player","No playable sources found")}function w(e,t){return r.contains(o.SkinsLoadable,e)?t+"skins/"+e+".css":void 0}function b(e){for(var t=document.styleSheets,i=0,n=t.length;n>i;i++)if(t[i].href===e)return!0;return!1}function _(e,t){var i=t.get("skin"),n=t.get("skinUrl");if(r.contains(o.SkinsIncluded,i))return void e();if(n||(n=w(i,t.get("base"))),r.isString(n)&&!b(n)){t.set("skin-loading",!0);var a=!0,c=new s(n,a);c.addEventListener(l.COMPLETE,function(){t.set("skin-loading",!1)}),c.addEventListener(l.ERROR,function(){t.set("skin","seven"),t.set("skin-loading",!1)}),c.load()}r.defer(function(){e()})}function x(t,i){var n=i.getProviders(),s=i.get("playlist"),o=n.required(s);e.load(o).then(t)}function k(e,t,i,n){n.setup(),e()}function C(e){e({type:"complete"})}function j(e,t,i){e({type:"error",msg:t,reason:i})}var E,T;return{getQueue:c,error:j}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(2)],s=function(e,t){function i(e){return"jwplayer."+e}function n(){return e.reduce(this.persistItems,function(e,n){var s=c[i(n)];return s&&(e[n]=t.serialize(s)),e},{})}function s(e,t){try{c[i(e)]=t}catch(n){l&&l.debug&&console.error(n)}}function o(){e.each(this.persistItems,function(e){c.removeItem(i(e))})}function r(){this.persistItems=["volume","mute","captionLabel","qualityLabel"]}function a(t){e.each(this.persistItems,function(e){t.on("change:"+e,function(t,i){s(e,i)})})}var l=window.jwplayer,c={removeItem:t.noop};try{c=window.localStorage}catch(u){}return e.extend(r.prototype,{getAllItems:n,track:a,clear:o}),r}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(131),i(2)],s=function(e,t){return i.p=t.loadFrom(),e.selectPlayer}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(14)],s=function(e){function t(e){e||i()}function i(){throw new Error("Invalid DFXP file")}var n=e.seconds;return function(s){t(s);var o=[],r=s.getElementsByTagName("p");t(r),r.length||(r=s.getElementsByTagName("tt:p"),r.length||(r=s.getElementsByTagName("tts:p")));for(var a=0;a<r.length;a++){var l=r[a],c=l.innerHTML||l.textContent||l.text||"",u=e.trim(c).replace(/>\s+</g,"><").replace(/tts?:/g,"");if(u){var h=l.getAttribute("begin"),d=l.getAttribute("dur"),p=l.getAttribute("end"),f={begin:n(h),text:u};p?f.end=n(p):d&&(f.end=f.begin+n(d)),o.push(f)}}return o.length||i(),o}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(40),i(14),i(2)],s=function(e,t,i){var n="jwplayer",s=function(s,o){for(var r=[],a=[],l=t.xmlAttribute,c="default",u="label",h="file",d="type",p=0;p<s.childNodes.length;p++){var f=s.childNodes[p];if(f.prefix===n){var g=e.localName(f);"source"===g?(delete o.sources,r.push({file:l(f,h),"default":l(f,c),label:l(f,u),type:l(f,d)})):"track"===g?(delete o.tracks,a.push({file:l(f,h),"default":l(f,c),kind:l(f,"kind"),label:l(f,u)})):(o[g]=i.serialize(e.textContent(f)),"file"===g&&o.sources&&delete o.sources)}o[h]||(o[h]=o.link)}if(r.length)for(o.sources=[],p=0;p<r.length;p++)r[p].file.length>0&&(r[p][c]="true"===r[p][c],r[p].label.length||delete r[p].label,o.sources.push(r[p]));if(a.length)for(o.tracks=[],p=0;p<a.length;p++)a[p].file.length>0&&(a[p][c]="true"===a[p][c],a[p].kind=a[p].kind.length?a[p].kind:"captions",a[p].label.length||delete a[p].label,o.tracks.push(a[p]));return o};return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(40),i(14),i(2)],s=function(e,t,i){function n(e){for(var t=[],i=0;i<a(e);i++){var n=e.childNodes[i];"jwplayer"===n.prefix&&"mediatypes"===o(n).toLowerCase()&&t.push(r(n))}return t}var s=t.xmlAttribute,o=e.localName,r=e.textContent,a=e.numChildren,l="media",c=function(e,t){function u(e){var t={zh:"Chinese",nl:"Dutch",en:"English",fr:"French",de:"German",it:"Italian",ja:"Japanese",pt:"Portuguese",ru:"Russian",es:"Spanish"};return t[e]?t[e]:e}var h,d,p="tracks",f=[];for(d=0;d<a(e);d++)if(h=e.childNodes[d],h.prefix===l){if(!o(h))continue;switch(o(h).toLowerCase()){case"content":if(s(h,"duration")&&(t.duration=i.seconds(s(h,"duration"))),s(h,"url")){t.sources||(t.sources=[]);var g={file:s(h,"url"),type:s(h,"type"),width:s(h,"width"),label:s(h,"label")},m=n(h);m.length&&(g.mediaTypes=m),t.sources.push(g)}a(h)>0&&(t=c(h,t));break;case"title":t.title=r(h);break;case"description":t.description=r(h);break;case"guid":t.mediaid=r(h);break;case"thumbnail":t.image||(t.image=s(h,"url"));break;case"player":break;case"group":c(h,t);break;case"subtitle":var v={};v.file=s(h,"url"),v.kind="captions",s(h,"lang").length>0&&(v.label=u(s(h,"lang"))),f.push(v)}}for(t.hasOwnProperty(p)||(t[p]=[]),d=0;d<f.length;d++)t[p].push(f[d]);return t};return c}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1)],s=function(e){var t={kind:"captions","default":!1},i=function(i){return i&&i.file?e.extend({},t,i):void 0};return i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(56),i(2),i(4),i(3),i(1),i(32)],s=function(e,t,i,n,s,o){function r(e,t,i){return function(){var n=e.getContainer().getElementsByClassName("jw-overlays")[0];n&&(n.appendChild(i),i.left=n.style.left,i.top=n.style.top,t.displayArea=n)}}function a(e){function t(){var t=e.displayArea;t&&e.resize(t.clientWidth,t.clientHeight)}return function(){t(),setTimeout(t,400)}}var l=function(l,c){function u(){m||(m=!0,g=o.loaderstatus.COMPLETE,f.trigger(i.COMPLETE))}function h(){if(!y&&(c&&0!==s.keys(c).length||u(),!m)){var n=l.getPlugins();p=s.after(v,u),s.each(c,function(s,r){var a=e.getPluginName(r),l=n[a],c=l.getJS(),u=l.getTarget(),h=l.getStatus();h!==o.loaderstatus.LOADING&&h!==o.loaderstatus.NEW&&(c&&!t.versionCheck(u)&&f.trigger(i.ERROR,{message:"Incompatible player version"}),p())})}}function d(e){if(!y){var n="File not found";e.url&&t.log(n,e.url),this.off(),this.trigger(i.ERROR,{message:n}),h()}}var p,f=s.extend(this,n),g=o.loaderstatus.NEW,m=!1,v=s.size(c),y=!1;this.setupPlugins=function(i,n){var o=[],c=l.getPlugins(),u=n.get("plugins");s.each(u,function(n,l){var h=e.getPluginName(l),d=c[h],p=d.getFlashPath(),f=d.getJS(),g=d.getURL();if(p){var m=s.extend({name:h,swf:p,pluginmode:d.getPluginmode()},n);o.push(m)}var v=t.tryCatch(function(){if(f&&u[g]){var e=document.createElement("div");e.id=i.id+"_"+h,e.className="jw-plugin jw-reset";var t=s.extend({},u[g]),n=d.getNewInstance(i,t,e);n.addToPlayer=r(i,n,e),n.resizeHandler=a(n),i.addPlugin(h,n,e)}});v instanceof t.Error&&t.log("ERROR: Failed to load "+h+".")}),n.set("flashPlugins",o)},this.load=function(){if(t.exists(c)&&"object"!==t.typeOf(c))return void h();g=o.loaderstatus.LOADING,s.each(c,function(e,n){if(t.exists(n)){var s=l.addPlugin(n);s.on(i.COMPLETE,h),s.on(i.ERROR,d)}});var e=l.getPlugins();s.each(e,function(e){e.load()}),h()},this.destroy=function(){y=!0,this.off()},this.getStatus=function(){return g}};return l}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(56),i(120)],s=function(e,t){var i=function(i){this.addPlugin=function(n){var s=e.getPluginName(n);return i[s]||(i[s]=new t(n)),i[s]},this.getPlugins=function(){return i}};return i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(43),i(42)],s=function(e,t){var i={html5:e,flash:t};return i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(1),i(129)],s=function(e,t,i){function n(t){if("hls"===t.type)if(t.androidhls!==!1){var i=e.isAndroidNative;if(i(2)||i(3)||i("4.0"))return!1;if(e.isAndroid())return!0}else if(e.isAndroid())return!1;return null}var s=[{name:"youtube",supports:function(t){return e.isYouTube(t.file,t.type)}},{name:"html5",supports:function(t){var s={aac:"audio/mp4",mp4:"video/mp4",f4v:"video/mp4",m4v:"video/mp4",mov:"video/mp4",mp3:"audio/mpeg",mpeg:"audio/mpeg",ogv:"video/ogg",ogg:"video/ogg",oga:"video/ogg",vorbis:"video/ogg",webm:"video/webm",f4a:"video/aac",m3u8:"application/vnd.apple.mpegurl",m3u:"application/vnd.apple.mpegurl",hls:"application/vnd.apple.mpegurl"},o=t.file,r=t.type,a=n(t);if(null!==a)return a;if(e.isRtmp(o,r))return!1;if(!s[r])return!1;if(i.canPlayType){var l=i.canPlayType(s[r]);return!!l}return!1}},{name:"flash",supports:function(i){var n={flv:"video",f4v:"video",mov:"video",m4a:"video",m4v:"video",mp4:"video",aac:"video",f4a:"video",mp3:"sound",mpeg:"sound",smil:"rtmp"},s=t.keys(n);if(!e.isFlashSupported())return!1;var o=i.file,r=i.type;return e.isRtmp(o,r)?!0:t.contains(s,r)}}];return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(31),i(88),i(274),i(1)],s=function(e,t,n,s){function o(e){this.providers=t.slice(),this.config=e||{},this.reorderProviders()}return o.registerProvider=function(i){var o=i.getName().name;if(!n[o]){if(!s.find(t,s.matches({name:o}))){if(!s.isFunction(i.supports))throw{message:"Tried to register a provider with an invalid object"};t.unshift({name:o,supports:i.supports})}var r=function(){};r.prototype=e,i.prototype=new r,n[o]=i}},o.load=function(e){return Promise.all(s.map(e,function(e){return new Promise(function(t){switch(e.name){case"html5":!function(e){t(i(43))}(i);break;case"flash":!function(e){t(i(42))}(i);break;case"youtube":i.e(0,function(e){t(i(57))});break;default:t()}}).then(function(e){e&&o.registerProvider(e)})}))},s.extend(o.prototype,{reorderProviders:function(){if("flash"===this.config.primary){var e=s.indexOf(this.providers,s.findWhere(this.providers,{name:"flash"})),t=this.providers.splice(e,1)[0],i=s.indexOf(this.providers,s.findWhere(this.providers,{name:"html5"}));this.providers.splice(i,0,t)}},providerSupports:function(e,t){return e.supports(t)},required:function(e,t){return e=e.slice(),s.compact(s.map(this.providers,function(i){for(var n=!1,s=e.length;s--;){var o=e[s],r=i.supports(o.sources[0],t);r&&e.splice(s,1),n=n||r}return n?i:void 0}))},choose:function(e){e=s.isObject(e)?e:{};for(var t=this.providers.length,i=0;t>i;i++){var o=this.providers[i];if(this.providerSupports(o,e)){var r=t-i-1;return{priority:r,name:o.name,type:e.type,provider:n[o.name]}}}return null}}),o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(85)],s=function(e,t){function i(e){e.onload=null,e.onprogress=null,e.onreadystatechange=null,e.onerror=null,"abort"in e&&e.abort()}function n(t,n){return function(s){var o=s.currentTarget||n.xhr;if(clearTimeout(n.timeoutId),n.retryWithoutCredentials&&n.xhr.withCredentials){i(o);var r=e.extend({},n,{xhr:null,withCredentials:!1,retryWithoutCredentials:!1});return void h(r)}n.onerror(t,n.url,o)}}function s(e){return function(t){var i=t.currentTarget||e.xhr;if(4===i.readyState){if(clearTimeout(e.timeoutId),i.status>=400){var n;return n=404===i.status?"File not found":""+i.status+"("+i.statusText+")",e.onerror(n,e.url,i)}if(200===i.status)return o(e)(t)}}}function o(e){return function(i){var n=i.currentTarget||e.xhr;if(clearTimeout(e.timeoutId),e.responseType){if("json"===e.responseType)return r(n,e)}else{var s,o=n.responseXML;if(o)try{s=o.firstChild}catch(l){}if(o&&s)return a(n,o,e);if(c&&n.responseText&&!o&&(o=t.parseXML(n.responseText),o&&o.firstChild))return a(n,o,e);if(e.requireValidXML)return void e.onerror("Invalid XML",e.url,n)}e.oncomplete(n)}}function r(t,i){if(!t.response||e.isString(t.response)&&'"'!==t.responseText.substr(1))try{t=e.extend({},t,{response:JSON.parse(t.responseText)})}catch(n){return void i.onerror("Invalid JSON",i.url,t)}return i.oncomplete(t)}function a(t,i,n){var s=i.documentElement;return n.requireValidXML&&("parsererror"===s.nodeName||s.getElementsByTagName("parsererror").length)?void n.onerror("Invalid XML",n.url,t):(t.responseXML||(t=e.extend({},t,{responseXML:i})),n.oncomplete(t))}var l=function(){},c=!1,u=function(e){var t=document.createElement("a"),i=document.createElement("a");t.href=location.href;try{return i.href=e,i.href=i.href,t.protocol+"//"+t.host!=i.protocol+"//"+i.host}catch(n){}return!0},h=function(t,r,a,h){e.isObject(t)&&(h=t,t=h.url);var d,p=e.extend({xhr:null,url:t,withCredentials:!1,retryWithoutCredentials:!1,timeout:6e4,timeoutId:-1,oncomplete:r||l,onerror:a||l,mimeType:h&&!h.responseType?"text/xml":"",requireValidXML:!1,responseType:h&&h.plainText?"text":""},h);if("XDomainRequest"in window&&u(t))d=p.xhr=new window.XDomainRequest,d.onload=o(p),d.ontimeout=d.onprogress=l,c=!0;else{if(!("XMLHttpRequest"in window))return void p.onerror("",t);d=p.xhr=new window.XMLHttpRequest,d.onreadystatechange=s(p)}var f=n("Error loading file",p);d.onerror=f,"overrideMimeType"in d?p.mimeType&&d.overrideMimeType(p.mimeType):c=!0;try{t=t.replace(/#.*$/,""),d.open("GET",t,!0)}catch(g){return f(g),d}if(p.responseType)try{d.responseType=p.responseType}catch(g){}p.timeout&&(p.timeoutId=setTimeout(function(){i(d),p.onerror("Timeout",t,d)},p.timeout));try{p.withCredentials&&"withCredentials"in d&&(d.withCredentials=!0),d.send()}catch(g){f(g)}return d};return{ajax:h,crossdomain:u}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(3),i(1)],s=function(e,t,i){function n(e,t,i){var n=document.createElement("param");n.setAttribute("name",t),n.setAttribute("value",i),e.appendChild(n)}function s(s,o,l,c){var u;if(c=c||"opaque",e.isMSIE()){var h=document.createElement("div");o.appendChild(h),h.outerHTML='<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="100%" height="100%" id="'+l+'" name="'+l+'" tabindex="0"><param name="movie" value="'+s+'"><param name="allowfullscreen" value="true"><param name="allowscriptaccess" value="always"><param name="wmode" value="'+c+'"><param name="bgcolor" value="'+a+'"><param name="menu" value="false"></object>';for(var d=o.getElementsByTagName("object"),p=d.length;p--;)d[p].id===l&&(u=d[p])}else u=document.createElement("object"),u.setAttribute("type","application/x-shockwave-flash"),u.setAttribute("data",s),u.setAttribute("width","100%"),u.setAttribute("height","100%"),u.setAttribute("bgcolor",a),u.setAttribute("id",l),u.setAttribute("name",l),n(u,"allowfullscreen","true"),n(u,"allowscriptaccess","always"),n(u,"wmode",c),n(u,"menu","false"),o.appendChild(u,o);return u.className="jw-swf jw-reset",u.style.display="block",u.style.position="absolute",u.style.left=0,u.style.right=0,u.style.top=0,u.style.bottom=0,i.extend(u,t),u.queueCommands=!0,u.triggerFlash=function(t){var n=this;if("setup"!==t&&n.queueCommands||!n.__externalCall){for(var s=n.__commandQueue,o=s.length;o--;)s[o][0]===t&&s.splice(o,1);return s.push(Array.prototype.slice.call(arguments)),n}var a=Array.prototype.slice.call(arguments,1),l=e.tryCatch(function(){if(a.length){for(var e=a.length;e--;)"object"==typeof a[e]&&i.each(a[e],r);var s=JSON.stringify(a);n.__externalCall(t,s)}else n.__externalCall(t)});return l instanceof e.Error&&(console.error(t,l),"setup"===t)?(l.name="Failed to setup flash",l):n},u.__commandQueue=[],u}function o(e){e&&e.parentNode&&(e.style.display="none",e.parentNode.removeChild(e))}function r(e,t,i){e instanceof window.HTMLElement&&delete i[t]}var a="#000000";return{embed:s,remove:o}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){return{hasClass:function(e,t){var i=" "+t+" ";return 1===e.nodeType&&(" "+e.className+" ").replace(/[\t\r\n\f]/g," ").indexOf(i)>=0}}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(3)],s=function(e,t){
var i=e.extend({get:function(e){return this.attributes=this.attributes||{},this.attributes[e]},set:function(e,t){if(this.attributes=this.attributes||{},this.attributes[e]!==t){var i=this.attributes[e];this.attributes[e]=t,this.trigger("change:"+e,this,t,i)}},clone:function(){return e.clone(this.attributes)}},t);return i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(45),i(6),i(1)],s=function(e,t,i,n){var s=t.style,o={back:!0,fontSize:15,fontFamily:"Arial,sans-serif",fontOpacity:100,color:"#FFF",backgroundColor:"#000",backgroundOpacity:100,edgeStyle:null,windowColor:"#FFF",windowOpacity:0,preprocessor:n.identity},r=function(r){function a(t){t=t||"";var i="jw-captions-window jw-reset";t?(w.innerHTML=t,y.className=i+" jw-captions-window-active"):(y.className=i,e.empty(w))}function l(e){m=e,u(f,m)}function c(e,t){var i=e.source,s=t.metadata;return i?s&&n.isNumber(s[i])?s[i]:!1:t.position}function u(e,t){if(e&&e.data&&t){var i=c(e,t);if(i!==!1){var n=e.data;if(!(g>=0&&h(n,g,i))){for(var s=-1,o=0;o<n.length;o++)if(h(n,o,i)){s=o;break}-1===s?a(""):s!==g&&(g=s,a(b.preprocessor(n[g].text)))}}}}function h(e,t,i){return e[t].begin<=i&&(!e[t].end||e[t].end>=i)&&(t===e.length-1||e[t+1].begin>=i)}function d(e,i,n){if(t.css("#"+e+" .jw-video::-webkit-media-text-track-display",i),t.css("#"+e+" .jw-video::cue",n),n.backgroundColor){var s="{background-color: "+n.backgroundColor+" !important;}";t.css("#"+e+" .jw-video::-webkit-media-text-track-display-backdrop",s)}}function p(e,i,n){var s=t.hexToRgba("#000000",n);"dropshadow"===e?i.textShadow="0 2px 1px "+s:"raised"===e?i.textShadow="0 0 5px "+s+", 0 1px 5px "+s+", 0 2px 5px "+s:"depressed"===e?i.textShadow="0 -2px 1px "+s:"uniform"===e&&(i.textShadow="-2px 0 1px "+s+",2px 0 1px "+s+",0 -2px 1px "+s+",0 2px 1px "+s+",-1px 1px 1px "+s+",1px 1px 1px "+s+",1px -1px 1px "+s+",1px 1px 1px "+s)}var f,g,m,v,y,w,b={};v=document.createElement("div"),v.className="jw-captions jw-reset",this.show=function(){v.className="jw-captions jw-captions-enabled jw-reset"},this.hide=function(){v.className="jw-captions jw-reset"},this.populate=function(e){return g=-1,f=e,e?void u(e,m):void a("")},this.resize=function(){var e=v.clientWidth,t=Math.pow(e/400,.6);if(t){var i=b.fontSize*t;s(v,{fontSize:Math.round(i)+"px"})}},this.setup=function(e,i){if(y=document.createElement("div"),w=document.createElement("span"),y.className="jw-captions-window jw-reset",w.className="jw-captions-text jw-reset",b=n.extend({},o,i),i){var a=b.fontOpacity,l=b.windowOpacity,c=b.edgeStyle,u=b.backgroundColor,h={},f={color:t.hexToRgba(b.color,a),fontFamily:b.fontFamily,fontStyle:b.fontStyle,fontWeight:b.fontWeight,textDecoration:b.textDecoration};l&&(h.backgroundColor=t.hexToRgba(b.windowColor,l)),p(c,f,a),b.back?f.backgroundColor=t.hexToRgba(u,b.backgroundOpacity):null===c&&p("uniform",f),s(y,h),s(w,f),d(e,h,f)}y.appendChild(w),v.appendChild(y),this.populate(r.get("captionsTrack"))},this.element=function(){return v},r.on("change:playlistItem",function(){m=null,g=-1,a("")},this),r.on("change:captionsTrack",function(e,t){this.populate(t)},this),r.mediaController.on("seek",function(){g=-1},this),r.mediaController.on("time seek",l,this),r.mediaController.on("subtitlesTrackData",function(){u(f,m)},this),r.on("change:state",function(e,t){switch(t){case i.IDLE:case i.ERROR:case i.COMPLETE:this.hide();break;default:this.show()}},this)};return r}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(12),i(4),i(3),i(1)],s=function(e,t,i,n){var s=function(s,o,r){function a(e){return s.get("flashBlocked")?void 0:u?void u(e):void f.trigger(e.type===t.touchEvents.CLICK?"click":"tap")}function l(){return h?void h():void f.trigger("doubleClick")}var c,u,h,d={enableDoubleTap:!0,useMove:!0};n.extend(this,i),c=o,this.element=function(){return c};var p=new e(c,n.extend(d,r));p.on("click tap",a),p.on("doubleClick doubleTap",l),p.on("move",function(){f.trigger("move")}),p.on("over",function(){f.trigger("over")}),p.on("out",function(){f.trigger("out")}),this.clickHandler=a;var f=this;this.setAlternateClickHandlers=function(e,t){u=e,h=t||null},this.revertAlternateClickHandlers=function(){u=null,h=null}};return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(2),i(83)],s=function(e,t,i){function n(e,t){this.time=e,this.text=t,this.el=document.createElement("div"),this.el.className="jw-cue jw-reset"}e.extend(n.prototype,{align:function(e){if("%"===this.time.toString().slice(-1))this.pct=this.time;else{var t=this.time/e*100;this.pct=t+"%"}this.el.style.left=this.pct}});var s={loadChapters:function(e){t.ajax(e,this.chaptersLoaded.bind(this),this.chaptersFailed,{plainText:!0})},chaptersLoaded:function(t){var n=i(t.responseText);e.isArray(n)&&(e.each(n,this.addCue,this),this.drawCues())},chaptersFailed:function(){},addCue:function(e){this.cues.push(new n(e.begin,e.text))},drawCues:function(){var t=this._model.mediaModel.get("duration");if(!t||0>=t)return void this._model.mediaModel.once("change:duration",this.drawCues,this);var i=this;e.each(this.cues,function(e){e.align(t),e.el.addEventListener("mouseover",function(){i.activeCue=e}),e.el.addEventListener("mouseout",function(){i.activeCue=null}),i.elementRail.appendChild(e.el)})},resetChapters:function(){e.each(this.cues,function(e){e.el.parentNode&&e.el.parentNode.removeChild(e.el)},this),this.cues=[]}};return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(47),i(2),i(1),i(12)],s=function(e,t,i,n){var s=e.extend({constructor:function(t){e.call(this,t),this.container.className="jw-overlay-horizontal jw-reset",this.openClass="jw-open-drawer",this.componentType="drawer"},setup:function(e,s){this.iconUI||(this.iconUI=new n(this.el,{useHover:!0,directSelect:!0}),this.toggleOpenStateListener=this.toggleOpenState.bind(this),this.openTooltipListener=this.openTooltip.bind(this),this.closeTooltipListener=this.closeTooltip.bind(this)),this.reset(),e=i.isArray(e)?e:[],this.activeContents=i.filter(e,function(e){return e.isActive}),t.toggleClass(this.el,"jw-hidden",!s||this.activeContents.length<2),s&&this.activeContents.length>1&&(t.removeClass(this.el,"jw-off"),this.iconUI.on("tap",this.toggleOpenStateListener).on("over",this.openTooltipListener).on("out",this.closeTooltipListener),i.each(e,function(e){this.container.appendChild(e.el)},this))},reset:function(){t.addClass(this.el,"jw-off"),this.iconUI.off(),this.contentUI&&this.contentUI.off().destroy(),this.removeContent()}});return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(47),i(2),i(1),i(12),i(232)],s=function(e,t,i,n,s){var o=e.extend({setup:function(e,o,r){this.iconUI||(this.iconUI=new n(this.el,{useHover:!0,directSelect:!0}),this.toggleValueListener=this.toggleValue.bind(this),this.toggleOpenStateListener=this.toggleOpenState.bind(this),this.openTooltipListener=this.openTooltip.bind(this),this.closeTooltipListener=this.closeTooltip.bind(this),this.selectListener=this.select.bind(this)),this.reset(),e=i.isArray(e)?e:[],t.toggleClass(this.el,"jw-hidden",e.length<2);var a=e.length>2||2===e.length&&r&&r.toggle===!1,l=!a&&2===e.length;if(t.toggleClass(this.el,"jw-toggle",l),t.toggleClass(this.el,"jw-button-color",!l),this.isActive=a||l,a){t.removeClass(this.el,"jw-off"),this.iconUI.on("tap",this.toggleOpenStateListener).on("over",this.openTooltipListener).on("out",this.closeTooltipListener);var c=s(e),u=t.createElement(c);this.addContent(u),this.contentUI=new n(this.content).on("click tap",this.selectListener)}else l&&this.iconUI.on("click tap",this.toggleValueListener);this.selectItem(o)},toggleValue:function(){this.trigger("toggleValue")},select:function(e){if(e.target.parentElement===this.content){var n=t.classList(e.target),s=i.find(n,function(e){return 0===e.indexOf("jw-item")});s&&(this.trigger("select",parseInt(s.split("-")[2])),this.closeTooltipListener())}},selectItem:function(e){if(this.content)for(var i=0;i<this.content.children.length;i++)t.toggleClass(this.content.children[i],"jw-active-option",e===i);else t.toggleClass(this.el,"jw-off",0===e)},reset:function(){t.addClass(this.el,"jw-off"),this.iconUI.off(),this.contentUI&&this.contentUI.off().destroy(),this.removeContent()}});return o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(1),i(47),i(12),i(234)],s=function(e,t,i,n,s){var o=i.extend({setup:function(i,s){if(this.iconUI||(this.iconUI=new n(this.el,{useHover:!0}),this.toggleOpenStateListener=this.toggleOpenState.bind(this),this.openTooltipListener=this.openTooltip.bind(this),this.closeTooltipListener=this.closeTooltip.bind(this),this.selectListener=this.onSelect.bind(this)),this.reset(),i=t.isArray(i)?i:[],e.toggleClass(this.el,"jw-hidden",i.length<2),i.length>=2){this.iconUI=new n(this.el,{useHover:!0}).on("tap",this.toggleOpenStateListener).on("over",this.openTooltipListener).on("out",this.closeTooltipListener);var o=this.menuTemplate(i,s),r=e.createElement(o);this.addContent(r),this.contentUI=new n(this.content),this.contentUI.on("click tap",this.selectListener)}this.originalList=i},menuTemplate:function(i,n){var o=t.map(i,function(t,i){var s=t.title?e.createElement(t.title).textContent:"";return{active:i===n,label:i+1+".",title:s}});return s(o)},onSelect:function(i){var n=i.target;if("UL"!==n.tagName){"LI"!==n.tagName&&(n=n.parentElement);var s=e.classList(n),o=t.find(s,function(e){return 0===e.indexOf("jw-item")});o&&(this.trigger("select",parseInt(o.split("-")[2])),this.closeTooltip())}},selectItem:function(e){this.setup(this.originalList,e)},reset:function(){this.iconUI.off(),this.contentUI&&this.contentUI.off().destroy(),this.removeContent()}});return o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(2),i(83)],s=function(e,t,i){function n(e){this.begin=e.begin,this.end=e.end,this.img=e.text}var s={loadThumbnails:function(e){e&&(this.vttPath=e.split("?")[0].split("/").slice(0,-1).join("/"),this.individualImage=null,t.ajax(e,this.thumbnailsLoaded.bind(this),this.thumbnailsFailed.bind(this),{plainText:!0}))},thumbnailsLoaded:function(t){var s=i(t.responseText);e.isArray(s)&&(e.each(s,function(e){this.thumbnails.push(new n(e))},this),this.drawCues())},thumbnailsFailed:function(){},chooseThumbnail:function(t){var i=e.sortedIndex(this.thumbnails,{end:t},e.property("end"));i>=this.thumbnails.length&&(i=this.thumbnails.length-1);var n=this.thumbnails[i].img;return n.indexOf("://")<0&&(n=this.vttPath?this.vttPath+"/"+n:n),n},loadThumbnail:function(t){var i=this.chooseThumbnail(t),n={display:"block",margin:"0 auto",backgroundPosition:"0 0"},s=i.indexOf("#xywh");if(s>0)try{var o=/(.+)\#xywh=(\d+),(\d+),(\d+),(\d+)/.exec(i);i=o[1],n.backgroundPosition=-1*o[2]+"px "+-1*o[3]+"px",n.width=o[4],n.height=o[5]}catch(r){return}else this.individualImage||(this.individualImage=new Image,this.individualImage.onload=e.bind(function(){this.individualImage.onload=null,this.timeTip.image({width:this.individualImage.width,height:this.individualImage.height})},this),this.individualImage.src=i);return n.backgroundImage='url("'+i+'")',n},showThumbnail:function(e){this.thumbnails.length<1||this.timeTip.image(this.loadThumbnail(e))},resetThumbnails:function(){this.timeTip.image({backgroundImage:"",width:0,height:0}),this.thumbnails=[]}};return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(2),i(44),i(87),i(47),i(283),i(287)],s=function(e,t,i,n,s,o,r){var a=s.extend({setup:function(){this.text=document.createElement("span"),this.text.className="jw-text jw-reset",this.img=document.createElement("div"),this.img.className="jw-reset";var e=document.createElement("div");e.className="jw-time-tip jw-background-color jw-reset",e.appendChild(this.img),e.appendChild(this.text),t.removeClass(this.el,"jw-hidden"),this.addContent(e)},image:function(e){t.style(this.img,e)},update:function(e){this.text.innerHTML=e}}),l=n.extend({constructor:function(t,i){this._model=t,this._api=i,this.timeTip=new a("jw-tooltip-time"),this.timeTip.setup(),this.cues=[],this.seekThrottled=e.throttle(this.performSeek,400),this._model.on("change:playlistItem",this.onPlaylistItem,this).on("change:position",this.onPosition,this).on("change:duration",this.onDuration,this).on("change:buffer",this.onBuffer,this),n.call(this,"jw-slider-time","horizontal")},setup:function(){n.prototype.setup.apply(this,arguments),this._model.get("playlistItem")&&this.onPlaylistItem(this._model,this._model.get("playlistItem")),this.elementRail.appendChild(this.timeTip.element()),this.el.addEventListener("mousemove",this.showTimeTooltip.bind(this),!1),this.el.addEventListener("mouseout",this.hideTimeTooltip.bind(this),!1)},limit:function(n){if(this.activeCue&&e.isNumber(this.activeCue.pct))return this.activeCue.pct;var s=this._model.get("duration"),o=t.adaptiveType(s);if("DVR"===o){var r=(1-n/100)*s,a=this._model.get("position"),l=Math.min(r,Math.max(i.dvrSeekLimit,a)),c=100*l/s;return 100-c}return n},update:function(e){this.seekTo=e,this.seekThrottled(),n.prototype.update.apply(this,arguments)},dragStart:function(){this._model.set("scrubbing",!0),n.prototype.dragStart.apply(this,arguments)},dragEnd:function(){n.prototype.dragEnd.apply(this,arguments),this._model.set("scrubbing",!1)},onSeeked:function(){this._model.get("scrubbing")&&this.performSeek()},onBuffer:function(e,t){this.updateBuffer(t)},onPosition:function(e,t){this.updateTime(t,e.get("duration"))},onDuration:function(e,t){this.updateTime(e.get("position"),t)},updateTime:function(e,i){var n=0;if(i){var s=t.adaptiveType(i);"DVR"===s?n=(i-e)/i*100:"VOD"===s&&(n=e/i*100)}this.render(n)},onPlaylistItem:function(t,i){this.reset(),t.mediaModel.on("seeked",this.onSeeked,this);var n=i.tracks;e.each(n,function(e){e&&e.kind&&"thumbnails"===e.kind.toLowerCase()?this.loadThumbnails(e.file):e&&e.kind&&"chapters"===e.kind.toLowerCase()&&this.loadChapters(e.file)},this)},performSeek:function(){var e,i=this.seekTo,n=this._model.get("duration"),s=t.adaptiveType(n);0===n?this._api.play():"DVR"===s?(e=(100-i)/100*n,this._api.seek(e)):(e=i/100*n,this._api.seek(Math.min(e,n-.25)))},showTimeTooltip:function(e){var n=this._model.get("duration");if(0!==n){var s=t.bounds(this.elementRail),o=e.pageX?e.pageX-s.left:e.x;o=t.between(o,0,s.width);var r=o/s.width,a=n*r;0>n&&(a=n-a);var l;if(this.activeCue)l=this.activeCue.text;else{var c=!0;l=t.timeFormat(a,c),0>n&&a>i.dvrSeekLimit&&(l="Live")}this.timeTip.update(l),this.showThumbnail(a),t.addClass(this.timeTip.el,"jw-open"),this.timeTip.el.style.left=100*r+"%"}},hideTimeTooltip:function(){t.removeClass(this.timeTip.el,"jw-open")},reset:function(){this.resetChapters(),this.resetThumbnails()}});return e.extend(l.prototype,o,r),l}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(47),i(87),i(12),i(2)],s=function(e,t,i,n){var s=e.extend({constructor:function(s,o){this._model=s,e.call(this,o),this.volumeSlider=new t("jw-slider-volume jw-volume-tip","vertical"),this.addContent(this.volumeSlider.element()),this.volumeSlider.on("update",function(e){this.trigger("update",e)},this),n.removeClass(this.el,"jw-hidden"),new i(this.el,{useHover:!0,directSelect:!0}).on("click",this.toggleValue,this).on("tap",this.toggleOpenState,this).on("over",this.openTooltip,this).on("out",this.closeTooltip,this),this._model.on("change:volume",this.onVolume,this)},toggleValue:function(){this.trigger("toggleValue")}});return s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(1),i(3),i(44),i(12),i(87),i(288),i(285),i(286),i(289),i(284)],s=function(e,t,i,n,s,o,r,a,l,c,u){function h(e,t){var i=document.createElement("div");return i.className="jw-icon jw-icon-inline jw-button-color jw-reset "+e,i.style.display="none",t&&new s(i).on("click tap",function(){t()}),{element:function(){return i},toggle:function(e){e?this.show():this.hide()},show:function(){i.style.display=""},hide:function(){i.style.display="none"}}}function d(e){var t=document.createElement("span");return t.className="jw-text jw-reset "+e,t}function p(e){var t=new a(e);return t}function f(e,i){var n=document.createElement("div");return n.className="jw-group jw-controlbar-"+e+"-group jw-reset",t.each(i,function(e){e.element&&(e=e.element()),n.appendChild(e)}),n}function g(t,i){this._api=t,this._model=i,this._isMobile=e.isMobile(),this._compactModeMaxSize=400,this._maxCompactWidth=-1,this.setup()}return t.extend(g.prototype,i,{setup:function(){this.build(),this.initialize()},build:function(){var e,i,n,s,a=new r(this._model,this._api),g=new u("jw-icon-more");this._model.get("visualplaylist")!==!1&&(e=new l("jw-icon-playlist")),this._isMobile||(s=h("jw-icon-volume",this._api.setMute),i=new o("jw-slider-volume","horizontal"),n=new c(this._model,"jw-icon-volume")),this.elements={alt:d("jw-text-alt"),play:h("jw-icon-playback",this._api.play.bind(this,{reason:"interaction"})),prev:h("jw-icon-prev",this._api.playlistPrev.bind(this,{reason:"interaction"})),next:h("jw-icon-next",this._api.playlistNext.bind(this,{reason:"interaction"})),playlist:e,elapsed:d("jw-text-elapsed"),time:a,duration:d("jw-text-duration"),drawer:g,hd:p("jw-icon-hd"),cc:p("jw-icon-cc"),audiotracks:p("jw-icon-audio-tracks"),mute:s,volume:i,volumetooltip:n,cast:h("jw-icon-cast jw-off",this._api.castToggle),fullscreen:h("jw-icon-fullscreen",this._api.setFullscreen)},this.layout={left:[this.elements.play,this.elements.prev,this.elements.playlist,this.elements.next,this.elements.elapsed],center:[this.elements.time,this.elements.alt],right:[this.elements.duration,this.elements.hd,this.elements.cc,this.elements.audiotracks,this.elements.drawer,this.elements.mute,this.elements.cast,this.elements.volume,this.elements.volumetooltip,this.elements.fullscreen],drawer:[this.elements.hd,this.elements.cc,this.elements.audiotracks]},this.menus=t.compact([this.elements.playlist,this.elements.hd,this.elements.cc,this.elements.audiotracks,this.elements.volumetooltip]),this.layout.left=t.compact(this.layout.left),this.layout.center=t.compact(this.layout.center),this.layout.right=t.compact(this.layout.right),this.layout.drawer=t.compact(this.layout.drawer),this.el=document.createElement("div"),this.el.className="jw-controlbar jw-background-color jw-reset",this.elements.left=f("left",this.layout.left),this.elements.center=f("center",this.layout.center),this.elements.right=f("right",this.layout.right),this.el.appendChild(this.elements.left),this.el.appendChild(this.elements.center),this.el.appendChild(this.elements.right)},initialize:function(){this.elements.play.show(),this.elements.fullscreen.show(),this.elements.mute&&this.elements.mute.show(),this.onVolume(this._model,this._model.get("volume")),this.onPlaylist(this._model,this._model.get("playlist")),this.onPlaylistItem(this._model,this._model.get("playlistItem")),this.onMediaModel(this._model,this._model.get("mediaModel")),this.onCastAvailable(this._model,this._model.get("castAvailable")),this.onCastActive(this._model,this._model.get("castActive")),this.onCaptionsList(this._model,this._model.get("captionsList")),this._model.on("change:volume",this.onVolume,this),this._model.on("change:mute",this.onMute,this),this._model.on("change:playlist",this.onPlaylist,this),this._model.on("change:playlistItem",this.onPlaylistItem,this),this._model.on("change:mediaModel",this.onMediaModel,this),this._model.on("change:castAvailable",this.onCastAvailable,this),this._model.on("change:castActive",this.onCastActive,this),this._model.on("change:duration",this.onDuration,this),this._model.on("change:position",this.onElapsed,this),this._model.on("change:fullscreen",this.onFullscreen,this),this._model.on("change:captionsList",this.onCaptionsList,this),this._model.on("change:captionsIndex",this.onCaptionsIndex,this),this._model.on("change:compactUI",this.onCompactUI,this),this.elements.volume&&this.elements.volume.on("update",function(e){var t=e.percentage;this._api.setVolume(t)},this),this.elements.volumetooltip&&(this.elements.volumetooltip.on("update",function(e){var t=e.percentage;this._api.setVolume(t)},this),this.elements.volumetooltip.on("toggleValue",function(){this._api.setMute()},this)),this.elements.playlist&&this.elements.playlist.on("select",function(e){this._model.once("itemReady",function(){this._api.play({reason:"interaction"})},this),this._api.load(e)},this),this.elements.hd.on("select",function(e){this._model.getVideo().setCurrentQuality(e)},this),this.elements.hd.on("toggleValue",function(){this._model.getVideo().setCurrentQuality(0===this._model.getVideo().getCurrentQuality()?1:0)},this),this.elements.cc.on("select",function(e){this._api.setCurrentCaptions(e)},this),this.elements.cc.on("toggleValue",function(){var e=this._model.get("captionsIndex");this._api.setCurrentCaptions(e?0:1)},this),this.elements.audiotracks.on("select",function(e){this._model.getVideo().setCurrentAudioTrack(e)},this),new s(this.elements.duration).on("click tap",function(){if("DVR"===e.adaptiveType(this._model.get("duration"))){var t=this._model.get("position");this._api.seek(Math.max(n.dvrSeekLimit,t))}},this),new s(this.el).on("click tap drag",function(){this.trigger("userAction")},this),this.elements.drawer.on("open-drawer close-drawer",function(t,i){e.toggleClass(this.el,"jw-drawer-expanded",i.isOpen),i.isOpen||this.closeMenus()},this),t.each(this.menus,function(e){e.on("open-tooltip",this.closeMenus,this)},this)},onCaptionsList:function(e,t){var i=e.get("captionsIndex");this.elements.cc.setup(t,i),this.clearCompactMode()},onCaptionsIndex:function(e,t){this.elements.cc.selectItem(t)},onPlaylist:function(e,t){var i=t.length>1;this.elements.next.toggle(i),this.elements.prev.toggle(i),this.elements.playlist&&this.elements.playlist.setup(t,e.get("item"))},onPlaylistItem:function(e){this.elements.time.updateBuffer(0),this.elements.time.render(0),this.elements.duration.innerHTML="00:00",this.elements.elapsed.innerHTML="00:00",this.clearCompactMode();var t=e.get("item");this.elements.playlist&&this.elements.playlist.selectItem(t),this.elements.audiotracks.setup()},onMediaModel:function(i,n){n.on("change:levels",function(e,t){this.elements.hd.setup(t,e.get("currentLevel")),this.clearCompactMode()},this),n.on("change:currentLevel",function(e,t){this.elements.hd.selectItem(t)},this),n.on("change:audioTracks",function(e,i){var n=t.map(i,function(e){return{label:e.name}});this.elements.audiotracks.setup(n,e.get("currentAudioTrack"),{toggle:!1}),this.clearCompactMode()},this),n.on("change:currentAudioTrack",function(e,t){this.elements.audiotracks.selectItem(t)},this),n.on("change:state",function(t,i){"complete"===i&&(this.elements.drawer.closeTooltip(),e.removeClass(this.el,"jw-drawer-expanded"))},this)},onVolume:function(e,t){this.renderVolume(e.get("mute"),t)},onMute:function(e,t){this.renderVolume(t,e.get("volume"))},renderVolume:function(t,i){this.elements.mute&&e.toggleClass(this.elements.mute.element(),"jw-off",t),this.elements.volume&&this.elements.volume.render(t?0:i),this.elements.volumetooltip&&(this.elements.volumetooltip.volumeSlider.render(t?0:i),e.toggleClass(this.elements.volumetooltip.element(),"jw-off",t))},onCastAvailable:function(e,t){this.elements.cast.toggle(t),this.clearCompactMode()},onCastActive:function(t,i){e.toggleClass(this.elements.cast.element(),"jw-off",!i)},onElapsed:function(t,i){var n,s=t.get("duration");n="DVR"===e.adaptiveType(s)?"-"+e.timeFormat(-s):e.timeFormat(i),this.elements.elapsed.innerHTML=n},onDuration:function(t,i){var n;"DVR"===e.adaptiveType(i)?(n="Live",this.clearCompactMode()):n=e.timeFormat(i),this.elements.duration.innerHTML=n},onFullscreen:function(t,i){e.toggleClass(this.elements.fullscreen.element(),"jw-off",i)},element:function(){return this.el},getVisibleBounds:function(){var t,i=this.el,n=getComputedStyle?getComputedStyle(i):i.currentStyle;return"table"===n.display?e.bounds(i):(i.style.visibility="hidden",i.style.display="table",t=e.bounds(i),i.style.visibility=i.style.display="",t)},setAltText:function(e){this.elements.alt.innerHTML=e},addCues:function(e){this.elements.time&&(t.each(e,function(e){this.elements.time.addCue(e)},this),this.elements.time.drawCues())},closeMenus:function(e){t.each(this.menus,function(t){e&&e.target===t.el||t.closeTooltip(e)})},hideComponents:function(){this.closeMenus(),this.elements.drawer.closeTooltip(),e.removeClass(this.el,"jw-drawer-expanded")},clearCompactMode:function(){this._maxCompactWidth=-1,this._model.set("compactUI",!1),this._containerWidth&&this.checkCompactMode(this._containerWidth)},setCompactModeBounds:function(){if(this.element().offsetWidth>0){var t=this.elements.left.offsetWidth+this.elements.right.offsetWidth;if("LIVE"===e.adaptiveType(this._model.get("duration")))this._maxCompactWidth=t+this.elements.alt.offsetWidth;else{var i=t+(this.elements.center.offsetWidth-this.elements.time.el.offsetWidth),n=.2;this._maxCompactWidth=i/(1-n)}}},checkCompactMode:function(e){-1===this._maxCompactWidth&&this.setCompactModeBounds(),this._containerWidth=e,-1!==this._maxCompactWidth&&(e>=this._compactModeMaxSize&&e>this._maxCompactWidth?this._model.set("compactUI",!1):(e<this._compactModeMaxSize||e<=this._maxCompactWidth)&&this._model.set("compactUI",!0))},onCompactUI:function(i,n){e.removeClass(this.el,"jw-drawer-expanded"),this.elements.drawer.setup(this.layout.drawer,n),(!n||this.elements.drawer.activeContents.length<2)&&t.each(this.layout.drawer,function(e){this.elements.right.insertBefore(e.el,this.elements.drawer.el)},this)}}),g}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(3),i(12),i(228),i(1)],s=function(e,t,i,n,s){var o=function(o){s.extend(this,t),this.model=o,this.el=e.createElement(n({}));var r=this;this.iconUI=new i(this.el).on("click tap",function(e){r.trigger(e.type)})};return s.extend(o.prototype,{element:function(){return this.el}}),o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(229),i(2),i(1),i(12)],s=function(e,t,i,n){var s=function(e){this.model=e,this.setup(),this.model.on("change:dock",this.render,this)};return i.extend(s.prototype,{setup:function(){var i=this.model.get("dock"),s=this.click.bind(this),o=e(i);this.el=t.createElement(o),new n(this.el).on("click tap",s)},getDockButton:function(e){return t.hasClass(e.target,"jw-dock-button")?e.target:t.hasClass(e.target,"jw-dock-text")?e.target.parentElement.parentElement:e.target.parentElement},click:function(e){var t=this.getDockButton(e),n=t.getAttribute("button"),s=this.model.get("dock"),o=i.findWhere(s,{id:n});o&&o.callback&&o.callback(e)},render:function(){var i=this.model.get("dock"),n=e(i),s=t.createElement(n);this.el.innerHTML=s.innerHTML},element:function(){return this.el}}),s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(230)],s=function(e){function t(t,i,n,s){return e({id:t,skin:i,title:n,body:s})}return t}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(12),i(2),i(4),i(1),i(3),i(231)],s=function(e,t,i,n,s,o){var r=t.style,a={linktarget:"_blank",margin:8,hide:!1,position:"top-right"},l=function(l){var c,u,h=new Image,d=n.extend({},l.get("logo"));return n.extend(this,s),this.setup=function(s){if(u=n.extend({},a,d),u.hide="true"===u.hide.toString(),c=t.createElement(o()),u.file){u.hide&&t.addClass(c,"jw-hide"),t.addClass(c,"jw-logo-"+(u.position||a.position)),"top-right"===u.position&&(l.on("change:dock",this.topRight,this),l.on("change:controls",this.topRight,this),this.topRight(l)),l.set("logo",u),h.onload=function(){var e={backgroundImage:'url("'+this.src+'")',width:this.width,height:this.height};if(u.margin!==a.margin){var t=/(\w+)-(\w+)/.exec(u.position);3===t.length&&(e["margin-"+t[1]]=u.margin,e["margin-"+t[2]]=u.margin)}r(c,e),l.set("logoWidth",e.width)},h.src=u.file;var p=new e(c);p.on("click tap",function(e){t.exists(e)&&e.stopPropagation&&e.stopPropagation(),this.trigger(i.JWPLAYER_LOGO_CLICK,{link:u.link,linktarget:u.linktarget})},this),s.appendChild(c)}},this.topRight=function(e){var t=e.get("controls"),i=e.get("dock"),n=t&&(i&&i.length||e.get("sharing")||e.get("related"));r(c,{top:n?"3.5em":0})},this.element=function(){return c},this.position=function(){return u.position},this.destroy=function(){h.onload=null},this};return l}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(2)],s=function(e,t){function i(e,t){t.off("change:mediaType",null,this),t.on("change:mediaType",function(t,i){"audio"===i&&this.setImage(e.get("playlistItem").image)},this)}function n(e,i){var n=e.get("autostart")&&!t.isMobile()||e.get("item")>0;return n?(this.setImage(null),e.off("change:state",null,this),void e.on("change:state",function(e,t){"complete"!==t&&"idle"!==t&&"error"!==t||this.setImage(i.image)},this)):void this.setImage(i.image)}var s=function(e){this.model=e,e.on("change:playlistItem",n,this),e.on("change:mediaModel",i,this)};return e.extend(s.prototype,{setup:function(e){this.el=e;var t=this.model.get("playlistItem");t&&this.setImage(t.image)},setImage:function(i){this.model.off("change:state",null,this);var n="";e.isString(i)&&(n='url("'+i+'")'),t.style(this.el,{backgroundImage:n})},element:function(){return this.el}}),s}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(235),i(1),i(12),i(46)],s=function(e,t,i,n,s){var o=function(){};return i.extend(o.prototype,{buildArray:function(){var t=s.split("+"),i=t[0],n={items:[{title:"Powered by JW Player "+i,featured:!0,showLogo:!0,link:"https://jwplayer.com/learn-more"}]},o=i.indexOf("-")>0,r=t[1];if(o&&r){var a=r.split(".");n.items.push({title:"build: ("+a[0]+"."+a[1]+")",link:"#"})}var l=this.model.get("provider");if(l&&l.name.indexOf("flash")>=0){var c="Flash Version "+e.flashVersion();n.items.push({title:c,link:"http://www.adobe.com/software/flash/about/"})}return n},buildMenu:function(){var i=this.buildArray();return e.createElement(t(i))},updateHtml:function(){this.el.innerHTML=this.buildMenu().innerHTML},rightClick:function(e){return this.lazySetup(),this.mouseOverContext?!1:(this.hideMenu(),this.showMenu(e),!1)},getOffset:function(e){for(var t=e.target,i=e.offsetX||e.layerX,n=e.offsetY||e.layerY;t!==this.playerElement;)i+=t.offsetLeft,n+=t.offsetTop,t=t.parentNode;return{x:i,y:n}},showMenu:function(t){var i=this.getOffset(t);return this.el.style.left=i.x+"px",this.el.style.top=i.y+"px",e.addClass(this.playerElement,"jw-flag-rightclick-open"),e.addClass(this.el,"jw-open"),!1},hideMenu:function(){this.mouseOverContext||(e.removeClass(this.playerElement,"jw-flag-rightclick-open"),e.removeClass(this.el,"jw-open"))},lazySetup:function(){this.el||(this.el=this.buildMenu(),this.layer.appendChild(this.el),this.hideMenuHandler=this.hideMenu.bind(this),this.addOffListener(this.playerElement),this.addOffListener(document),this.model.on("change:provider",this.updateHtml,this),this.elementUI=new n(this.el,{useHover:!0}).on("over",function(){this.mouseOverContext=!0},this).on("out",function(){this.mouseOverContext=!1},this))},setup:function(e,t,i){this.playerElement=t,this.model=e,this.mouseOverContext=!1,this.layer=i,t.oncontextmenu=this.rightClick.bind(this)},addOffListener:function(e){e.addEventListener("mousedown",this.hideMenuHandler),e.addEventListener("touchstart",this.hideMenuHandler),e.addEventListener("pointerdown",this.hideMenuHandler)},removeOffListener:function(e){e.removeEventListener("mousedown",this.hideMenuHandler),e.removeEventListener("touchstart",this.hideMenuHandler),e.removeEventListener("pointerdown",this.hideMenuHandler)},destroy:function(){this.el&&(this.hideMenu(),this.elementUI.off(),this.removeOffListener(this.playerElement),this.removeOffListener(document),this.hideMenuHandler=null,this.el=null),this.playerElement&&(this.playerElement.oncontextmenu=null,this.playerElement=null),this.model&&(this.model.off("change:provider",this.updateHtml),this.model=null)}}),o}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(1),i(2)],s=function(e,t){var i=function(e){this.model=e,this.model.on("change:playlistItem",this.playlistItem,this)};return e.extend(i.prototype,{hide:function(){this.el.style.display="none";
},show:function(){this.el.style.display=""},setup:function(e){this.el=e;var t=this.el.getElementsByTagName("div");this.title=t[0],this.description=t[1],this.model.get("playlistItem")&&this.playlistItem(this.model,this.model.get("playlistItem")),this.model.on("change:logoWidth",this.update,this),this.model.on("change:dock",this.update,this)},update:function(e){var i={paddingLeft:0,paddingRight:0},n=e.get("controls"),s=e.get("dock"),o=e.get("logo");if(o){var r=1*(""+o.margin).replace("px",""),a=e.get("logoWidth")+(isNaN(r)?0:r);"top-left"===o.position?i.paddingLeft=a:"top-right"===o.position&&(i.paddingRight=a)}if(n&&s&&s.length){var l=56*s.length;i.paddingRight=Math.max(i.paddingRight,l)}t.style(this.el,i)},playlistItem:function(e,t){if(e.get("displaytitle")||e.get("displaydescription")){var i="",n="";t.title&&e.get("displaytitle")&&(i=t.title),t.description&&e.get("displaydescription")&&(n=t.description),this.updateText(i,n)}else this.hide()},updateText:function(e,t){this.title.innerHTML=e,this.description.innerHTML=t,this.title.firstChild||this.description.firstChild?this.show():this.hide()},element:function(){return this.el}}),i}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(4),i(3),i(44),i(6),i(281),i(282),i(291),i(292),i(294),i(290),i(295),i(316),i(297),i(1),i(233)],s=function(e,t,n,s,o,r,a,l,c,u,h,d,p,f,g,m){var v=e.style,y=e.bounds,w=e.isMobile(),b=["fullscreenchange","webkitfullscreenchange","mozfullscreenchange","MSFullscreenChange"],_=function(_,x){function k(t){var i=0,n=x.get("duration"),o=x.get("position");"DVR"===e.adaptiveType(n)&&(i=n,n=Math.max(o,s.dvrSeekLimit));var r=e.between(o+t,i,n);_.seek(r)}function C(t){var i=e.between(x.get("volume")+t,0,100);_.setVolume(i)}function j(e){return e.ctrlKey||e.metaKey?!1:!!x.get("controls")}function E(e){if(!j(e))return!0;switch(Me||te(),e.keyCode){case 27:_.setFullscreen(!1);break;case 13:case 32:_.play({reason:"interaction"});break;case 37:Me||k(-5);break;case 39:Me||k(5);break;case 38:C(10);break;case 40:C(-10);break;case 77:_.setMute();break;case 70:_.setFullscreen();break;default:if(e.keyCode>=48&&e.keyCode<=59){var t=e.keyCode-48,i=t/10*x.get("duration");_.seek(i)}}return/13|32|37|38|39|40/.test(e.keyCode)?(e.preventDefault(),!1):void 0}function T(){We=!1,e.removeClass(ue,"jw-no-focus")}function A(){We=!0,e.addClass(ue,"jw-no-focus")}function P(){We||T(),Me||te()}function I(){var e=y(ue),i=Math.round(e.width),n=Math.round(e.height);return document.body.contains(ue)?i&&n&&(i===pe&&n===fe||(pe=i,fe=n,clearTimeout(Re),Re=setTimeout(G,50),x.set("containerWidth",i),x.set("containerHeight",n),Fe.trigger(t.JWPLAYER_RESIZE,{width:i,height:n}))):(window.removeEventListener("resize",I),w&&window.removeEventListener("orientationchange",I)),e}function D(t,i){i=i||!1,e.toggleClass(ue,"jw-flag-casting",i)}function L(t,i){e.toggleClass(ue,"jw-flag-cast-available",i),e.toggleClass(he,"jw-flag-cast-available",i)}function M(t,i){e.replaceClass(ue,/jw-stretch-\S+/,"jw-stretch-"+i)}function S(t,i){e.toggleClass(ue,"jw-flag-compact-player",i)}function R(e){e&&!w&&(e.element().addEventListener("mousemove",W,!1),e.element().addEventListener("mouseout",F,!1))}function O(){x.get("state")!==o.IDLE&&x.get("state")!==o.COMPLETE&&x.get("state")!==o.PAUSED||!x.get("controls")||_.play({reason:"interaction"}),Se?ee():te()}function N(e){e.link?(_.pause(!0),_.setFullscreen(!1),window.open(e.link,e.linktarget)):x.get("controls")&&_.play({reason:"interaction"})}function W(){clearTimeout(Ie)}function F(){te()}function H(e){Fe.trigger(e.type,e)}function z(t,i){i?(je&&je.destroy(),e.addClass(ue,"jw-flag-flash-blocked")):(je&&je.setup(x,ue,ue),e.removeClass(ue,"jw-flag-flash-blocked"))}function Y(){x.get("controls")&&_.setFullscreen()}function B(){var i=ue.getElementsByClassName("jw-overlays")[0];i.addEventListener("mousemove",te),ye=new a(x,de,{useHover:!0}),ye.on("click",function(){H({type:t.JWPLAYER_DISPLAY_CLICK}),x.get("controls")&&_.play({reason:"interaction"})}),ye.on("tap",function(){H({type:t.JWPLAYER_DISPLAY_CLICK}),O()}),ye.on("doubleClick",Y),ye.on("move",te),ye.on("over",te);var n=new l(x);n.on("click",function(){H({type:t.JWPLAYER_DISPLAY_CLICK}),_.play({reason:"interaction"})}),n.on("tap",function(){H({type:t.JWPLAYER_DISPLAY_CLICK}),O()}),e.isChrome()&&n.el.addEventListener("mousedown",function(){var e=x.getVideo(),t=e&&0===e.getName().name.indexOf("flash");if(t){var i=function(){document.removeEventListener("mouseup",i),n.el.style.pointerEvents="auto"};this.style.pointerEvents="none",document.addEventListener("mouseup",i)}}),he.appendChild(n.element()),be=new c(x),_e=new u(x),_e.on(t.JWPLAYER_LOGO_CLICK,N);var s=document.createElement("div");s.className="jw-controls-right jw-reset",_e.setup(s),s.appendChild(be.element()),he.appendChild(s),ke=new r(x),ke.setup(ue.id,x.get("captions")),he.parentNode.insertBefore(ke.element(),xe.element());var o=x.get("height");w&&("string"==typeof o||o>=1.5*Le)?e.addClass(ue,"jw-flag-touch"):(je=new p,je.setup(x,ue,ue)),me=new h(_,x),me.on(t.JWPLAYER_USER_ACTION,te),x.on("change:scrubbing",q),x.on("change:compactUI",S),he.appendChild(me.element()),ue.addEventListener("focus",P),ue.addEventListener("blur",T),ue.addEventListener("keydown",E),ue.onmousedown=A}function $(t){return t.get("state")===o.PAUSED?void t.once("change:state",$):void(t.get("scrubbing")===!1&&e.removeClass(ue,"jw-flag-dragging"))}function q(t,i){t.off("change:state",$),i?e.addClass(ue,"jw-flag-dragging"):$(t)}function V(t,i,n){var s,o=ue.className;n=!!n,n&&(o=o.replace(/\s*aspectMode/,""),ue.className!==o&&(ue.className=o),v(ue,{display:"block"},n)),e.exists(t)&&e.exists(i)&&(x.set("width",t),x.set("height",i)),s={width:t},e.hasClass(ue,"jw-flag-aspect-mode")||(s.height=i),v(ue,s,!0),J(i),G(t,i)}function J(t){if(Ce=U(t),me&&!Ce){var i=Me?ge:x;ce(i,i.get("state"))}e.toggleClass(ue,"jw-flag-audio-player",Ce)}function U(e){if(x.get("aspectratio"))return!1;if(g.isString(e)&&e.indexOf("%")>-1)return!1;var t=g.isNumber(e)?e:x.get("containerHeight");return K(t)}function K(e){return e&&Le*(w?1.75:1)>=e}function G(t,i){if(!t||isNaN(Number(t))){if(!de)return;t=de.clientWidth}if(!i||isNaN(Number(i))){if(!de)return;i=de.clientHeight}e.isMSIE(9)&&document.all&&!window.atob&&(t=i="100%");var n=x.getVideo();if(n){var s=n.resize(t,i,x.get("stretching"));s&&(clearTimeout(Re),Re=setTimeout(G,250)),ke.resize(),me.checkCompactMode(t)}}function X(){if(Ne){var e=document.fullscreenElement||document.webkitCurrentFullScreenElement||document.mozFullScreenElement||document.msFullscreenElement;return!(!e||e.id!==x.get("id"))}return Me?ge.getVideo().getFullScreen():x.getVideo().getFullScreen()}function Q(e){var t=x.get("fullscreen"),i=void 0!==e.jwstate?e.jwstate:X();t!==i&&x.set("fullscreen",i),clearTimeout(Re),Re=setTimeout(G,200)}function Z(t,i){i?(e.addClass(t,"jw-flag-fullscreen"),v(document.body,{"overflow-y":"hidden"}),te()):(e.removeClass(t,"jw-flag-fullscreen"),v(document.body,{"overflow-y":""})),G()}function ee(){Se=!1,clearTimeout(Ie),me.hideComponents(),e.addClass(ue,"jw-flag-user-inactive")}function te(){Se||(e.removeClass(ue,"jw-flag-user-inactive"),me.checkCompactMode(de.clientWidth)),Se=!0,clearTimeout(Ie),Ie=setTimeout(ee,De)}function ie(){_.setFullscreen(!1)}function ne(){we&&we.setState(x.get("state")),se(x,x.mediaModel.get("mediaType")),x.mediaModel.on("change:mediaType",se,this)}function se(t,i){var n="audio"===i,s=x.getVideo(),o=s&&0===s.getName().name.indexOf("flash");e.toggleClass(ue,"jw-flag-media-audio",n),n&&!o?ue.insertBefore(ve.el,de):ue.insertBefore(ve.el,ke.element())}function oe(t,i){var n="LIVE"===e.adaptiveType(i);e.toggleClass(ue,"jw-flag-live",n),Fe.setAltText(n?"Live Broadcast":"")}function re(e,t){return t?void(t.name?xe.updateText(t.name,t.message):xe.updateText(t.message,"")):void xe.playlistItem(e,e.get("playlistItem"))}function ae(){var e=x.getVideo();return e?e.isCaster:!1}function le(){e.replaceClass(ue,/jw-state-\S+/,"jw-state-"+Ee)}function ce(t,i){if(Ee=i,clearTimeout(Oe),i===o.COMPLETE||i===o.IDLE?Oe=setTimeout(le,100):le(),ae())return void e.addClass(de,"jw-media-show");switch(i){case o.PLAYING:G();break;case o.PAUSED:te()}}var ue,he,de,pe,fe,ge,me,ve,ye,we,be,_e,xe,ke,Ce,je,Ee,Te,Ae,Pe,Ie=-1,De=w?4e3:2e3,Le=40,Me=!1,Se=!1,Re=-1,Oe=-1,Ne=!1,We=!1,Fe=g.extend(this,n);window.webpackJsonpjwplayer&&i(304),this.model=x,this.api=_,ue=e.createElement(m({id:x.get("id")})),e.isIE()&&e.addClass(ue,"jw-ie");var He=x.get("width"),ze=x.get("height");v(ue,{width:He.toString().indexOf("%")>0?He:He+"px",height:ze.toString().indexOf("%")>0?ze:ze+"px"}),Ae=ue.requestFullscreen||ue.webkitRequestFullscreen||ue.webkitRequestFullScreen||ue.mozRequestFullScreen||ue.msRequestFullscreen,Pe=document.exitFullscreen||document.webkitExitFullscreen||document.webkitCancelFullScreen||document.mozCancelFullScreen||document.msExitFullscreen,Ne=Ae&&Pe,this.onChangeSkin=function(t,i){e.replaceClass(ue,/jw-skin-\S+/,i?"jw-skin-"+i:"")},this.handleColorOverrides=function(){function t(t,n,s){if(s){t=e.prefix(t,"#"+i+" ");var o={};o[n]=s,e.css(t.join(", "),o)}}var i=x.get("id"),n=x.get("skinColorActive"),s=x.get("skinColorInactive"),o=x.get("skinColorBackground");t([".jw-toggle",".jw-button-color:hover"],"color",n),t([".jw-active-option",".jw-progress",".jw-playlist-container .jw-option.jw-active-option",".jw-playlist-container .jw-option:hover"],"background",n),t([".jw-text",".jw-option",".jw-button-color",".jw-toggle.jw-off",".jw-tooltip-title",".jw-skip .jw-skip-icon",".jw-playlist-container .jw-icon"],"color",s),t([".jw-cue",".jw-knob"],"background",s),t([".jw-playlist-container .jw-option"],"border-bottom-color",s),t([".jw-background-color",".jw-tooltip-title",".jw-playlist",".jw-playlist-container .jw-option"],"background",o),t([".jw-playlist-container ::-webkit-scrollbar"],"border-color",o)},this.setup=function(){this.handleColorOverrides(),x.get("skin-loading")===!0&&(e.addClass(ue,"jw-flag-skin-loading"),x.once("change:skin-loading",function(){e.removeClass(ue,"jw-flag-skin-loading")})),this.onChangeSkin(x,x.get("skin"),""),x.on("change:skin",this.onChangeSkin,this),de=ue.getElementsByClassName("jw-media")[0],he=ue.getElementsByClassName("jw-controls")[0];var i=ue.getElementsByClassName("jw-preview")[0];ve=new d(x),ve.setup(i);var n=ue.getElementsByClassName("jw-title")[0];xe=new f(x),xe.setup(n),B(),te(),x.set("mediaContainer",de),x.mediaController.on("fullscreenchange",Q);for(var s=b.length;s--;)document.addEventListener(b[s],Q,!1);window.removeEventListener("resize",I),window.addEventListener("resize",I,!1),w&&(window.removeEventListener("orientationchange",I),window.addEventListener("orientationchange",I,!1)),x.on("change:errorEvent",re),x.on("change:controls",Ye),Ye(x,x.get("controls")),x.on("change:state",ce),x.on("change:duration",oe,this),x.on("change:flashBlocked",z),z(x,x.get("flashBlocked")),_.onPlaylistComplete(ie),_.onPlaylistItem(ne),x.on("change:castAvailable",L),L(x,x.get("castAvailable")),x.on("change:castActive",D),D(x,x.get("castActive")),x.get("stretching")&&M(x,x.get("stretching")),x.on("change:stretching",M),ce(x,o.IDLE),x.on("change:fullscreen",Be),R(me),R(_e);var r=x.get("aspectratio");if(r){e.addClass(ue,"jw-flag-aspect-mode");var a=ue.getElementsByClassName("jw-aspect")[0];v(a,{paddingTop:r})}_.on(t.JWPLAYER_READY,function(){I(),V(x.get("width"),x.get("height"))})};var Ye=function(t,i){if(i){var n=Me?ge.get("state"):x.get("state");ce(t,n)}e.toggleClass(ue,"jw-flag-controls-disabled",!i)},Be=function(t,i){var n=x.getVideo();Ne?(i?Ae.apply(ue):Pe.apply(document),Z(ue,i)):e.isIE()?Z(ue,i):(ge&&ge.getVideo()&&ge.getVideo().setFullscreen(i),n.setFullscreen(i)),n&&0===n.getName().name.indexOf("flash")&&n.setFullscreen(i)};this.resize=function(e,t){var i=!0;V(e,t,i),I()},this.resizeMedia=G,this.reset=function(){document.contains(ue)&&ue.parentNode.replaceChild(Te,ue),e.emptyElement(ue)},this.setupInstream=function(t){this.instreamModel=ge=t,ge.on("change:controls",Ye,this),ge.on("change:state",ce,this),Me=!0,e.addClass(ue,"jw-flag-ads"),te()},this.setAltText=function(e){me.setAltText(e)},this.useExternalControls=function(){e.addClass(ue,"jw-flag-ads-hide-controls")},this.destroyInstream=function(){if(Me=!1,ge&&(ge.off(null,null,this),ge=null),this.setAltText(""),e.removeClass(ue,"jw-flag-ads"),e.removeClass(ue,"jw-flag-ads-hide-controls"),x.getVideo){var t=x.getVideo();t.setContainer(de)}oe(x,x.get("duration")),ye.revertAlternateClickHandlers()},this.addCues=function(e){me&&me.addCues(e)},this.clickHandler=function(){return ye},this.controlsContainer=function(){return he},this.getContainer=this.element=function(){return ue},this.getSafeRegion=function(t){var i={x:0,y:0,width:x.get("containerWidth")||0,height:x.get("containerHeight")||0},n=x.get("dock");return n&&n.length&&x.get("controls")&&(i.y=be.element().clientHeight,i.height-=i.y),t=t||!e.exists(t),t&&x.get("controls")&&(i.height-=me.element().clientHeight),i},this.destroy=function(){window.removeEventListener("resize",I),window.removeEventListener("orientationchange",I);for(var t=b.length;t--;)document.removeEventListener(b[t],Q,!1);x.mediaController&&x.mediaController.off("fullscreenchange",Q),ue.removeEventListener("keydown",E,!1),je&&je.destroy(),we&&(x.off("change:state",we.statusDelegate),we.destroy(),we=null),Me&&this.destroyInstream(),_e&&_e.destroy(),e.clearCss("#"+x.get("id"))}};return _}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,function(e,t,i){function n(e,t){for(var i=0;i<e.length;i++){var n=e[i],s=h[n.id];if(s){s.refs++;for(var o=0;o<s.parts.length;o++)s.parts[o](n.parts[o]);for(;o<n.parts.length;o++)s.parts.push(l(n.parts[o],t))}else{for(var r=[],o=0;o<n.parts.length;o++)r.push(l(n.parts[o],t));h[n.id]={id:n.id,refs:1,parts:r}}}}function s(e){for(var t=[],i={},n=0;n<e.length;n++){var s=e[n],o=s[0],r=s[1],a=s[2],l={css:r,media:a};i[o]?i[o].parts.push(l):t.push(i[o]={id:o,parts:[l]})}return t}function o(e,t){var i=f(),n=v[v.length-1];if("top"===e.insertAt)n?n.nextSibling?i.insertBefore(t,n.nextSibling):i.appendChild(t):i.insertBefore(t,i.firstChild),v.push(t);else{if("bottom"!==e.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");i.appendChild(t)}}function r(e){e.parentNode.removeChild(e);var t=v.indexOf(e);t>=0&&v.splice(t,1)}function a(e){var t=document.createElement("style");return t.type="text/css",o(e,t),t}function l(e,t){var i,n,s;if(t.singleton){var o=m++;i=g||(g=a(t)),n=c.bind(null,i,o,!1),s=c.bind(null,i,o,!0)}else i=a(t),n=u.bind(null,i),s=function(){r(i)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media)return;n(e=t)}else s()}}function c(e,t,i,n){var s=i?"":n.css;if(e.styleSheet)e.styleSheet.cssText=y(t,s);else{var o=document.createTextNode(s),r=e.childNodes;r[t]&&e.removeChild(r[t]),r.length?e.insertBefore(o,r[t]):e.appendChild(o)}}function u(e,t){var i=t.css,n=t.media;if(n&&e.setAttribute("media",n),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}var h={},d=function(e){var t;return function(){return"undefined"==typeof t&&(t=e.apply(this,arguments)),t}},p=d(function(){return/msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase())}),f=d(function(){return document.head||document.getElementsByTagName("head")[0]}),g=null,m=0,v=[];e.exports=function(e,t){t=t||{},"undefined"==typeof t.singleton&&(t.singleton=p()),"undefined"==typeof t.insertAt&&(t.insertAt="bottom");var i=s(e);return n(i,t),function(e){for(var o=[],r=0;r<i.length;r++){var a=i[r],l=h[a.id];l.refs--,o.push(l)}if(e){var c=s(e);n(c,t)}for(var r=0;r<o.length;r++){var l=o[r];if(0===l.refs){for(var u=0;u<l.parts.length;u++)l.parts[u]();delete h[l.id]}}}};var y=function(){var e=[];return function(t,i){return e[t]=i,e.filter(Boolean).join("\n")}}()},function(e,t,i){var n=i(223);"string"==typeof n&&(n=[[e.id,n,""]]),i(303)(n,{}),n.locals&&(e.exports=n.locals)},,function(e,t,i){var n,s;n=[i(131),i(1),i(46),i(2),i(14),i(12),i(135),i(32),i(136),i(129),i(4),i(6),i(118),i(84),i(59),i(116),i(41)],s=function(e,t,i,n,s,o,r,a,l,c,u,h,d,p,f,g,m){var v={};return v.api=e,v._=t,v.version=i,v.utils=t.extend(n,s,{canCast:f.available,key:r,extend:t.extend,scriptloader:a,rssparser:g,tea:l,UI:o}),v.utils.css.style=v.utils.style,v.vid=c,v.events=t.extend({},u,{state:h}),v.playlist=t.extend({},d,{item:p}),v.plugins=m,v.cast=f,v}.apply(t,n),!(void 0!==s&&(e.exports=s))},,,,,function(e,t,i){var n,s;n=[i(260),i(48),i(314)],s=function(e,t,n){var s=e.prototype.setup;return e.prototype.setup=function(e,o){e.analytics&&(e.sdkplatform=e.sdkplatform||e.analytics.sdkplatform),s.apply(this,arguments);var r=this._model.get("edition"),a=t(r),l=this._model.get("cast"),c=this;a("casting")&&l&&l.appid&&i.e(4,function(e){var t=i(132);c._castController=new t(c,c._model),c.castToggle=c._castController.castToggle.bind(c._castController)});var u=n.setup();this.once("ready",u.onReady,this),o.getAdBlock=u.checkAdBlock},e}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(135),i(48),i(33),i(88),i(1),i(2),i(126),i(265)],s=function(e,t,n,s,o,r,a,l){function c(e,t,i){if(t){var n=t.client;delete t.client,/\.(js|swf)$/.test(n||"")||(n=a.repo()+i),e[n]=t}}function u(e,i){var n=o.clone(i.get("plugins"))||{},s=i.get("edition"),r=t(s),l=/^(vast|googima)$/,u=/\.(js|swf)$/,h=a.repo(),d=i.get("advertising");if(r("ads")&&d&&(u.test(d.client)?n[d.client]=d:l.test(d.client)&&(n[h+d.client+".js"]=d),delete d.client),r("jwpsrv")){var p=i.get("analytics");o.isObject(p)||(p={}),c(n,p,"jwpsrv.js")}c(n,i.get("ga"),"gapro.js"),c(n,i.get("sharing"),"sharing.js"),c(n,i.get("related"),"related.js"),i.set("plugins",n),e()}function h(t,n){var s=n.get("key")||window.jwplayer&&window.jwplayer.key,o=new e(s),c=o.edition();if(n.set("key",s),n.set("edition",c),"unlimited"===c){var u=r.getScriptPath("jwplayer.js");if(!u)return void l.error(t,"Error setting up player","Could not locate jwplayer.js script tag");i.p=u,r.repo=a.repo=a.loadFrom=function(){return u}}n.updateProviders(),"invalid"===c?l.error(t,"Error setting up player",(void 0===s?"Missing":"Invalid")+" license key"):t()}function d(e,t){var i=t.getProviders(),s=t.get("playlist"),o=t.get("edition"),r=i.required(s,o);n.load(r,o).then(e)}function p(){var e=l.getQueue();return e.LOAD_PROVIDERS={method:d,depends:["CHECK_KEY","FILTER_PLAYLIST"]},e.CHECK_KEY={method:h,depends:["LOADED_POLYFILLS"]},e.FILTER_PLUGINS={method:u,depends:["CHECK_KEY"]},e.FILTER_PLAYLIST.depends.push("CHECK_KEY"),e.LOAD_PLUGINS.depends.push("FILTER_PLUGINS"),e.SETUP_VIEW.depends.push("CHECK_KEY"),e.SEND_READY.depends.push("LOAD_PROVIDERS"),e}return{getQueue:p}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(267),i(306),i(1)],s=function(e,t,i){return window.jwplayer?window.jwplayer:i.extend(e,t)}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[],s=function(){function e(){var e=document.createElement("div");return e.className=i,e.innerHTML="&nbsp;",e.style.width="1px",e.style.height="1px",e.style.position="absolute",e.style.background="transparent",e}function t(){function t(){var e=this,t=e._view.element();t.appendChild(r),s=!0,n()&&e.trigger("adBlock")}function n(){return s?o?!0:(""!==r.innerHTML&&r.className===i&&null!==r.offsetParent&&0!==r.clientHeight||(o=!0),o):!1}var s=!1,o=!1,r=e();return{onReady:t,checkAdBlock:n}}var i="afs_ads";return{setup:t}}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(2),i(4),i(12),i(3),i(1),i(227)],s=function(e,t,i,n,s,o){var r=function(e){this.model=e,this.setup()};return s.extend(r.prototype,n,{setup:function(){this.destroy(),this.skipMessage=this.model.get("skipText"),this.skipMessageCountdown=this.model.get("skipMessage"),this.setWaitTime(this.model.get("skipOffset"));var t=o();this.el=e.createElement(t),this.skiptext=this.el.getElementsByClassName("jw-skiptext")[0],this.skipAdOnce=s.once(this.skipAd.bind(this)),new i(this.el).on("click tap",s.bind(function(){this.skippable&&this.skipAdOnce()},this)),this.model.on("change:duration",this.onChangeDuration,this),this.model.on("change:position",this.onChangePosition,this),this.onChangeDuration(this.model,this.model.get("duration")),this.onChangePosition(this.model,this.model.get("position"))},updateMessage:function(e){this.skiptext.innerHTML=e},updateCountdown:function(e){this.updateMessage(this.skipMessageCountdown.replace(/xx/gi,Math.ceil(this.waitTime-e)))},onChangeDuration:function(t,i){if(i){if(this.waitPercentage){if(!i)return;this.itemDuration=i,this.setWaitTime(this.waitPercentage),delete this.waitPercentage}e.removeClass(this.el,"jw-hidden")}},onChangePosition:function(t,i){this.waitTime-i>0?this.updateCountdown(i):(this.updateMessage(this.skipMessage),this.skippable=!0,e.addClass(this.el,"jw-skippable"))},element:function(){return this.el},setWaitTime:function(t){if(s.isString(t)&&"%"===t.slice(-1)){var i=parseFloat(t);return void(this.itemDuration&&!isNaN(i)?this.waitTime=this.itemDuration*i/100:this.waitPercentage=t)}s.isNumber(t)?this.waitTime=t:"string"===e.typeOf(t)?this.waitTime=e.seconds(t):isNaN(Number(t))?this.waitTime=0:this.waitTime=Number(t)},skipAd:function(){this.trigger(t.JWPLAYER_AD_SKIPPED)},destroy:function(){this.el&&(this.el.removeEventListener("click",this.skipAdOnce),this.el.parentElement&&this.el.parentElement.removeChild(this.el)),delete this.skippable,delete this.itemDuration,delete this.waitPercentage}}),r}.apply(t,n),!(void 0!==s&&(e.exports=s))},function(e,t,i){var n,s;n=[i(296),i(1)],s=function(e,t){var i=function(){};return t.extend(i.prototype,e.prototype,{buildArray:function(){var t=e.prototype.buildArray.apply(this,arguments);if(this.model.get("abouttext")){t.items[0].showLogo=!1,t.items.push(t.items.shift());var i={title:this.model.get("abouttext"),link:this.model.get("aboutlink")||t.items[0].link};t.items.unshift(i)}return t}}),i}.apply(t,n),!(void 0!==s&&(e.exports=s))}])}),function(){$(document).ready(function(){function e(){function e(){return++e.currentCount}return e.currentCount=0,e}function t(e){e.requestFullScreen?e.requestFullScreen():e.mozRequestFullScreen?e.mozRequestFullScreen():e.webkitRequestFullScreen?e.webkitRequestFullScreen():e.msRequestFullscreen&&e.msRequestFullscreen()}function i(){document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():document.msCancelRequestFullscreen&&document.msCancelRequestFullscreen()}function n(){$(".hint").each(function(){var e=$(this).parent().data("hint-element"),t=$("body").find(".js-"+e).offset();$(this).css({top:t.top-$(window).scrollTop()-100,left:t.left-130})})}function s(){var e=0,t=$(".drop-block").find(".js-drop-tags").length,i=0;$(".btn-container__cell").each(function(){var t=$(this),i=$(this).data("group-tags");t.children(".js-drop-tags").each(function(){var t=$(this).data("group-tags");t===i?e++:e--})}),i=e/t,i>0?$(".js-show-burger").css({opacity:i}):$(".js-show-burger").css({opacity:0})}var o={Android:function(){return navigator.userAgent.match(/Android/i)},BlackBerry:function(){return navigator.userAgent.match(/BlackBerry/i)},iOS:function(){return navigator.userAgent.match(/iPhone|iPad|iPod/i)},Opera:function(){return navigator.userAgent.match(/Opera Mini/i)},Windows:function(){return navigator.userAgent.match(/IEMobile/i)},any:function(){return o.Android()||o.BlackBerry()||o.iOS()||o.Opera()||o.Windows()}};o.any()&&jwplayer().on("beforeComplete",function(){$(".jw-video").parents(".js-nav-section").next(".js-nav-section").find(".hide-section:hidden:first").fadeIn("slow"),$("html, body").animate({scrollTop:document.body.scrollHeight},300)}),$(".fancybox").fancybox(),$(".hint").on("click",function(){$(this).parent(".modal").hide(),$(".modal-backdrop").remove()}),$(window).resize(function(){n()});var r=e();$(".js-start-course").on("click",function(e){var t=r();e.preventDefault(),$(".nav-sidebar__row").children().eq(1).removeClass("disable"),$(".top-bg__scroll .btn-scroll").show().animate({opacity:"1",bottom:70},1e3),o.any()?($(this).parents(".js-nav-section").next(".js-nav-section").find(".hide-section:hidden:first").fadeIn("slow"),$(".js-nav-section_double").find(".hide-section:hidden:first").fadeIn("slow"),$("body,html").animate({scrollTop:$("#navElement2").offset().top},"slow")):($(this).parents(".js-nav-section").next(".js-nav-section").find(".hide-section:hidden:first").fadeIn("slow"),2>t&&setTimeout(function(){n(),$("#myModal").modal()},1e3))}),$(".js-btn-scroll").on("click",function(e){if(e.preventDefault(),$(this).hasClass("disable"))return!1;var t=$(this).attr("href");$(this).removeClass("js-block-navbar-menu"),0!==$(""+t).children(".hide-section:hidden").length?$(""+t).children(".hide-section:hidden").fadeIn("slow"):$(""+t).fadeIn("slow"),$("body,html").animate({scrollTop:$(""+t).offset().top},"slow")});var a=e();$(".js-hint-scroll").on("click",function(){var e=a();2>e&&!o.any()&&setTimeout(function(){n(),$("#myModal3").modal()},3e3)});var l=e();$(".course-info .js-btn-scroll").on("click",function(){var e=l();2>e&&!o.any()&&setTimeout(function(){n(),$("#myModal2").modal()},2e3)}),window.sr=ScrollReveal({reset:!1}),sr.reveal(".success-block__quote",{duration:1e3}),sr.reveal(".success-block__sign",{duration:500,delay:1e3}),sr.reveal(".course-info__header",{duration:1e3}),sr.reveal(".course-info__discription",{duration:500,delay:2e3}),sr.reveal(".course-info .btn-big",{duration:500,delay:4e3}),sr.reveal(".start-course .green-flag",{duration:1e3},50),sr.reveal(".rules h3",{duration:1e3}),sr.reveal(".rules__text",{duration:500,delay:1e3}),sr.reveal(".rules__list",{duration:500,delay:1500}),sr.reveal(".rules__btn",{duration:500,delay:2e3});var c,u=$(".nav-sidebar__row"),h=u.find(".element-menu"),d=h.map(function(){var e=$($(this).attr("href"));return e.length?e:void 0});h.click(function(e){if(e.preventDefault(),$(this).hasClass("disable")||$(this).next().hasClass("disable")&&0===$(this).index())return!1;var t=$(this).attr("href"),i="#"===t?0:$(t).offset().top;0===$("body").find(""+t).prev().find(".js-block-navbar-menu").length&&($("body").find(""+t+">.hide-section:hidden:first").fadeIn("slow"),$("html, body").stop().animate({scrollTop:i},300))}),$(window).scroll(function(){var e=$(this).scrollTop(),t=d.map(function(){return $(this).offset().top<=e?this:void 0});t=t[t.length-1];var i=t&&t.length?t[0].id:"";c!==i&&(c=i,h.removeClass("element-menu_current").filter(".element-menu[href='#"+i+"']").addClass("element-menu_current").next().removeClass("disable"))}),$(".js-load-message").on("click",function(e){if($(this).hasClass("btn-disable"))return!1;var t=$(this).parents(".message-block"),i=$(this).attr("href");if(e.preventDefault(),t.find(".single-message:hidden:first").hasClass("single-message_checkbox")&&t.find(".js-load-text").addClass("btn-disable"),0===t.find(".single-message:hidden:first").length){if(t.find(".js-load-text").removeClass("js-block-navbar-menu").hide(),t.find(".js-load-image").removeClass("js-block-navbar-menu").hide(),t.find(".js-load-content").removeClass("js-block-navbar-menu"),"#"===i)var n=$(this).parents(".js-nav-section").next(".js-nav-section").find(".hide-section");else var n=$(i);n.fadeIn("slow"),$("html, body").animate({scrollTop:n.offset().top},300)}else{var s=0,o=!1;if(t.find(".single-message:visible").each(function(){s=s+$(this).outerHeight()+10}),t.parents().siblings(".interactive-avatar").find(".avatar__image").animate({top:s},"slow"),t.find(".single-message").removeClass("tail"),t.find(".single-message:hidden:first").fadeIn("slow").addClass("tail"),$("html, body").animate({scrollTop:t.offset().top+s-30},300),t.find(".single-message:hidden:first").hasClass("single-message_img")&&(o=!0),0===t.find(".single-message:hidden:first").length)return t.find(".js-load-text").hide(),t.find(".js-load-image").hide(),void t.find(".js-load-content").show();o===!0?(t.find(".js-load-text").hide(),t.find(".js-load-image").show()):(t.find(".js-load-image").hide(),t.find(".js-load-text").show())}}),$(".flag-row").on("click",".green-flag_tap",function(){var e=0;$(this).removeClass("green-flag_tap"),$(this).next(".green-flag_disable").removeClass("green-flag_disable").addClass("green-flag_tap"),o.any()&&($(".green-flag__text:visible").each(function(){e=e+$(this).outerHeight()+10}),$("html, body").animate({scrollTop:$(".flag-row").offset().top+e-30},1e3))}),$(".green-flag_last").on("click",function(){return $(".green-flag_disable").length>0?!1:($(this).parents(".js-nav-section").next(".js-nav-section").find(".hide-section:hidden").fadeIn("slow"),void setTimeout(function(){$(".last-message").fadeIn(),$("html, body").animate({scrollTop:document.body.scrollHeight},300)},2e3))}),$(".btn-disable").on("click",function(e){e.preventDefault()}),$(".checkbox-success").on("click",function(){setTimeout(function(){var e=$(this).parents(".js-flag-check").find('input[type="checkbox"]:checked').length,t=$(this).parents(".js-flag-check").find('input[type="checkbox"]').length;console.log(e+" of "+t),e===t?($(this).parents(".js-flag-check").find(".js-relation-checkbox").removeClass("btn-disable"),$(this).parents(".js-flag-check").find(".js-relation-checkbox.btn-next-slide").unbind("click")):($(this).parents(".js-flag-check").find(".js-relation-checkbox").addClass("btn-disable"),$(this).parents(".js-flag-check").find(".js-relation-checkbox.btn-next-slide").bind("click",function(e){e.preventDefault()}))}.bind(this),100)});var p=!1;$(".js-full-screen").on("click",function(e){e.preventDefault(),p===!1?(t(document.documentElement),p=!0):(i(),p=!1)}),$(".js-load-test").on("click",function(){!function(){var e=0;$(".single-answer:visible").each(function(){var t=$(this).height();t>e&&(e=t)}),$(".single-answer:visible").height(e)}()}),function(){for(var e=$(".test-block__questions").find(".test-block__single-element").length,t=0;e>t;t++)$(".text-block__condition").append('<div class="step "></div>'),$(".step").css("width",""+100/e+"%")}();var f=e();$(".test-block__questions .single-answer").on("click",function(){var e=$(this).parents(".test-block"),t=$(this).parents(".test-block__single-element"),i=$(this).text(),n=t.data("number-questions");t.find(".single-message.tail_right").text(i),$(this).data("right-answer")?(t.find(".annotation-right").show(),t.find(".single-message.tail_right").addClass("success"),setTimeout(function(){$(this).addClass("active"),$(this).parents(".test-block").find(".step").eq(n).addClass("step_right")}.bind(this),600),f()):(t.find(".annotation-wrong").show(),t.find(".single-message.tail_right").addClass("error"),setTimeout(function(){$(this).addClass("active"),$(this).parents(".test-block").find(".step").eq(n).addClass("step_wrong")}.bind(this),600),""==t.find(".error-hint").text()&&setTimeout(function(){t.find(".error-hint").text("Обрати внимание, ты получил от пользователя односложный ответ, а это признак закрытого вопроса. Будь внимательнее в следующем задании."),t.find(".error-hint").show()},1600)),""!==t.find(".error-hint").text()&&setTimeout(function(){t.find(".error-hint").show()},1600),t.find(".js-user-answer").show(),t.find(".test-block__answer").hide(),setTimeout(function(){t.find(".test-block__annotation").fadeIn("slow")},1600),setTimeout(function(){n+1!==$(".test-block__single-element").length?(t.next().show(),function(){var e=0;t.next().find(".single-answer").each(function(){var t=$(this).height();t>e&&(e=t)}),t.next().find(".single-answer").height(e)}(),$("html, body").animate({scrollTop:document.body.scrollHeight},1300)):setTimeout(function(){$(".count-right-answer").text(f.currentCount),$(".count-all-answer").text(n+1),100*f.currentCount/(+n+1)>60?$("#testResult").modal():($("#testResultFail").modal(),$(".js-repeat-test").on("click",function(){f.currentCount=0,e.find(".step").removeClass("step_right step_wrong"),e.find(".test-block__single-element").not(".test-block__single-element:first-child").hide(),e.find(".single-answer").removeClass("active"),e.find(".single-message.tail_right").removeClass("success error"),
e.find(".error-hint").remove(),e.find(".test-block__annotation").hide(),e.find(".annotation-right").hide(),e.find(".annotation-wrong").hide(),e.find(".js-user-answer").hide(),e.find(".test-block__single-element .test-block__answer").show(),$("#testResultFail").modal("hide")}))},2e3)},2400)}),$(".js-close-modal").on("click",function(){$(this).parents(".modal").modal("hide"),$(this).removeClass("js-block-navbar-menu")}),$(".sortable").sortable({connectWith:".sortable"}),$(".js-drop-tags").draggable({connectToSortable:".sortable",revert:"invalid",zIndex:999,start:function(e,t){$(".btn-container__cell").addClass("success")},stop:function(e,t){s(),$(this).find("br").remove(),$(".btn-container__cell").removeClass("success"),$(".btn-container__cell").each(function(){var e=$(this),t=$(this).data("group-tags"),i=0;0===$(this).children(".js-drop-tags").length?e.removeClass("error"):($(this).children(".js-drop-tags").each(function(){var e=$(this).data("group-tags");e!==t&&i++}),i>0?e.addClass("error"):e.removeClass("error"))}),0!==$(".drop-block__bottom").find(".js-drop-tags").length||$(".btn-container__cell").hasClass("error")||($(".drop-block__bottom").removeClass("js-block-navbar-menu"),$(".btn-container__cell").addClass("success"),$(".sortable").sortable("disable"))}}),$("ul, li").disableSelection()})}(),function(){$(document).ready(function(){jwplayer().on("ready",function(){$(".jw-controlbar-right-group").prepend('<div class="jw-icon  jw-icon-tooltip jw-button-color jw-reset jw-icon-remote"></div>'),$("#contactVideo .jw-controlbar-center-group").prepend('<div class="video-menu"><div class="video-menu_element disable" data-seek="10"></div><div class="video-menu_element disable" data-seek="28"></div><div class="video-menu_element disable" data-seek="end"></div></div>'),setTimeout(function(){$(".video-menu_element").each(function(){var e=710,t=jwplayer().getDuration(),i=$(this).data("seek");console.log(e+","+t+","+i);var n;"end"===i?(n=e-15,console.log(n)):(n=e*+i/t,console.log(n)),$(this).css("left",n+"px")})},1e3),$(".jw-icon-remote").on("click",function(){var e=jwplayer().getPosition();10>e?jwplayer().seek(0):jwplayer().seek(e-10)}),$(".video-menu_element").on("click",function(){var e=$(this).data("seek");$(this).hasClass("disable")||("end"===e?jwplayer().seek(jwplayer().getDuration()):jwplayer().seek(+e))}),$(".js-play-video").on("click",function(e){return e.preventDefault(),$(this).hasClass("btn-disable")?!1:($(this).parents(".video-interactive__content").hide(),$(this).parents(".video-step").hide(),void($(this).hasClass("js-stop-video")?jwplayer().stop():jwplayer().play()))}),$(".video-interactive__content .single-answer").on("click",function(){var e=$(this).find(".js-answer-annotation").text();$(".video-interactive__content .single-answer").removeClass("active"),$(this).addClass("active");var t=$(this).data("answer-value");2===t?($(this).addClass("success"),$(".right-answer__right .btn").removeClass("btn-disable"),$(".answer-sign").removeClass("error"),$(".answer-sign").addClass("right")):($(this).addClass("error"),$(".answer-sign").removeClass("right"),$(".answer-sign").addClass("error")),$(this).parents(".video-test").find(".answer-text").text(e),$(this).parents(".video-test").find(".video-test__right-answer").animate({opacity:1},500)})})})}();
//# sourceMappingURL=data:application/json;base64,
